{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/53","result":{"data":{"esaPost":{"number":53,"relative_category":"blog/frontend","fields":{"title":"Hyper-VモードでLinux OSとAndroid OSを同時使用する","excerpt":"Xamarinの開発環境を模索しています。普段はLinux/Hyper-V上でAPIを開発しているのですが、Hyper-VとAndroid Emulatorとの組み合わせがまだ整備されておらず一筋縄ではいかなかったのでその備忘となります。   > PROBLEMPROBLEM \n\n- 普段の開発環境CentOS/Hyper-Vを変更することなく、Xamarinをつかいたい CentOS/Hyper-V上にAPIサーバーをたてて、XamarinアプリからAPIをたたく構成 \n- CentOS/Hyper-V上にAPIサーバーをたてて、XamarinアプリからAPIをたたく構成\n- Android EmulatorはIntel HAXM＋ホスト型Hypervisor前提のものが多い VirtualBoxなどホスト型HypervisorだとVMがよくクラッシュしてつらい なので、APIサーバーはHyper-Vでたてている また、オフィス移動が多いのでネットワーク環境はおもにWi-Fi（無線LAN）を使用している \n- VirtualBoxなどホスト型HypervisorだとVMがよくクラッシュしてつらい なので、APIサーバーはHyper-Vでたてている また、オフィス移動が多いのでネットワーク環境はおもにWi-Fi（無線LAN）を使用している \n- なので、APIサーバーはHyper-Vでたてている\n- また、オフィス移動が多いのでネットワーク環境はおもにWi-Fi（無線LAN）を使用している   > SOLUTIONSOLUTION \n\nというわけで、Hyper-Vでイメージ管理するVisual Studio Emulator for Android（VS Emulator）を使うことにしました。これで何もせずに解決かというそうではなく、まず前提としてネットワーク上の注意があります。 \n\n1. VS EmulatorはHyper-VのNetwork AdapterをEthernet（有線LAN）しか使用できません。Wi-Fi（無線LAN）は使用できません\n2. VS Emulatorの各デバイス(Android VM）を初回起動させる際に、有線LANと無線LAN双方からネットワークにつなげていると失敗します   > Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法 \n\nその上で、同時使用する方法ですが、先ほどネットワークの注意を考慮すると下記のような流れになります。 \n\n1. Stop-VM CentOS 現在稼働しているLinux VMを停止します\n2. Disable-NetAdapter Wi-Fi 無線LANの接続を停止し、有線LANのみの接続にします\n3. VS EmulatorからAndroid VMを初回起動します、そうすると有線LAN用のvEthernetが作成されます\n4. Enable-NetAdapter Wi-Fi - 無線LAN、有線LAN、双方を接続します\n5. Start-VM CentOS - Linux VMを起動します   > WRAPUPWRAPUP \n\nWindows Subsystems for Linux等、Windowsの仮想化環境はまだ発展途上にあります。おそらく今回の対処方法は一時的なものに過ぎず、こうしたネットワーク上の注意を意識することなく解決できると思われます。しばし様子見です。","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/975d5b4b-5e73-4f29-8f36-c9f951c35d17.png"},"wip":false,"body_md":"<img width=\"800\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/975d5b4b-5e73-4f29-8f36-c9f951c35d17.png\">\r\n\r\nXamarinの開発環境を模索しています。普段はLinux/Hyper-V上でAPIを開発しているのですが、Hyper-VとAndroid Emulatorとの組み合わせがまだ整備されておらず一筋縄ではいかなかったのでその備忘となります。\r\n\r\n# PROBLEM\r\n- 普段の開発環境CentOS/Hyper-Vを変更することなく、Xamarinをつかいたい\r\n  - CentOS/Hyper-V上にAPIサーバーをたてて、XamarinアプリからAPIをたたく構成\r\n- Android EmulatorはIntel HAXM＋ホスト型Hypervisor前提のものが多い\r\n  - VirtualBoxなどホスト型HypervisorだとVMがよくクラッシュしてつらい\r\n    - なので、APIサーバーはHyper-Vでたてている\r\n    - また、オフィス移動が多いのでネットワーク環境はおもにWi-Fi（無線LAN）を使用している\r\n\r\n# SOLUTION\r\nというわけで、Hyper-Vでイメージ管理するVisual Studio Emulator for Android（VS Emulator）を使うことにしました。これで何もせずに解決かというそうではなく、まず前提としてネットワーク上の注意があります。\r\n\r\n1. VS EmulatorはHyper-VのNetwork AdapterをEthernet（有線LAN）しか使用できません。Wi-Fi（無線LAN）は使用できません\r\n2. VS Emulatorの各デバイス(Android VM）を初回起動させる際に、有線LANと無線LAN双方からネットワークにつなげていると失敗します\r\n\r\n## Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法\r\nその上で、同時使用する方法ですが、先ほどネットワークの注意を考慮すると下記のような流れになります。\r\n\r\n1. `Stop-VM CentOS` 現在稼働しているLinux VMを停止します\r\n2. `Disable-NetAdapter Wi-Fi` 無線LANの接続を停止し、有線LANのみの接続にします\r\n3. VS EmulatorからAndroid VMを初回起動します、そうすると有線LAN用のvEthernetが作成されます\r\n4. `Enable-NetAdapter Wi-Fi` - 無線LAN、有線LAN、双方を接続します\r\n5. `Start-VM CentOS` - Linux VMを起動します\r\n\r\n# WRAPUP\r\nWindows Subsystems for Linux等、Windowsの仮想化環境はまだ発展途上にあります。おそらく今回の対処方法は一時的なものに過ぎず、こうしたネットワーク上の注意を意識することなく解決できると思われます。しばし様子見です。","body_html":"<a href=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/975d5b4b-5e73-4f29-8f36-c9f951c35d17.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"800\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/975d5b4b-5e73-4f29-8f36-c9f951c35d17.png\"></a>\n<p data-sourcepos=\"3:1-3:265\">Xamarinの開発環境を模索しています。普段はLinux/Hyper-V上でAPIを開発しているのですが、Hyper-VとAndroid Emulatorとの組み合わせがまだ整備されておらず一筋縄ではいかなかったのでその備忘となります。</p>\n<h1 data-sourcepos=\"5:1-5:9\" id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"6:1-12:0\">\n<li data-sourcepos=\"6:1-7:97\">普段の開発環境CentOS/Hyper-Vを変更することなく、Xamarinをつかいたい\n<ul data-sourcepos=\"7:3-7:97\">\n<li data-sourcepos=\"7:3-7:97\">CentOS/Hyper-V上にAPIサーバーをたてて、XamarinアプリからAPIをたたく構成</li>\n</ul>\n</li>\n<li data-sourcepos=\"8:1-12:0\">Android EmulatorはIntel HAXM＋ホスト型Hypervisor前提のものが多い\n<ul data-sourcepos=\"9:3-12:0\">\n<li data-sourcepos=\"9:3-12:0\">VirtualBoxなどホスト型HypervisorだとVMがよくクラッシュしてつらい\n<ul data-sourcepos=\"10:5-12:0\">\n<li data-sourcepos=\"10:5-10:61\">なので、APIサーバーはHyper-Vでたてている</li>\n<li data-sourcepos=\"11:5-12:0\">また、オフィス移動が多いのでネットワーク環境はおもにWi-Fi（無線LAN）を使用している</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"13:1-13:10\" id=\"2-0-0\" name=\"2-0-0\">\n<a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"14:1-14:271\">というわけで、Hyper-Vでイメージ管理するVisual Studio Emulator for Android（VS Emulator）を使うことにしました。これで何もせずに解決かというそうではなく、まず前提としてネットワーク上の注意があります。</p>\n<ol data-sourcepos=\"16:1-18:0\">\n<li data-sourcepos=\"16:1-16:142\">VS EmulatorはHyper-VのNetwork AdapterをEthernet（有線LAN）しか使用できません。Wi-Fi（無線LAN）は使用できません</li>\n<li data-sourcepos=\"17:1-18:0\">VS Emulatorの各デバイス(Android VM）を初回起動させる際に、有線LANと無線LAN双方からネットワークにつなげていると失敗します</li>\n</ol>\n<h2 data-sourcepos=\"19:1-19:86\" id=\"2-1-0\" name=\"2-1-0\">\n<a class=\"anchor\" id=\"Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法\" name=\"Hyper-V%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7Linux%20OS%EF%BC%88VM%EF%BC%89%E3%81%A8Android%20OS%EF%BC%88VM%EF%BC%89%E3%82%92%E5%90%8C%E6%99%82%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\" href=\"#Hyper-V%E3%83%A2%E3%83%BC%E3%83%89%E3%81%A7Linux%20OS%EF%BC%88VM%EF%BC%89%E3%81%A8Android%20OS%EF%BC%88VM%EF%BC%89%E3%82%92%E5%90%8C%E6%99%82%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法\"> &gt; Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法</span></a>Hyper-VモードでLinux OS（VM）とAndroid OS（VM）を同時使用する方法</h2>\n<p data-sourcepos=\"20:1-20:147\">その上で、同時使用する方法ですが、先ほどネットワークの注意を考慮すると下記のような流れになります。</p>\n<ol data-sourcepos=\"22:1-27:0\">\n<li data-sourcepos=\"22:1-22:70\">\n<code>Stop-VM CentOS</code> 現在稼働しているLinux VMを停止します</li>\n<li data-sourcepos=\"23:1-23:99\">\n<code>Disable-NetAdapter Wi-Fi</code> 無線LANの接続を停止し、有線LANのみの接続にします</li>\n<li data-sourcepos=\"24:1-24:117\">VS EmulatorからAndroid VMを初回起動します、そうすると有線LAN用のvEthernetが作成されます</li>\n<li data-sourcepos=\"25:1-25:79\">\n<code>Enable-NetAdapter Wi-Fi</code> - 無線LAN、有線LAN、双方を接続します</li>\n<li data-sourcepos=\"26:1-27:0\">\n<code>Start-VM CentOS</code> - Linux VMを起動します</li>\n</ol>\n<h1 data-sourcepos=\"28:1-28:8\" id=\"3-0-0\" name=\"3-0-0\">\n<a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"29:1-29:299\">Windows Subsystems for Linux等、Windowsの仮想化環境はまだ発展途上にあります。おそらく今回の対処方法は一時的なものに過ぎず、こうしたネットワーク上の注意を意識することなく解決できると思われます。しばし様子見です。</p>\n","tags":["android","smartphone","visual-studio-emulator-for-android","surface-book","android-emulator"],"updated_at":"2021-01-16T14:00:46+09:00","childPublishedDate":{"published_on":"2017-03-09T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_ef5f024307008aa399b91f87fa5f64e8.jpg"}},"relatedPosts":{"edges":[{"node":{"number":57,"relative_category":"blog/hardware","fields":{"title":"Surface Bookの画面端に黄色いシミがでる","excerpt":"2016年に購入したSurface Bookが1年も経たずに画面端に黄色いシミが出るようになりました。調べてみると何例か症状として記事が上がっていたのでMicrosoftサポートに問い合わせました。   > PROBLEMPROBLEM \n\n- Surface Bookの画面端に黄色いシミがでる 液晶の問題かOSの問題かで対応がかわってくるので確認方法が知りたい \n- 液晶の問題かOSの問題かで対応がかわってくるので確認方法が知りたい   > SOLUTIONSOLUTION \n\nというわけで、Surface BookのUEFI（ファームウェア画面）で黄色いシミがでるか確認し、解決を試みました。下記のような流れでサポートと話を進めました。 \n\n- もしUEFIでシミがあったら、サポート相談して機器交換\n- もしUEFIでシミがなかったら、OSを初期化 もしOS初期化してシミがなかったら、問題解決 もしOS初期化してシミがあったら、サポート相談 \n- もしOS初期化してシミがなかったら、問題解決\n- もしOS初期化してシミがあったら、サポート相談   > UEFIでの確認の流れUEFIでの確認の流れ \n\nまずは、下記の方法でUEFIに黄色いシミが出ているか確認しました。私の場合は黄色いシミが出なかったです。 \n\n1. Surfaceをシャットダウンした状態で、電源ボタンと音量を上げるボタンを同時に長押し\n2. 英語表記の「UEFI画面（背景が白い画面）」が表示される\n3. UEFI画面で黄色いシミがあるか確認する（あったら、サポート相談して機器交換）   > OS初期化の流れOS初期化の流れ \n\n次に、下記方法でOS初期を試みました。 \n\n1. WindowsキーとIキー（アルファベット）を一緒に押して設定メニューを表示させる\n2. [更新とセキュリティー] を選択\n3. [回復] を選択\n4. [このPCを初期状態に戻す] の項目の［開始する] を選択\n5. [すべて削除する] を選択\n6. [ファイルの削除のみ行う] を選択\n7. [初期状態に戻す] を選択\n8. OS初期化が終わった後、黄色いシミがあるか確認する（あったら、サポート相談）   > WRAPUPWRAPUP \n\n私の場合はOS初期化で解決できず、PC端末自体を交換と相成りました。ちょうどサポート期間間際だったので不幸中の幸いでした。Surface Bookは販売してすぐ買ったので初期ロットの不良に当たったのでしょう。"},"name":"[2017-06-24]Surface Bookの画面端に黄色いシミがでる","tags":["surface-book","windows"],"childPublishedDate":{"published_on":"2017-06-24T00:00:00.000Z","published_on_unix":1498262400}}},{"node":{"number":51,"relative_category":"blog/hardware","fields":{"title":"Brother HL-L2365DWを無線LANで設定する","excerpt":"AmazonでBrother HL-L2365DWを購入したのですが、日本語のセットアップソフトだと無線LANから設定できないことに気づきました。今更プリンター用にUSBや有線LANを準備するのも手間なので調査しました。   > PROBLEMPROBLEM \n\n- Amazonのモノクロレーザープリンター売れ筋1位のBrother HL-L2365DWを購入したが、日本語のセットアップソフトだと設定方法がUSBあるいは有線LANしかない\n- 当該製品にはプリンター用USBは同梱されていない\n- 有線LANは手元にあるが、複数台設定するのはめんどう\n- ちなみにOSの基本言語を英語（US）にした状態で日本語のBrother Utilitiesをインストールすると文字化けする   > SOLUTIONSOLUTION \n\nというわけで、「英語（US）のセットアップソフト」を使うことで、無線LANからセットアップできた上、Brother Utilitiesの文字化けも解消しました。   > 手順手順 \n\n1. HL-L2360DWのセットアップソフトをダウンロード\n2. セットアップソフトを起動\n3. 言語をEnglish\n4. Connection TypeをWireless Network Connectionに選択\n5. このあとはデフォルトのままで選択していく\n6. しばらくすると、Wireless SetupウィザードになるのでAOSSなどプリンタ 本機とルーターをつなげる（すでにされている場合はウィザードは出てこ ない）\n7. （成功すると）Brother machine you want to installリストに当該機器 が表示されるので選択\n8. あとはデフォルトのまま選択クリックして終了   > WRAPUPWRAPUP \n\nたまたまBrotherのグローバルサイトから英語版のセットアップソフトを使ったら上手くいったので良かったですが、日本語のソフトの出来の悪さに辟易しました。もうそういう時代なのでしょうね。"},"name":"[2017-02-06]Brother HL-L2365DWを無線LANで設定する","tags":["brother"],"childPublishedDate":{"published_on":"2017-02-06T00:00:00.000Z","published_on_unix":1486339200}}},{"node":{"number":55,"relative_category":"blog/backend","fields":{"title":"PositiveSSLをHerokuに適用する","excerpt":"年に1回のSSL更新のイベントです。毎年同じことをすれば良いかというとそうでもなく、販社と卸の都合でSSLの購入方法が微妙に変わります。とは言え、毎年一から調べ直すのも手間なので備忘として記しておきます。   > PROBLEMPROBLEM \n\n- HerokuのSSLの期限がきた   > SOLUTIONSOLUTION \n\n- というわけで、いつも使っているSSL販売代理店SSLs.com（NameCheap社）でPositiveSSL（運用Comodo社）を購入しHerokuに適用します。   > HOWTOHOWTO \n\n1. 証明書を購入する SSL販売代理店であればどこでもいいのですが、昔から使っているので \n2. SSL販売代理店であればどこでもいいのですが、昔から使っているので\n3. 秘密鍵と署名リクエストをつくる 秘密鍵 openssl genrsa -des3 -out server.orig.key 2048 秘密鍵パスワードなしopenssl rsa -in server.orig.key -out server.key 署名リクエスト openssl req -new -key server.key -out server.csr \n4. 秘密鍵 openssl genrsa -des3 -out server.orig.key 2048 \n5. 秘密鍵パスワードなしopenssl rsa -in server.orig.key -out server.key \n6. 署名リクエスト openssl req -new -key server.key -out server.csr \n7. 証明書発行を申請する SSL販売代理店より署名リクエストserver.csrと関連情報を送信します \n8. SSL販売代理店より署名リクエストserver.csrと関連情報を送信します\n9. ドメイン保持の証明をする PositiveSSLの運用会社Comodoに対しドメイン保持の証明します 証明方法はメールを受信する、あるいは、Webサイトにプレーンテキストを設置するかの2択になります \n10. PositiveSSLの運用会社Comodoに対しドメイン保持の証明します\n11. 証明方法はメールを受信する、あるいは、Webサイトにプレーンテキストを設置するかの2択になります\n12. Heroku用の証明書をつくる 証明タスクをこなししばらくすると、Comodo社より複数の証明書が送られてきます Heroku用に証明書をつくる cat www_example_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt > server.crt \n13. 証明タスクをこなししばらくすると、Comodo社より複数の証明書が送られてきます\n14. Heroku用に証明書をつくる cat www_example_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt > server.crt \n15. Herokuに証明書を適用する 新規で適用する場合は次のコマンドを実行します heroku addons:add ssl:endpoint heroku certs:add server.crt server.key 更新する場合は次のコマンドを実行します heroku certs:update server.crt server.key \n16. 新規で適用する場合は次のコマンドを実行します heroku addons:add ssl:endpoint heroku certs:add server.crt server.key \n17. heroku addons:add ssl:endpoint\n18. heroku certs:add server.crt server.key\n19. 更新する場合は次のコマンドを実行します heroku certs:update server.crt server.key \n20. heroku certs:update server.crt server.key   > WRAPUPWRAPUP \n\nこのあたりが自動化されれば良いと思いつつ、自動化されたらこのあたりを調べるモチベーションがなくなるので年に一回のリハビリイベントとして位置づけておきます、はい。"},"name":"[2017-04-23]PositiveSSLをHerokuに適用する","tags":[],"childPublishedDate":{"published_on":"2017-04-23T00:00:00.000Z","published_on_unix":1492905600}}}]}},"pageContext":{"number":53}},"staticQueryHashes":[]}