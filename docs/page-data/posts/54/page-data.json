{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/54","result":{"data":{"esaPost":{"number":54,"relative_category":"blog/frontend","fields":{"title":"Xamarin開発環境をととのえる","excerpt":"Xamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。   > PROBLEMPROBLEM \n\n- Xamarin開発環境がサーバー側のそれとかい離している Visual Studio Community 2015の動作がもっさりしている 適切な開発フローがわからない 適切なアプリケーションフレームワークがわからない 適切なXAMLプレビュワーがわからない 適切なAndroidエミュレーターがわからない \n- Visual Studio Community 2015の動作がもっさりしている\n- 適切な開発フローがわからない\n- 適切なアプリケーションフレームワークがわからない\n- 適切なXAMLプレビュワーがわからない\n- 適切なAndroidエミュレーターがわからない   > SOLUTIONSOLUTION \n\nというわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。   > 開発フロー開発フロー \n\nまず、想定している開発フローは下記の通り。 \n\n- テスト駆動開発 デバッグ エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう アウトプット - Debug.WriteLineなどの確認 イミディエイト - 変数の追跡 C# REPL - C#やパッケージの動作確認 XAMLのプレビュー - いらない子 テスト 単体テスト - NUnit UIテスト - 保留 \n- デバッグ エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう アウトプット - Debug.WriteLineなどの確認 イミディエイト - 変数の追跡 C# REPL - C#やパッケージの動作確認 XAMLのプレビュー - いらない子 \n- エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう\n- アウトプット - Debug.WriteLineなどの確認\n- イミディエイト - 変数の追跡\n- C# REPL - C#やパッケージの動作確認\n- XAMLのプレビュー - いらない子\n- テスト 単体テスト - NUnit UIテスト - 保留 \n- 単体テスト - NUnit\n- UIテスト - 保留\n- Github Flowにそったデプロイ featureブランチをきってプルリクエストをたてる 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。 CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 Appストアへデプロイ Android iOS UWP \n- featureブランチをきってプルリクエストをたてる\n- 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。 CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 \n- CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 \n- Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。\n- Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。\n- Appストアへデプロイ Android iOS UWP \n- Android\n- iOS\n- UWP \n\nちなみにWerckerでのfeatureブランチなどの後片付けはこんな感じです。masterマージのタイミングで走らせます。   yaml \n\nbox: ruby:2.4.0 build: steps: - add-ssh-key: host: github.com keyname: GITHUB - add-to-known_hosts: hostname: github.com fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 - script: name: Add git-tag code: | _tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S) git remote add origin git@github.com:nabinno/utagaki.git git config --global user.email 'wercker@blahfe.com' git config --global user.name 'Wercker Bot' git tag -a $_tag master -m 'wercker deploy' git push origin $_tag after-steps: - wantedly/pretty-slack-notify: webhook_url: ${SLACK_WEBHOOK_URL} channel: general     > 開発環境開発環境 \n\nその上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。 \n\n- IDE Visual Studio Community 2017 Basic extentions Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC Microsoft .NET Framework Version 4.6.01586 Visual C# 2017 JavaScript Language Service 2.0 JavaScript Project System 2.0 JavaScript UWP Project System 2.0 TypeScript 2.1.5.0 Microsoft Visual Studio VC Package 1.0 Xamarin 4.3.0.784 (73f58d6) Xamarin.Android SDK 7.1.0.41 (9578cdc) Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd) Visual Studio Tools for Unity 3.0.0.1 Visual Studio Tools for Universal Windows Apps 15.0.26228.00 Mono Debugging for Visual Studio Mono.Debugging.VisualStudio ASP.NET and Web Tools 2017 15.0.30223.0 NuGet Package Manager 4.0.0 Common Azure Tools 1.9 NpgsqlVSPackage Extension 1.0 Merq 1.1.13-alpha (2f64b6d) VSPackage Extension 1.2 Other extentions JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。 CodeMaid 10.2.7 - 気軽にコード整形してくれる。 .ignore 1.2.71 Markdown Editor 1.11.201 File Nesting 2.6.67 GitHub.VisualStudio 2.2.0.8 VSColorOutput 2.5 HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。 MinimaliticView Extension 1.0 Debug用エミュレーター XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。 Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。 \n- Visual Studio Community 2017\n- Basic extentions Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC Microsoft .NET Framework Version 4.6.01586 Visual C# 2017 JavaScript Language Service 2.0 JavaScript Project System 2.0 JavaScript UWP Project System 2.0 TypeScript 2.1.5.0 Microsoft Visual Studio VC Package 1.0 Xamarin 4.3.0.784 (73f58d6) Xamarin.Android SDK 7.1.0.41 (9578cdc) Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd) Visual Studio Tools for Unity 3.0.0.1 Visual Studio Tools for Universal Windows Apps 15.0.26228.00 Mono Debugging for Visual Studio Mono.Debugging.VisualStudio ASP.NET and Web Tools 2017 15.0.30223.0 NuGet Package Manager 4.0.0 Common Azure Tools 1.9 NpgsqlVSPackage Extension 1.0 Merq 1.1.13-alpha (2f64b6d) VSPackage Extension 1.2 \n- Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC\n- Microsoft .NET Framework Version 4.6.01586\n- Visual C# 2017\n- JavaScript Language Service 2.0\n- JavaScript Project System 2.0\n- JavaScript UWP Project System 2.0\n- TypeScript 2.1.5.0\n- Microsoft Visual Studio VC Package 1.0\n- Xamarin 4.3.0.784 (73f58d6)\n- Xamarin.Android SDK 7.1.0.41 (9578cdc)\n- Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd)\n- Visual Studio Tools for Unity 3.0.0.1\n- Visual Studio Tools for Universal Windows Apps 15.0.26228.00\n- Mono Debugging for Visual Studio Mono.Debugging.VisualStudio\n- ASP.NET and Web Tools 2017 15.0.30223.0\n- NuGet Package Manager 4.0.0\n- Common Azure Tools 1.9\n- NpgsqlVSPackage Extension 1.0\n- Merq 1.1.13-alpha (2f64b6d)\n- VSPackage Extension 1.2\n- Other extentions JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。 CodeMaid 10.2.7 - 気軽にコード整形してくれる。 .ignore 1.2.71 Markdown Editor 1.11.201 File Nesting 2.6.67 GitHub.VisualStudio 2.2.0.8 VSColorOutput 2.5 HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。 MinimaliticView Extension 1.0 \n- JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。\n- CodeMaid 10.2.7 - 気軽にコード整形してくれる。\n- .ignore 1.2.71\n- Markdown Editor 1.11.201\n- File Nesting 2.6.67\n- GitHub.VisualStudio 2.2.0.8\n- VSColorOutput 2.5\n- HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。\n- MinimaliticView Extension 1.0\n- Debug用エミュレーター XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。 Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。 \n- XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。\n- Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。\n- DevStack Prism Prism template - スキャフォールド、スニペット便利 Profile78 - Profile259になっているがWindows 8必要ないので Newtonsoft.Json FubarCoder.RestSharp.Portable.HttpClient NUnit Moq \n- Prism Prism template - スキャフォールド、スニペット便利 Profile78 - Profile259になっているがWindows 8必要ないので Newtonsoft.Json FubarCoder.RestSharp.Portable.HttpClient NUnit Moq \n- Prism template - スキャフォールド、スニペット便利\n- Profile78 - Profile259になっているがWindows 8必要ないので\n- Newtonsoft.Json\n- FubarCoder.RestSharp.Portable.HttpClient\n- NUnit\n- Moq   > キーバインドキーバインド \n\nおまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。    category command keybind     Navigation CodeMaid.SwitchFile C-c,:   Navigation Edit.CharLeft C-b   Navigation Edit.CharRight C-f   Navigation Edit.DocumentBottom M->   Navigation Edit.DocumentTop M-<   Navigation Edit.GoTo M-g   Navigation Edit.IncrementalSearch C-s   Navigation Edit.LineDown C-n   Navigation Edit.LineEnd C-e   Navigation Edit.LineStart C-a   Navigation Edit.LineUp C-p   Navigation Edit.NextMethod M-}   Navigation Edit.PageDown C-v   Navigation Edit.PageUp M-v   Navigation Edit.PreviousMethod M-{   Navigation Edit.ScrollLineCenter C-l   Navigation Edit.ToggleAllOutling C-u,M-c   Navigation Edit.ToggleOutlingExpansion C-i   Navigation Edit.WordNext M-f   Navigation Edit.WordPrevious M-b   Navigation ReSharper.ReSharper_GotoRecentFiles M-x,b   Navigation Team.TeamExplorerSearch C-x,g   Navigation View.C#Interactive C-c,i   Navigation Window.NewVerticalTabGroup C-x,&#124;   Navigation Window.PreviousTabGroup C-x,1   Edit Build.BuildSolution C-c,b   Edit Build.RebuildSolution C-c,r   Edit CodeMaid.JoinLine C-c,j   Edit CodeMaid.SortLines M-x,s   Edit Debug.Start C-c,d   Edit Edit.BackwardDelete C-h   Edit Edit.BackwardDelete M-h   Edit Edit.BreakLine C-m   Edit Edit.Capitalize M-c   Edit Edit.CommentSelection M-;   Edit Edit.Delete C-d   Edit Edit.InsertSnippet C-,   Edit Edit.LineCut C-k   Edit Edit.LineDownExtendColumn M-.   Edit Edit.LineUpExtendColumn M-,   Edit Edit.MakeLowercase M-l   Edit Edit.MakeUppercase M-u   Edit Edit.Paste C-y   Edit Edit.SelectCurrentWord C-SPC   Edit Edit.UncommentSelection M-:   Edit Edit.Undo M-/   Edit File.Close C-x,k   Edit File.SaveSelection C-x,C-s   Edit Project.AddNewItem C-c,s   Edit ReSharpe._ReSharper_DuplicateText C-c,p   Edit ReSharper.ReSharper_GotoRelatedFile C-c,;   Edit ReSharper.ReSharper_GotoText C-c,g   Edit Tools.ManageNuGetPackagesforSolution C-c,n   Edit Tools.Options M-0   Edit View.PackageManagerConsole C-q,1      > WRAPUPWRAPUP \n\n途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png"},"wip":false,"body_md":"<img width=\"484\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\">\r\n\r\nXamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。\r\n\r\n# PROBLEM\r\n- Xamarin開発環境がサーバー側のそれとかい離している\r\n  - Visual Studio Community 2015の動作がもっさりしている\r\n  - 適切な開発フローがわからない\r\n  - 適切なアプリケーションフレームワークがわからない\r\n  - 適切なXAMLプレビュワーがわからない\r\n  - 適切なAndroidエミュレーターがわからない\r\n\r\n# SOLUTION\r\nというわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。\r\n\r\n## 開発フロー\r\nまず、想定している開発フローは下記の通り。\r\n\r\n- テスト駆動開発\r\n  - デバッグ\r\n    - エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう\r\n    - アウトプット - Debug.WriteLineなどの確認\r\n    - イミディエイト - 変数の追跡\r\n    - C# REPL - C#やパッケージの動作確認\r\n    - XAMLのプレビュー - いらない子\r\n  - テスト\r\n    - 単体テスト - NUnit\r\n    - UIテスト - 保留\r\n- [Github Flow](http://qiita.com/tbpgr/items/4ff76ef35c4ff0ec8314)にそったデプロイ\r\n  - `feature`ブランチをきってプルリクエストをたてる\r\n  - 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。\r\n    - CIツール\r\n      - [Visual Studio Mobile Center](https://mobile.azure.com/apps) - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。\r\n      - [Wercker](https://app.wercker.com/) - `master`マージ後にいらなくなった`feature`ブランチを消すなどの後片付け役。\r\n  - Appストアへデプロイ\r\n    - Android\r\n    - iOS\r\n    - UWP\r\n\r\nちなみにWerckerでの`feature`ブランチなどの後片付けはこんな感じです。`master`マージのタイミングで走らせます。\r\n\r\n```yaml\r\nbox: ruby:2.4.0\r\nbuild:\r\n  steps:\r\n    - add-ssh-key:\r\n        host: github.com\r\n        keyname: GITHUB\r\n    - add-to-known_hosts:\r\n        hostname: github.com\r\n        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48\r\n    - script:\r\n        name: Add git-tag\r\n        code: |\r\n          _tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S)\r\n          git remote add origin git@github.com:nabinno/utagaki.git\r\n          git config --global user.email 'wercker@blahfe.com'\r\n          git config --global user.name 'Wercker Bot'\r\n          git tag -a $_tag master -m 'wercker deploy'\r\n          git push origin $_tag\r\n  after-steps:\r\n    - wantedly/pretty-slack-notify:\r\n        webhook_url: ${SLACK_WEBHOOK_URL}\r\n        channel: general\r\n```\r\n\r\n## 開発環境\r\nその上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。\r\n\r\n- IDE\r\n  -  Visual Studio Community 2017\r\n    - Basic extentions\r\n      - Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC\r\n      - Microsoft .NET Framework Version 4.6.01586\r\n      - Visual C# 2017\r\n      - JavaScript Language Service   2.0\r\n      - JavaScript Project System   2.0\r\n      - JavaScript UWP Project System   2.0\r\n      - TypeScript   2.1.5.0\r\n      - Microsoft Visual Studio VC Package   1.0\r\n      - Xamarin   4.3.0.784 (73f58d6)\r\n      - Xamarin.Android SDK   7.1.0.41 (9578cdc)\r\n      - Xamarin.iOS and Xamarin.Mac SDK   10.4.0.123 (35d1ccd)\r\n      - Visual Studio Tools for Unity   3.0.0.1\r\n      - Visual Studio Tools for Universal Windows Apps   15.0.26228.00\r\n      - Mono Debugging for Visual Studio   Mono.Debugging.VisualStudio\r\n      - ASP.NET and Web Tools 2017   15.0.30223.0\r\n      - NuGet Package Manager   4.0.0\r\n      - Common Azure Tools   1.9\r\n      - NpgsqlVSPackage Extension   1.0\r\n      - Merq   1.1.13-alpha (2f64b6d)\r\n      - VSPackage Extension   1.2\r\n    - Other extentions\r\n      - JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。\r\n      - CodeMaid   10.2.7 - 気軽にコード整形してくれる。\r\n      - .ignore   1.2.71\r\n      - Markdown Editor   1.11.201\r\n      - File Nesting   2.6.67\r\n      - GitHub.VisualStudio   2.2.0.8\r\n      - VSColorOutput   2.5\r\n      - HideMenu   1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。\r\n      - MinimaliticView Extension   1.0\r\n    - Debug用エミュレーター\r\n      - XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。\r\n      - Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。\r\n- DevStack\r\n  - Prism\r\n    - Prism template - スキャフォールド、スニペット便利\r\n    - Profile78 - Profile259になっているがWindows 8必要ないので\r\n    - Newtonsoft.Json\r\n    - FubarCoder.RestSharp.Portable.HttpClient\r\n    - NUnit\r\n    - Moq\r\n\r\n## キーバインド\r\nおまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。\r\n\r\n| category   | command                              | keybind      |\r\n|------------|--------------------------------------|--------------|\r\n| Navigation | CodeMaid.SwitchFile                  | `C-c,:`      |\r\n| Navigation | Edit.CharLeft                        | `C-b`        |\r\n| Navigation | Edit.CharRight                       | `C-f`        |\r\n| Navigation | Edit.DocumentBottom                  | `M->`        |\r\n| Navigation | Edit.DocumentTop                     | `M-<`        |\r\n| Navigation | Edit.GoTo                            | `M-g`        |\r\n| Navigation | Edit.IncrementalSearch               | `C-s`        |\r\n| Navigation | Edit.LineDown                        | `C-n`        |\r\n| Navigation | Edit.LineEnd                         | `C-e`        |\r\n| Navigation | Edit.LineStart                       | `C-a`        |\r\n| Navigation | Edit.LineUp                          | `C-p`        |\r\n| Navigation | Edit.NextMethod                      | `M-}`        |\r\n| Navigation | Edit.PageDown                        | `C-v`        |\r\n| Navigation | Edit.PageUp                          | `M-v`        |\r\n| Navigation | Edit.PreviousMethod                  | `M-{`        |\r\n| Navigation | Edit.ScrollLineCenter                | `C-l`        |\r\n| Navigation | Edit.ToggleAllOutling                | `C-u,M-c`    |\r\n| Navigation | Edit.ToggleOutlingExpansion          | `C-i`        |\r\n| Navigation | Edit.WordNext                        | `M-f`        |\r\n| Navigation | Edit.WordPrevious                    | `M-b`        |\r\n| Navigation | ReSharper.ReSharper_GotoRecentFiles  | `M-x,b`      |\r\n| Navigation | Team.TeamExplorerSearch              | `C-x,g`      |\r\n| Navigation | View.C#Interactive                   | `C-c,i`      |\r\n| Navigation | Window.NewVerticalTabGroup           | `C-x,&#124;` |\r\n| Navigation | Window.PreviousTabGroup              | `C-x,1`      |\r\n| Edit       | Build.BuildSolution                  | `C-c,b`      |\r\n| Edit       | Build.RebuildSolution                | `C-c,r`      |\r\n| Edit       | CodeMaid.JoinLine                    | `C-c,j`      |\r\n| Edit       | CodeMaid.SortLines                   | `M-x,s`      |\r\n| Edit       | Debug.Start                          | `C-c,d`      |\r\n| Edit       | Edit.BackwardDelete                  | `C-h`        |\r\n| Edit       | Edit.BackwardDelete                  | `M-h`        |\r\n| Edit       | Edit.BreakLine                       | `C-m`        |\r\n| Edit       | Edit.Capitalize                      | `M-c`        |\r\n| Edit       | Edit.CommentSelection                | `M-;`        |\r\n| Edit       | Edit.Delete                          | `C-d`        |\r\n| Edit       | Edit.InsertSnippet                   | `C-,`        |\r\n| Edit       | Edit.LineCut                         | `C-k`        |\r\n| Edit       | Edit.LineDownExtendColumn            | `M-.`        |\r\n| Edit       | Edit.LineUpExtendColumn              | `M-,`        |\r\n| Edit       | Edit.MakeLowercase                   | `M-l`        |\r\n| Edit       | Edit.MakeUppercase                   | `M-u`        |\r\n| Edit       | Edit.Paste                           | `C-y`        |\r\n| Edit       | Edit.SelectCurrentWord               | `C-SPC`      |\r\n| Edit       | Edit.UncommentSelection              | `M-:`        |\r\n| Edit       | Edit.Undo                            | `M-/`        |\r\n| Edit       | File.Close                           | `C-x,k`      |\r\n| Edit       | File.SaveSelection                   | `C-x,C-s`    |\r\n| Edit       | Project.AddNewItem                   | `C-c,s`      |\r\n| Edit       | ReSharpe.\\_ReSharper\\_DuplicateText  | `C-c,p`      |\r\n| Edit       | ReSharper.ReSharper_GotoRelatedFile  | `C-c,;`      |\r\n| Edit       | ReSharper.ReSharper_GotoText         | `C-c,g`      |\r\n| Edit       | Tools.ManageNuGetPackagesforSolution | `C-c,n`      |\r\n| Edit       | Tools.Options                        | `M-0`        |\r\n| Edit       | View.PackageManagerConsole           | `C-q,1`      |\r\n\r\n# WRAPUP\r\n途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。","body_html":"<a href=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"484\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\"></a>\n<p data-sourcepos=\"3:1-3:280\">Xamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。</p>\n<h1 data-sourcepos=\"5:1-5:9\" id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"6:1-12:0\">\n<li data-sourcepos=\"6:1-12:0\">Xamarin開発環境がサーバー側のそれとかい離している\n<ul data-sourcepos=\"7:3-12:0\">\n<li data-sourcepos=\"7:3-7:68\">Visual Studio Community 2015の動作がもっさりしている</li>\n<li data-sourcepos=\"8:3-8:46\">適切な開発フローがわからない</li>\n<li data-sourcepos=\"9:3-9:76\">適切なアプリケーションフレームワークがわからない</li>\n<li data-sourcepos=\"10:3-10:53\">適切なXAMLプレビュワーがわからない</li>\n<li data-sourcepos=\"11:3-12:0\">適切なAndroidエミュレーターがわからない</li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"13:1-13:10\" id=\"2-0-0\" name=\"2-0-0\">\n<a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"14:1-14:180\">というわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。</p>\n<h2 data-sourcepos=\"16:1-16:18\" id=\"2-1-0\" name=\"2-1-0\">\n<a class=\"anchor\" id=\"開発フロー\" name=\"%E9%96%8B%E7%99%BA%E3%83%95%E3%83%AD%E3%83%BC\" href=\"#%E9%96%8B%E7%99%BA%E3%83%95%E3%83%AD%E3%83%BC\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"開発フロー\"> &gt; 開発フロー</span></a>開発フロー</h2>\n<p data-sourcepos=\"17:1-17:63\">まず、想定している開発フローは下記の通り。</p>\n<ul data-sourcepos=\"19:1-39:0\">\n<li data-sourcepos=\"19:1-28:26\">テスト駆動開発\n<ul data-sourcepos=\"20:3-28:26\">\n<li data-sourcepos=\"20:3-25:46\">デバッグ\n<ul data-sourcepos=\"21:5-25:46\">\n<li data-sourcepos=\"21:5-21:105\">エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう</li>\n<li data-sourcepos=\"22:5-22:57\">アウトプット - Debug.WriteLineなどの確認</li>\n<li data-sourcepos=\"23:5-23:45\">イミディエイト - 変数の追跡</li>\n<li data-sourcepos=\"24:5-24:51\">C# REPL - C#やパッケージの動作確認</li>\n<li data-sourcepos=\"25:5-25:46\">XAMLのプレビュー - いらない子</li>\n</ul>\n</li>\n<li data-sourcepos=\"26:3-28:26\">テスト\n<ul data-sourcepos=\"27:5-28:26\">\n<li data-sourcepos=\"27:5-27:29\">単体テスト - NUnit</li>\n<li data-sourcepos=\"28:5-28:26\">UIテスト - 保留</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"29:1-39:0\">\n<a href=\"http://qiita.com/tbpgr/items/4ff76ef35c4ff0ec8314\" target=\"_blank\" rel=\"noopener noreferrer\">Github Flow</a>にそったデプロイ\n<ul data-sourcepos=\"30:3-39:0\">\n<li data-sourcepos=\"30:3-30:70\">\n<code>feature</code>ブランチをきってプルリクエストをたてる</li>\n<li data-sourcepos=\"31:3-34:147\">当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。\n<ul data-sourcepos=\"32:5-34:147\">\n<li data-sourcepos=\"32:5-34:147\">CIツール\n<ul data-sourcepos=\"33:7-34:147\">\n<li data-sourcepos=\"33:7-33:288\">\n<a href=\"https://mobile.azure.com/apps\" target=\"_blank\" rel=\"noopener noreferrer\">Visual Studio Mobile Center</a> - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。</li>\n<li data-sourcepos=\"34:7-34:147\">\n<a href=\"https://app.wercker.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Wercker</a> - <code>master</code>マージ後にいらなくなった<code>feature</code>ブランチを消すなどの後片付け役。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"35:3-39:0\">Appストアへデプロイ\n<ul data-sourcepos=\"36:5-39:0\">\n<li data-sourcepos=\"36:5-36:13\">Android</li>\n<li data-sourcepos=\"37:5-37:9\">iOS</li>\n<li data-sourcepos=\"38:5-39:0\">UWP</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p data-sourcepos=\"40:1-40:150\">ちなみにWerckerでの<code>feature</code>ブランチなどの後片付けはこんな感じです。<code>master</code>マージのタイミングで走らせます。</p>\n<div class=\"code-block\" data-sourcepos=\"42:1-65:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>yaml</div>\n<div class=\"highlight\"><pre class=\"highlight yaml\"><code><span class=\"na\">box</span><span class=\"pi\">:</span> <span class=\"s\">ruby:2.4.0</span>\n<span class=\"na\">build</span><span class=\"pi\">:</span>\n  <span class=\"na\">steps</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"na\">add-ssh-key</span><span class=\"pi\">:</span>\n        <span class=\"na\">host</span><span class=\"pi\">:</span> <span class=\"s\">github.com</span>\n        <span class=\"na\">keyname</span><span class=\"pi\">:</span> <span class=\"s\">GITHUB</span>\n    <span class=\"pi\">-</span> <span class=\"na\">add-to-known_hosts</span><span class=\"pi\">:</span>\n        <span class=\"na\">hostname</span><span class=\"pi\">:</span> <span class=\"s\">github.com</span>\n        <span class=\"na\">fingerprint</span><span class=\"pi\">:</span> <span class=\"s\">16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48</span>\n    <span class=\"pi\">-</span> <span class=\"na\">script</span><span class=\"pi\">:</span>\n        <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Add git-tag</span>\n        <span class=\"na\">code</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n          <span class=\"s\">_tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S)</span>\n          <span class=\"s\">git remote add origin git@github.com:nabinno/utagaki.git</span>\n          <span class=\"s\">git config --global user.email 'wercker@blahfe.com'</span>\n          <span class=\"s\">git config --global user.name 'Wercker Bot'</span>\n          <span class=\"s\">git tag -a $_tag master -m 'wercker deploy'</span>\n          <span class=\"s\">git push origin $_tag</span>\n  <span class=\"na\">after-steps</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">wantedly/pretty-slack-notify</span><span class=\"pi\">:</span>\n        <span class=\"na\">webhook_url</span><span class=\"pi\">:</span> <span class=\"s\">${SLACK_WEBHOOK_URL}</span>\n        <span class=\"na\">channel</span><span class=\"pi\">:</span> <span class=\"s\">general</span>\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"67:1-67:15\" id=\"2-2-0\" name=\"2-2-0\">\n<a class=\"anchor\" id=\"開発環境\" name=\"%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\" href=\"#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"開発環境\"> &gt; 開発環境</span></a>開発環境</h2>\n<p data-sourcepos=\"68:1-68:607\">その上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。</p>\n<ul data-sourcepos=\"70:1-114:0\">\n<li data-sourcepos=\"70:1-105:234\">IDE\n<ul data-sourcepos=\"71:3-105:234\">\n<li data-sourcepos=\"71:3-71:33\">Visual Studio Community 2017</li>\n<li data-sourcepos=\"72:5-92:33\">Basic extentions\n<ul data-sourcepos=\"73:7-92:33\">\n<li data-sourcepos=\"73:7-73:77\">Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC</li>\n<li data-sourcepos=\"74:7-74:50\">Microsoft .NET Framework Version 4.6.01586</li>\n<li data-sourcepos=\"75:7-75:22\">Visual C# 2017</li>\n<li data-sourcepos=\"76:7-76:41\">JavaScript Language Service   2.0</li>\n<li data-sourcepos=\"77:7-77:39\">JavaScript Project System   2.0</li>\n<li data-sourcepos=\"78:7-78:43\">JavaScript UWP Project System   2.0</li>\n<li data-sourcepos=\"79:7-79:28\">TypeScript   2.1.5.0</li>\n<li data-sourcepos=\"80:7-80:48\">Microsoft Visual Studio VC Package   1.0</li>\n<li data-sourcepos=\"81:7-81:37\">Xamarin   4.3.0.784 (73f58d6)</li>\n<li data-sourcepos=\"82:7-82:48\">Xamarin.Android SDK   7.1.0.41 (9578cdc)</li>\n<li data-sourcepos=\"83:7-83:62\">Xamarin.iOS and Xamarin.Mac SDK   10.4.0.123 (35d1ccd)</li>\n<li data-sourcepos=\"84:7-84:47\">Visual Studio Tools for Unity   3.0.0.1</li>\n<li data-sourcepos=\"85:7-85:70\">Visual Studio Tools for Universal Windows Apps   15.0.26228.00</li>\n<li data-sourcepos=\"86:7-86:70\">Mono Debugging for Visual Studio   Mono.Debugging.VisualStudio</li>\n<li data-sourcepos=\"87:7-87:49\">ASP.NET and Web Tools 2017   15.0.30223.0</li>\n<li data-sourcepos=\"88:7-88:37\">NuGet Package Manager   4.0.0</li>\n<li data-sourcepos=\"89:7-89:32\">Common Azure Tools   1.9</li>\n<li data-sourcepos=\"90:7-90:39\">NpgsqlVSPackage Extension   1.0</li>\n<li data-sourcepos=\"91:7-91:37\">Merq   1.1.13-alpha (2f64b6d)</li>\n<li data-sourcepos=\"92:7-92:33\">VSPackage Extension   1.2</li>\n</ul>\n</li>\n<li data-sourcepos=\"93:5-102:39\">Other extentions\n<ul data-sourcepos=\"94:7-102:39\">\n<li data-sourcepos=\"94:7-94:87\">JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。</li>\n<li data-sourcepos=\"95:7-95:70\">CodeMaid   10.2.7 - 気軽にコード整形してくれる。</li>\n<li data-sourcepos=\"96:7-96:24\">.ignore   1.2.71</li>\n<li data-sourcepos=\"97:7-97:34\">Markdown Editor   1.11.201</li>\n<li data-sourcepos=\"98:7-98:29\">File Nesting   2.6.67</li>\n<li data-sourcepos=\"99:7-99:37\">GitHub.VisualStudio   2.2.0.8</li>\n<li data-sourcepos=\"100:7-100:27\">VSColorOutput   2.5</li>\n<li data-sourcepos=\"101:7-101:96\">HideMenu   1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。</li>\n<li data-sourcepos=\"102:7-102:39\">MinimaliticView Extension   1.0</li>\n</ul>\n</li>\n<li data-sourcepos=\"103:5-105:234\">Debug用エミュレーター\n<ul data-sourcepos=\"104:7-105:234\">\n<li data-sourcepos=\"104:7-104:200\">XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。</li>\n<li data-sourcepos=\"105:7-105:234\">Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"106:1-114:0\">DevStack\n<ul data-sourcepos=\"107:3-114:0\">\n<li data-sourcepos=\"107:3-114:0\">Prism\n<ul data-sourcepos=\"108:5-114:0\">\n<li data-sourcepos=\"108:5-108:71\">Prism template - スキャフォールド、スニペット便利</li>\n<li data-sourcepos=\"109:5-109:76\">Profile78 - Profile259になっているがWindows 8必要ないので</li>\n<li data-sourcepos=\"110:5-110:21\">Newtonsoft.Json</li>\n<li data-sourcepos=\"111:5-111:46\">FubarCoder.RestSharp.Portable.HttpClient</li>\n<li data-sourcepos=\"112:5-112:11\">NUnit</li>\n<li data-sourcepos=\"113:5-114:0\">Moq</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 data-sourcepos=\"115:1-115:21\" id=\"2-3-0\" name=\"2-3-0\">\n<a class=\"anchor\" id=\"キーバインド\" name=\"%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89\" href=\"#%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89\" data-position=\"2-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"キーバインド\"> &gt; キーバインド</span></a>キーバインド</h2>\n<p data-sourcepos=\"116:1-116:225\">おまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。</p>\n<table data-sourcepos=\"118:1-174:68\">\n<thead>\n<tr data-sourcepos=\"118:1-118:68\">\n<th data-sourcepos=\"118:2-118:13\">category</th>\n<th data-sourcepos=\"118:15-118:52\">command</th>\n<th data-sourcepos=\"118:54-118:67\">keybind</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"120:1-120:68\">\n<td data-sourcepos=\"120:2-120:13\">Navigation</td>\n<td data-sourcepos=\"120:15-120:52\">CodeMaid.SwitchFile</td>\n<td data-sourcepos=\"120:54-120:67\"><code>C-c,:</code></td>\n</tr>\n<tr data-sourcepos=\"121:1-121:68\">\n<td data-sourcepos=\"121:2-121:13\">Navigation</td>\n<td data-sourcepos=\"121:15-121:52\">Edit.CharLeft</td>\n<td data-sourcepos=\"121:54-121:67\"><code>C-b</code></td>\n</tr>\n<tr data-sourcepos=\"122:1-122:68\">\n<td data-sourcepos=\"122:2-122:13\">Navigation</td>\n<td data-sourcepos=\"122:15-122:52\">Edit.CharRight</td>\n<td data-sourcepos=\"122:54-122:67\"><code>C-f</code></td>\n</tr>\n<tr data-sourcepos=\"123:1-123:68\">\n<td data-sourcepos=\"123:2-123:13\">Navigation</td>\n<td data-sourcepos=\"123:15-123:52\">Edit.DocumentBottom</td>\n<td data-sourcepos=\"123:54-123:67\"><code>M-&gt;</code></td>\n</tr>\n<tr data-sourcepos=\"124:1-124:68\">\n<td data-sourcepos=\"124:2-124:13\">Navigation</td>\n<td data-sourcepos=\"124:15-124:52\">Edit.DocumentTop</td>\n<td data-sourcepos=\"124:54-124:67\"><code>M-&lt;</code></td>\n</tr>\n<tr data-sourcepos=\"125:1-125:68\">\n<td data-sourcepos=\"125:2-125:13\">Navigation</td>\n<td data-sourcepos=\"125:15-125:52\">Edit.GoTo</td>\n<td data-sourcepos=\"125:54-125:67\"><code>M-g</code></td>\n</tr>\n<tr data-sourcepos=\"126:1-126:68\">\n<td data-sourcepos=\"126:2-126:13\">Navigation</td>\n<td data-sourcepos=\"126:15-126:52\">Edit.IncrementalSearch</td>\n<td data-sourcepos=\"126:54-126:67\"><code>C-s</code></td>\n</tr>\n<tr data-sourcepos=\"127:1-127:68\">\n<td data-sourcepos=\"127:2-127:13\">Navigation</td>\n<td data-sourcepos=\"127:15-127:52\">Edit.LineDown</td>\n<td data-sourcepos=\"127:54-127:67\"><code>C-n</code></td>\n</tr>\n<tr data-sourcepos=\"128:1-128:68\">\n<td data-sourcepos=\"128:2-128:13\">Navigation</td>\n<td data-sourcepos=\"128:15-128:52\">Edit.LineEnd</td>\n<td data-sourcepos=\"128:54-128:67\"><code>C-e</code></td>\n</tr>\n<tr data-sourcepos=\"129:1-129:68\">\n<td data-sourcepos=\"129:2-129:13\">Navigation</td>\n<td data-sourcepos=\"129:15-129:52\">Edit.LineStart</td>\n<td data-sourcepos=\"129:54-129:67\"><code>C-a</code></td>\n</tr>\n<tr data-sourcepos=\"130:1-130:68\">\n<td data-sourcepos=\"130:2-130:13\">Navigation</td>\n<td data-sourcepos=\"130:15-130:52\">Edit.LineUp</td>\n<td data-sourcepos=\"130:54-130:67\"><code>C-p</code></td>\n</tr>\n<tr data-sourcepos=\"131:1-131:68\">\n<td data-sourcepos=\"131:2-131:13\">Navigation</td>\n<td data-sourcepos=\"131:15-131:52\">Edit.NextMethod</td>\n<td data-sourcepos=\"131:54-131:67\"><code>M-}</code></td>\n</tr>\n<tr data-sourcepos=\"132:1-132:68\">\n<td data-sourcepos=\"132:2-132:13\">Navigation</td>\n<td data-sourcepos=\"132:15-132:52\">Edit.PageDown</td>\n<td data-sourcepos=\"132:54-132:67\"><code>C-v</code></td>\n</tr>\n<tr data-sourcepos=\"133:1-133:68\">\n<td data-sourcepos=\"133:2-133:13\">Navigation</td>\n<td data-sourcepos=\"133:15-133:52\">Edit.PageUp</td>\n<td data-sourcepos=\"133:54-133:67\"><code>M-v</code></td>\n</tr>\n<tr data-sourcepos=\"134:1-134:68\">\n<td data-sourcepos=\"134:2-134:13\">Navigation</td>\n<td data-sourcepos=\"134:15-134:52\">Edit.PreviousMethod</td>\n<td data-sourcepos=\"134:54-134:67\"><code>M-{</code></td>\n</tr>\n<tr data-sourcepos=\"135:1-135:68\">\n<td data-sourcepos=\"135:2-135:13\">Navigation</td>\n<td data-sourcepos=\"135:15-135:52\">Edit.ScrollLineCenter</td>\n<td data-sourcepos=\"135:54-135:67\"><code>C-l</code></td>\n</tr>\n<tr data-sourcepos=\"136:1-136:68\">\n<td data-sourcepos=\"136:2-136:13\">Navigation</td>\n<td data-sourcepos=\"136:15-136:52\">Edit.ToggleAllOutling</td>\n<td data-sourcepos=\"136:54-136:67\"><code>C-u,M-c</code></td>\n</tr>\n<tr data-sourcepos=\"137:1-137:68\">\n<td data-sourcepos=\"137:2-137:13\">Navigation</td>\n<td data-sourcepos=\"137:15-137:52\">Edit.ToggleOutlingExpansion</td>\n<td data-sourcepos=\"137:54-137:67\"><code>C-i</code></td>\n</tr>\n<tr data-sourcepos=\"138:1-138:68\">\n<td data-sourcepos=\"138:2-138:13\">Navigation</td>\n<td data-sourcepos=\"138:15-138:52\">Edit.WordNext</td>\n<td data-sourcepos=\"138:54-138:67\"><code>M-f</code></td>\n</tr>\n<tr data-sourcepos=\"139:1-139:68\">\n<td data-sourcepos=\"139:2-139:13\">Navigation</td>\n<td data-sourcepos=\"139:15-139:52\">Edit.WordPrevious</td>\n<td data-sourcepos=\"139:54-139:67\"><code>M-b</code></td>\n</tr>\n<tr data-sourcepos=\"140:1-140:68\">\n<td data-sourcepos=\"140:2-140:13\">Navigation</td>\n<td data-sourcepos=\"140:15-140:52\">ReSharper.ReSharper_GotoRecentFiles</td>\n<td data-sourcepos=\"140:54-140:67\"><code>M-x,b</code></td>\n</tr>\n<tr data-sourcepos=\"141:1-141:68\">\n<td data-sourcepos=\"141:2-141:13\">Navigation</td>\n<td data-sourcepos=\"141:15-141:52\">Team.TeamExplorerSearch</td>\n<td data-sourcepos=\"141:54-141:67\"><code>C-x,g</code></td>\n</tr>\n<tr data-sourcepos=\"142:1-142:68\">\n<td data-sourcepos=\"142:2-142:13\">Navigation</td>\n<td data-sourcepos=\"142:15-142:52\">View.C#Interactive</td>\n<td data-sourcepos=\"142:54-142:67\"><code>C-c,i</code></td>\n</tr>\n<tr data-sourcepos=\"143:1-143:68\">\n<td data-sourcepos=\"143:2-143:13\">Navigation</td>\n<td data-sourcepos=\"143:15-143:52\">Window.NewVerticalTabGroup</td>\n<td data-sourcepos=\"143:54-143:67\"><code>C-x,&amp;#124;</code></td>\n</tr>\n<tr data-sourcepos=\"144:1-144:68\">\n<td data-sourcepos=\"144:2-144:13\">Navigation</td>\n<td data-sourcepos=\"144:15-144:52\">Window.PreviousTabGroup</td>\n<td data-sourcepos=\"144:54-144:67\"><code>C-x,1</code></td>\n</tr>\n<tr data-sourcepos=\"145:1-145:68\">\n<td data-sourcepos=\"145:2-145:13\">Edit</td>\n<td data-sourcepos=\"145:15-145:52\">Build.BuildSolution</td>\n<td data-sourcepos=\"145:54-145:67\"><code>C-c,b</code></td>\n</tr>\n<tr data-sourcepos=\"146:1-146:68\">\n<td data-sourcepos=\"146:2-146:13\">Edit</td>\n<td data-sourcepos=\"146:15-146:52\">Build.RebuildSolution</td>\n<td data-sourcepos=\"146:54-146:67\"><code>C-c,r</code></td>\n</tr>\n<tr data-sourcepos=\"147:1-147:68\">\n<td data-sourcepos=\"147:2-147:13\">Edit</td>\n<td data-sourcepos=\"147:15-147:52\">CodeMaid.JoinLine</td>\n<td data-sourcepos=\"147:54-147:67\"><code>C-c,j</code></td>\n</tr>\n<tr data-sourcepos=\"148:1-148:68\">\n<td data-sourcepos=\"148:2-148:13\">Edit</td>\n<td data-sourcepos=\"148:15-148:52\">CodeMaid.SortLines</td>\n<td data-sourcepos=\"148:54-148:67\"><code>M-x,s</code></td>\n</tr>\n<tr data-sourcepos=\"149:1-149:68\">\n<td data-sourcepos=\"149:2-149:13\">Edit</td>\n<td data-sourcepos=\"149:15-149:52\">Debug.Start</td>\n<td data-sourcepos=\"149:54-149:67\"><code>C-c,d</code></td>\n</tr>\n<tr data-sourcepos=\"150:1-150:68\">\n<td data-sourcepos=\"150:2-150:13\">Edit</td>\n<td data-sourcepos=\"150:15-150:52\">Edit.BackwardDelete</td>\n<td data-sourcepos=\"150:54-150:67\"><code>C-h</code></td>\n</tr>\n<tr data-sourcepos=\"151:1-151:68\">\n<td data-sourcepos=\"151:2-151:13\">Edit</td>\n<td data-sourcepos=\"151:15-151:52\">Edit.BackwardDelete</td>\n<td data-sourcepos=\"151:54-151:67\"><code>M-h</code></td>\n</tr>\n<tr data-sourcepos=\"152:1-152:68\">\n<td data-sourcepos=\"152:2-152:13\">Edit</td>\n<td data-sourcepos=\"152:15-152:52\">Edit.BreakLine</td>\n<td data-sourcepos=\"152:54-152:67\"><code>C-m</code></td>\n</tr>\n<tr data-sourcepos=\"153:1-153:68\">\n<td data-sourcepos=\"153:2-153:13\">Edit</td>\n<td data-sourcepos=\"153:15-153:52\">Edit.Capitalize</td>\n<td data-sourcepos=\"153:54-153:67\"><code>M-c</code></td>\n</tr>\n<tr data-sourcepos=\"154:1-154:68\">\n<td data-sourcepos=\"154:2-154:13\">Edit</td>\n<td data-sourcepos=\"154:15-154:52\">Edit.CommentSelection</td>\n<td data-sourcepos=\"154:54-154:67\"><code>M-;</code></td>\n</tr>\n<tr data-sourcepos=\"155:1-155:68\">\n<td data-sourcepos=\"155:2-155:13\">Edit</td>\n<td data-sourcepos=\"155:15-155:52\">Edit.Delete</td>\n<td data-sourcepos=\"155:54-155:67\"><code>C-d</code></td>\n</tr>\n<tr data-sourcepos=\"156:1-156:68\">\n<td data-sourcepos=\"156:2-156:13\">Edit</td>\n<td data-sourcepos=\"156:15-156:52\">Edit.InsertSnippet</td>\n<td data-sourcepos=\"156:54-156:67\"><code>C-,</code></td>\n</tr>\n<tr data-sourcepos=\"157:1-157:68\">\n<td data-sourcepos=\"157:2-157:13\">Edit</td>\n<td data-sourcepos=\"157:15-157:52\">Edit.LineCut</td>\n<td data-sourcepos=\"157:54-157:67\"><code>C-k</code></td>\n</tr>\n<tr data-sourcepos=\"158:1-158:68\">\n<td data-sourcepos=\"158:2-158:13\">Edit</td>\n<td data-sourcepos=\"158:15-158:52\">Edit.LineDownExtendColumn</td>\n<td data-sourcepos=\"158:54-158:67\"><code>M-.</code></td>\n</tr>\n<tr data-sourcepos=\"159:1-159:68\">\n<td data-sourcepos=\"159:2-159:13\">Edit</td>\n<td data-sourcepos=\"159:15-159:52\">Edit.LineUpExtendColumn</td>\n<td data-sourcepos=\"159:54-159:67\"><code>M-,</code></td>\n</tr>\n<tr data-sourcepos=\"160:1-160:68\">\n<td data-sourcepos=\"160:2-160:13\">Edit</td>\n<td data-sourcepos=\"160:15-160:52\">Edit.MakeLowercase</td>\n<td data-sourcepos=\"160:54-160:67\"><code>M-l</code></td>\n</tr>\n<tr data-sourcepos=\"161:1-161:68\">\n<td data-sourcepos=\"161:2-161:13\">Edit</td>\n<td data-sourcepos=\"161:15-161:52\">Edit.MakeUppercase</td>\n<td data-sourcepos=\"161:54-161:67\"><code>M-u</code></td>\n</tr>\n<tr data-sourcepos=\"162:1-162:68\">\n<td data-sourcepos=\"162:2-162:13\">Edit</td>\n<td data-sourcepos=\"162:15-162:52\">Edit.Paste</td>\n<td data-sourcepos=\"162:54-162:67\"><code>C-y</code></td>\n</tr>\n<tr data-sourcepos=\"163:1-163:68\">\n<td data-sourcepos=\"163:2-163:13\">Edit</td>\n<td data-sourcepos=\"163:15-163:52\">Edit.SelectCurrentWord</td>\n<td data-sourcepos=\"163:54-163:67\"><code>C-SPC</code></td>\n</tr>\n<tr data-sourcepos=\"164:1-164:68\">\n<td data-sourcepos=\"164:2-164:13\">Edit</td>\n<td data-sourcepos=\"164:15-164:52\">Edit.UncommentSelection</td>\n<td data-sourcepos=\"164:54-164:67\"><code>M-:</code></td>\n</tr>\n<tr data-sourcepos=\"165:1-165:68\">\n<td data-sourcepos=\"165:2-165:13\">Edit</td>\n<td data-sourcepos=\"165:15-165:52\">Edit.Undo</td>\n<td data-sourcepos=\"165:54-165:67\"><code>M-/</code></td>\n</tr>\n<tr data-sourcepos=\"166:1-166:68\">\n<td data-sourcepos=\"166:2-166:13\">Edit</td>\n<td data-sourcepos=\"166:15-166:52\">File.Close</td>\n<td data-sourcepos=\"166:54-166:67\"><code>C-x,k</code></td>\n</tr>\n<tr data-sourcepos=\"167:1-167:68\">\n<td data-sourcepos=\"167:2-167:13\">Edit</td>\n<td data-sourcepos=\"167:15-167:52\">File.SaveSelection</td>\n<td data-sourcepos=\"167:54-167:67\"><code>C-x,C-s</code></td>\n</tr>\n<tr data-sourcepos=\"168:1-168:68\">\n<td data-sourcepos=\"168:2-168:13\">Edit</td>\n<td data-sourcepos=\"168:15-168:52\">Project.AddNewItem</td>\n<td data-sourcepos=\"168:54-168:67\"><code>C-c,s</code></td>\n</tr>\n<tr data-sourcepos=\"169:1-169:68\">\n<td data-sourcepos=\"169:2-169:13\">Edit</td>\n<td data-sourcepos=\"169:15-169:52\">ReSharpe._ReSharper_DuplicateText</td>\n<td data-sourcepos=\"169:54-169:67\"><code>C-c,p</code></td>\n</tr>\n<tr data-sourcepos=\"170:1-170:68\">\n<td data-sourcepos=\"170:2-170:13\">Edit</td>\n<td data-sourcepos=\"170:15-170:52\">ReSharper.ReSharper_GotoRelatedFile</td>\n<td data-sourcepos=\"170:54-170:67\"><code>C-c,;</code></td>\n</tr>\n<tr data-sourcepos=\"171:1-171:68\">\n<td data-sourcepos=\"171:2-171:13\">Edit</td>\n<td data-sourcepos=\"171:15-171:52\">ReSharper.ReSharper_GotoText</td>\n<td data-sourcepos=\"171:54-171:67\"><code>C-c,g</code></td>\n</tr>\n<tr data-sourcepos=\"172:1-172:68\">\n<td data-sourcepos=\"172:2-172:13\">Edit</td>\n<td data-sourcepos=\"172:15-172:52\">Tools.ManageNuGetPackagesforSolution</td>\n<td data-sourcepos=\"172:54-172:67\"><code>C-c,n</code></td>\n</tr>\n<tr data-sourcepos=\"173:1-173:68\">\n<td data-sourcepos=\"173:2-173:13\">Edit</td>\n<td data-sourcepos=\"173:15-173:52\">Tools.Options</td>\n<td data-sourcepos=\"173:54-173:67\"><code>M-0</code></td>\n</tr>\n<tr data-sourcepos=\"174:1-174:68\">\n<td data-sourcepos=\"174:2-174:13\">Edit</td>\n<td data-sourcepos=\"174:15-174:52\">View.PackageManagerConsole</td>\n<td data-sourcepos=\"174:54-174:67\"><code>C-q,1</code></td>\n</tr>\n</tbody>\n</table>\n<h1 data-sourcepos=\"176:1-176:8\" id=\"3-0-0\" name=\"3-0-0\">\n<a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"177:1-177:271\">途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。</p>\n","tags":["xamarin.forms","prism","xamarin"],"updated_at":"2021-01-17T12:26:26+09:00","childPublishedDate":{"published_on":"2017-03-31T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_ef5f024307008aa399b91f87fa5f64e8.jpg"}},"relatedPosts":{"edges":[{"node":{"number":140,"relative_category":"blog/backend","fields":{"title":"提供していない決済方法を業務で取り扱う際に気をつけること","excerpt":"ECプロダクトを扱っている際にどうしても出てくる銀行振込。プロダクト立ち上げ時は、銀行振込が第一にあるターゲット層を除いて、コストの高い銀行振込は実装せずに裏メニューとして扱うのが通例だと思います。今回は、当該ケースの課題を取り上げて、その解決策を示します。単純な話なのですが、時間が経つにつれて業務が硬直化してスケーリングに影響してくるので事前に手を打っておくと良いと思います。   > PROBLEMPROBLEM \n\n- 銀行振込を通常決済方法でしか提供していないケースの場合 人力でトランザクションをはる必要があり、その処理の隙間で想定外の支払い、あるいは、二重決済が行われる可能性がある また、不整合処理を実施するCSあるいはそれに付随する担当に権限が集中しすぎ、統制上難しい運用になる \n- 人力でトランザクションをはる必要があり、その処理の隙間で想定外の支払い、あるいは、二重決済が行われる可能性がある\n- また、不整合処理を実施するCSあるいはそれに付随する担当に権限が集中しすぎ、統制上難しい運用になる  > 通常のケース通常のケース \n\n  > 不整合が起きるケース「銀行振込と通常決済が同時に実行」不整合が起きるケース「銀行振込と通常決済が同時に実行」 \n\n  > SOLUTIONSOLUTION \n\nと言うわけで、解決方法を整理してみました。答えは単純で銀行振込の決済ロックをシステム側に実装するというだけの話です。ただ、振込確認を人力で行っている場合は、銀行振込を決済方法として表側に出すのは難しいので問い合わせタイミングでロックできるよう問い合わせ窓口を工夫する必要があります。プロダクトのUXに関わってくる話なので簡単に実装するだけで済まないのが悩ましいところですが、粘り強く進めるしかないです。 \n\n  > WRAPUPWRAPUP \n\nECプロダクトがスケールしてくると決済方法が増え、業務処理が複雑になってきます。決済の適正性は統制上重要になってくるので決済の処理量に応じて、リスクアセスメントで拾い上げ適切な実装にしていきたいものですね。"},"name":"提供していない決済方法を業務で取り扱う際に気をつけること","tags":["payment-service"],"childPublishedDate":{"published_on":"2022-05-01T15:27:13.000Z","published_on_unix":1651418833}}},{"node":{"number":139,"relative_category":"blog/backend","fields":{"title":"ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","excerpt":"ヘルステックでエンジニアをしている方であればデータの扱いには苦労していることと思います。CISOがつくったデータセグメンテーションがどういう意図で成り立っているのか、整理されていない現場だと読み解きに時間がかかります。現場に入って早々 何も知らないエンジニアとしては、緩めな方針よりは保守的に設計していく方が後々のトラブルが少なく安全です。   > PROBLEMPROBLEM \n\n- 要配慮個人情報について、厚労省医政局発「医療情報システムの安全管理に関するガイドライン」1を見ると「 医療・健康情報を[..]医師等以外の者が分析等を実施することは許されるものではない 」と書かれている ここでいう「 医療・健康情報 」は要配慮個人情報の中の具体的に何を指しているのか分かりづらい 「 医師等 」の「 等 」が何を指すのか分かりづらい 厚労省医政局の発令0912001号「診療情報の提供等に関する指針」2から推察するに、「 医療・健康情報 」は診療録、「 医師等 」は医療系有資格者を指している 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象 \n- ここでいう「 医療・健康情報 」は要配慮個人情報の中の具体的に何を指しているのか分かりづらい\n- 「 医師等 」の「 等 」が何を指すのか分かりづらい\n- 厚労省医政局の発令0912001号「診療情報の提供等に関する指針」2から推察するに、「 医療・健康情報 」は診療録、「 医師等 」は医療系有資格者を指している 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象 \n- 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象\n- また、データアクセス対象を緩めると、教育が不十分な人が故意に流出させ刑法上の秘密漏示罪3に問われる可能性がある 秘密漏示罪は身分犯ではあるが歯科医師のように解釈の余地もあり範囲が不透明 \n- 秘密漏示罪は身分犯ではあるが歯科医師のように解釈の余地もあり範囲が不透明  > SOLUTIONSOLUTION \n\nというわけで、ヘルステックに関わる個人情報の扱いを整理してみました。 \n\n課題は上記の通りで、時代の流れとともに医療情報の整備が進んでいる状況です。善管注意の責務を負ったエンジニアとしては医療系有資格者以外への診療録の情報提供は、例え、同僚であっても連結可能匿名（仮名加工）ではなく匿名加工で対応すべきでしょう。ゆくゆくは会社として次世代医療基盤法4を適用し、医療分野の研究開発に資するよう体制を構築することが望ましいと考えています。  > 加工なし加工なし \n\n学術研究等をのぞき第三者提供は本人同意が必要となるため、ユースケースは限定されます。各々の個人情報の種類によりアクセス出来る人が変わってきます。また、守秘義務が課せられる範囲が広く、行為によっては秘密漏示罪や不正アクセス禁止法5の罰則の対象になります。     診療録 診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 (医療関連有資格者) 社内 社内, 社外   利用目的の必要性 (公表有無) 必要 必要 必要   利用目的の必要性 (変更可否) 関連性を有する合理的な範囲 関連性を有する合理的な範囲 関連性を有する合理的な範囲   目的外利用 不可 不可 不可   第三者提供 (可否) 可 可 可   第三者提供 (本人同意) 必要 (オプトインのみ) 必要 (オプトインのみ) 必要 (オプトアウト)   個人の開示請求 応じる 応じる 応じる   漏洩時の報告 必須 必須 必須     > 仮名加工仮名加工 \n\n診療録に関する規定は次世代医療基盤法でまとめられているので、あえて規定が曖昧な仮名加工（連結可能匿名）をつかうのは望ましくありません。ユースケースとして要配慮個人情報を除いた個人情報の統計分析に限られるでしょう。     診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 社内   利用目的の必要性 (公表有無) 必要 必要   利用目的の必要性 (変更可否) 際限なく変更可能 際限なく変更可能   目的外利用 不可 不可   第三者提供 (可否) 不可 不可   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > 匿名加工匿名加工 \n\n診療録は本人のオプトアウトありですが、基本本人同意なしで利用可能です。ただ、診療録は可変長文字列の上、特異な記述として最も気をつける対象になります。データマスキングの実装は手厚く行っていく必要があります。     診療録を含んだ要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内, 社外 社内, 社外   利用目的の必要性 (公表有無) 不要 不要   第三者提供 (可否) 可 可   第三者提供 (本人同意) 不要 (オプトアウトあり) 不要   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > WRAPUPWRAPUP \n\nポイントをかいつまんでまとめてみました。エンジニア視点のため、考慮漏れの箇所があるかも知れませんが、フィードバックや各種レギュレーションの経過を元に更新していければと思います。  \n\n1. https://www.mhlw.go.jp/stf/shingi/0000516275.html ↩ \n2. https://www.mhlw.go.jp/web/t_doc?dataId=00tb3403&dataType=1&page%20No=1 ↩ \n3. https://elaws.e-gov.go.jp/document?lawid=140AC0000000045 ↩ \n4. https://elaws.e-gov.go.jp/document?lawid=429AC0000000028 ↩ \n5. https://elaws.e-gov.go.jp/document?lawid=411AC0000000128 ↩"},"name":"[2022-04-24]ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","tags":["privacy","data-masking","data-engineering","health-informatics"],"childPublishedDate":{"published_on":"2022-04-24T00:00:00.000Z","published_on_unix":1650758400}}},{"node":{"number":137,"relative_category":"blog/backend","fields":{"title":"G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","excerpt":"今回は10年以上利用していたG Suite無償版が2022年8月に停止されるとのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。   > PROBLEMPROBLEM \n\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう  > SOLUTIONSOLUTION \n\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。 \n\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。  > 構成構成  > beforebefore \n\n- ドメイン管理 バリュードメイン\n- NSレコード Cloudflare DNS\n- MXレコード G Suite\n- SMTP G Suite  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > 手順手順 \n\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。  > 1. ドメイン管理を整理する1. ドメイン管理を整理する \n\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。 \n\n1. 移管元にてWHOIS情報公開代行の解除\n2. 移管元にてドメインロックの解除\n3. 移管元にて認証鍵 (Auth-Code) を確認\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\n7. 移管元のNSレコードを移管先に変更\n8. 移管先にて認証鍵をつかい移管申請を行う\n9. 移管元に対して移管申請を行った旨をメールにて連携する \n\nCf. \n\n- ドメインの他社への移管 | バリュードメイン ユーザーガイド\n- ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53\n- Easily creating and routing email addresses with Cloudflare Email Routing  > 2. SMTPを設定する2. SMTPを設定する \n\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。 txt\n\n# メールタイプ 通例の取引がメインとなる予定です # ユースケース ## メールを送信する頻度 週に1-2回 ## 受信者リストのメンテナンス方法 四半期に一度の棚卸し ## バウンス対応 当該メールアドレスの削除 ## 申し立て対応 当該メールアドレスへのフラグ管理 ## 解除申請の管理方法 メールでの受付 ## 送信予定のメールサンプル {{宛先名}}様 お世話になっております。 表題の件につきまして1点問い合わせします。 {{問い合わせ内容}} ご不明な点等ございましたらお気軽にお問い合わせ下さい。 どうぞ、よろしくお願い致します。   > 3. G Suiteを退会する3. G Suiteを退会する \n\nG Suiteに依存しているサービスがないか確認し、退会します。  > WRAPUPWRAPUP \n\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。  > 後日談後日談 \n\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。 \n\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。  > beforebefore \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Amazon WorkMail\n- SMTP Amazon WorkMail"},"name":"[2022-04-12]G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","tags":["gsuite","google-workspace","cloudflare","amazon-ses","amazon-workmail"],"childPublishedDate":{"published_on":"2022-04-12T00:00:00.000Z","published_on_unix":1649721600}}}]}},"pageContext":{"number":54}},"staticQueryHashes":[]}