{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/54","result":{"data":{"esaPost":{"number":54,"relative_category":"blog/frontend","fields":{"title":"Xamarin開発環境をととのえる","excerpt":"Xamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。   > PROBLEMPROBLEM \n\n- Xamarin開発環境がサーバー側のそれとかい離している Visual Studio Community 2015の動作がもっさりしている 適切な開発フローがわからない 適切なアプリケーションフレームワークがわからない 適切なXAMLプレビュワーがわからない 適切なAndroidエミュレーターがわからない \n- Visual Studio Community 2015の動作がもっさりしている\n- 適切な開発フローがわからない\n- 適切なアプリケーションフレームワークがわからない\n- 適切なXAMLプレビュワーがわからない\n- 適切なAndroidエミュレーターがわからない   > SOLUTIONSOLUTION \n\nというわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。   > 開発フロー開発フロー \n\nまず、想定している開発フローは下記の通り。 \n\n- テスト駆動開発 デバッグ エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう アウトプット - Debug.WriteLineなどの確認 イミディエイト - 変数の追跡 C# REPL - C#やパッケージの動作確認 XAMLのプレビュー - いらない子 テスト 単体テスト - NUnit UIテスト - 保留 \n- デバッグ エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう アウトプット - Debug.WriteLineなどの確認 イミディエイト - 変数の追跡 C# REPL - C#やパッケージの動作確認 XAMLのプレビュー - いらない子 \n- エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう\n- アウトプット - Debug.WriteLineなどの確認\n- イミディエイト - 変数の追跡\n- C# REPL - C#やパッケージの動作確認\n- XAMLのプレビュー - いらない子\n- テスト 単体テスト - NUnit UIテスト - 保留 \n- 単体テスト - NUnit\n- UIテスト - 保留\n- Github Flowにそったデプロイ featureブランチをきってプルリクエストをたてる 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。 CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 Appストアへデプロイ Android iOS UWP \n- featureブランチをきってプルリクエストをたてる\n- 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。 CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 \n- CIツール Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。 Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。 \n- Visual Studio Mobile Center - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。\n- Wercker - masterマージ後にいらなくなったfeatureブランチを消すなどの後片付け役。\n- Appストアへデプロイ Android iOS UWP \n- Android\n- iOS\n- UWP \n\nちなみにWerckerでのfeatureブランチなどの後片付けはこんな感じです。masterマージのタイミングで走らせます。   yaml \n\nbox: ruby:2.4.0 build: steps: - add-ssh-key: host: github.com keyname: GITHUB - add-to-known_hosts: hostname: github.com fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 - script: name: Add git-tag code: | _tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S) git remote add origin git@github.com:nabinno/utagaki.git git config --global user.email 'wercker@blahfe.com' git config --global user.name 'Wercker Bot' git tag -a $_tag master -m 'wercker deploy' git push origin $_tag after-steps: - wantedly/pretty-slack-notify: webhook_url: ${SLACK_WEBHOOK_URL} channel: general     > 開発環境開発環境 \n\nその上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。 \n\n- IDE Visual Studio Community 2017 Basic extentions Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC Microsoft .NET Framework Version 4.6.01586 Visual C# 2017 JavaScript Language Service 2.0 JavaScript Project System 2.0 JavaScript UWP Project System 2.0 TypeScript 2.1.5.0 Microsoft Visual Studio VC Package 1.0 Xamarin 4.3.0.784 (73f58d6) Xamarin.Android SDK 7.1.0.41 (9578cdc) Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd) Visual Studio Tools for Unity 3.0.0.1 Visual Studio Tools for Universal Windows Apps 15.0.26228.00 Mono Debugging for Visual Studio Mono.Debugging.VisualStudio ASP.NET and Web Tools 2017 15.0.30223.0 NuGet Package Manager 4.0.0 Common Azure Tools 1.9 NpgsqlVSPackage Extension 1.0 Merq 1.1.13-alpha (2f64b6d) VSPackage Extension 1.2 Other extentions JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。 CodeMaid 10.2.7 - 気軽にコード整形してくれる。 .ignore 1.2.71 Markdown Editor 1.11.201 File Nesting 2.6.67 GitHub.VisualStudio 2.2.0.8 VSColorOutput 2.5 HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。 MinimaliticView Extension 1.0 Debug用エミュレーター XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。 Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。 \n- Visual Studio Community 2017\n- Basic extentions Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC Microsoft .NET Framework Version 4.6.01586 Visual C# 2017 JavaScript Language Service 2.0 JavaScript Project System 2.0 JavaScript UWP Project System 2.0 TypeScript 2.1.5.0 Microsoft Visual Studio VC Package 1.0 Xamarin 4.3.0.784 (73f58d6) Xamarin.Android SDK 7.1.0.41 (9578cdc) Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd) Visual Studio Tools for Unity 3.0.0.1 Visual Studio Tools for Universal Windows Apps 15.0.26228.00 Mono Debugging for Visual Studio Mono.Debugging.VisualStudio ASP.NET and Web Tools 2017 15.0.30223.0 NuGet Package Manager 4.0.0 Common Azure Tools 1.9 NpgsqlVSPackage Extension 1.0 Merq 1.1.13-alpha (2f64b6d) VSPackage Extension 1.2 \n- Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC\n- Microsoft .NET Framework Version 4.6.01586\n- Visual C# 2017\n- JavaScript Language Service 2.0\n- JavaScript Project System 2.0\n- JavaScript UWP Project System 2.0\n- TypeScript 2.1.5.0\n- Microsoft Visual Studio VC Package 1.0\n- Xamarin 4.3.0.784 (73f58d6)\n- Xamarin.Android SDK 7.1.0.41 (9578cdc)\n- Xamarin.iOS and Xamarin.Mac SDK 10.4.0.123 (35d1ccd)\n- Visual Studio Tools for Unity 3.0.0.1\n- Visual Studio Tools for Universal Windows Apps 15.0.26228.00\n- Mono Debugging for Visual Studio Mono.Debugging.VisualStudio\n- ASP.NET and Web Tools 2017 15.0.30223.0\n- NuGet Package Manager 4.0.0\n- Common Azure Tools 1.9\n- NpgsqlVSPackage Extension 1.0\n- Merq 1.1.13-alpha (2f64b6d)\n- VSPackage Extension 1.2\n- Other extentions JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。 CodeMaid 10.2.7 - 気軽にコード整形してくれる。 .ignore 1.2.71 Markdown Editor 1.11.201 File Nesting 2.6.67 GitHub.VisualStudio 2.2.0.8 VSColorOutput 2.5 HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。 MinimaliticView Extension 1.0 \n- JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。\n- CodeMaid 10.2.7 - 気軽にコード整形してくれる。\n- .ignore 1.2.71\n- Markdown Editor 1.11.201\n- File Nesting 2.6.67\n- GitHub.VisualStudio 2.2.0.8\n- VSColorOutput 2.5\n- HideMenu 1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。\n- MinimaliticView Extension 1.0\n- Debug用エミュレーター XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。 Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。 \n- XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。\n- Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。\n- DevStack Prism Prism template - スキャフォールド、スニペット便利 Profile78 - Profile259になっているがWindows 8必要ないので Newtonsoft.Json FubarCoder.RestSharp.Portable.HttpClient NUnit Moq \n- Prism Prism template - スキャフォールド、スニペット便利 Profile78 - Profile259になっているがWindows 8必要ないので Newtonsoft.Json FubarCoder.RestSharp.Portable.HttpClient NUnit Moq \n- Prism template - スキャフォールド、スニペット便利\n- Profile78 - Profile259になっているがWindows 8必要ないので\n- Newtonsoft.Json\n- FubarCoder.RestSharp.Portable.HttpClient\n- NUnit\n- Moq   > キーバインドキーバインド \n\nおまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。    category command keybind     Navigation CodeMaid.SwitchFile C-c,:   Navigation Edit.CharLeft C-b   Navigation Edit.CharRight C-f   Navigation Edit.DocumentBottom M->   Navigation Edit.DocumentTop M-<   Navigation Edit.GoTo M-g   Navigation Edit.IncrementalSearch C-s   Navigation Edit.LineDown C-n   Navigation Edit.LineEnd C-e   Navigation Edit.LineStart C-a   Navigation Edit.LineUp C-p   Navigation Edit.NextMethod M-}   Navigation Edit.PageDown C-v   Navigation Edit.PageUp M-v   Navigation Edit.PreviousMethod M-{   Navigation Edit.ScrollLineCenter C-l   Navigation Edit.ToggleAllOutling C-u,M-c   Navigation Edit.ToggleOutlingExpansion C-i   Navigation Edit.WordNext M-f   Navigation Edit.WordPrevious M-b   Navigation ReSharper.ReSharper_GotoRecentFiles M-x,b   Navigation Team.TeamExplorerSearch C-x,g   Navigation View.C#Interactive C-c,i   Navigation Window.NewVerticalTabGroup C-x,&#124;   Navigation Window.PreviousTabGroup C-x,1   Edit Build.BuildSolution C-c,b   Edit Build.RebuildSolution C-c,r   Edit CodeMaid.JoinLine C-c,j   Edit CodeMaid.SortLines M-x,s   Edit Debug.Start C-c,d   Edit Edit.BackwardDelete C-h   Edit Edit.BackwardDelete M-h   Edit Edit.BreakLine C-m   Edit Edit.Capitalize M-c   Edit Edit.CommentSelection M-;   Edit Edit.Delete C-d   Edit Edit.InsertSnippet C-,   Edit Edit.LineCut C-k   Edit Edit.LineDownExtendColumn M-.   Edit Edit.LineUpExtendColumn M-,   Edit Edit.MakeLowercase M-l   Edit Edit.MakeUppercase M-u   Edit Edit.Paste C-y   Edit Edit.SelectCurrentWord C-SPC   Edit Edit.UncommentSelection M-:   Edit Edit.Undo M-/   Edit File.Close C-x,k   Edit File.SaveSelection C-x,C-s   Edit Project.AddNewItem C-c,s   Edit ReSharpe._ReSharper_DuplicateText C-c,p   Edit ReSharper.ReSharper_GotoRelatedFile C-c,;   Edit ReSharper.ReSharper_GotoText C-c,g   Edit Tools.ManageNuGetPackagesforSolution C-c,n   Edit Tools.Options M-0   Edit View.PackageManagerConsole C-q,1      > WRAPUPWRAPUP \n\n途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png"},"wip":false,"body_md":"<img width=\"484\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\">\r\n\r\nXamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。\r\n\r\n# PROBLEM\r\n- Xamarin開発環境がサーバー側のそれとかい離している\r\n  - Visual Studio Community 2015の動作がもっさりしている\r\n  - 適切な開発フローがわからない\r\n  - 適切なアプリケーションフレームワークがわからない\r\n  - 適切なXAMLプレビュワーがわからない\r\n  - 適切なAndroidエミュレーターがわからない\r\n\r\n# SOLUTION\r\nというわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。\r\n\r\n## 開発フロー\r\nまず、想定している開発フローは下記の通り。\r\n\r\n- テスト駆動開発\r\n  - デバッグ\r\n    - エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう\r\n    - アウトプット - Debug.WriteLineなどの確認\r\n    - イミディエイト - 変数の追跡\r\n    - C# REPL - C#やパッケージの動作確認\r\n    - XAMLのプレビュー - いらない子\r\n  - テスト\r\n    - 単体テスト - NUnit\r\n    - UIテスト - 保留\r\n- [Github Flow](http://qiita.com/tbpgr/items/4ff76ef35c4ff0ec8314)にそったデプロイ\r\n  - `feature`ブランチをきってプルリクエストをたてる\r\n  - 当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。\r\n    - CIツール\r\n      - [Visual Studio Mobile Center](https://mobile.azure.com/apps) - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。\r\n      - [Wercker](https://app.wercker.com/) - `master`マージ後にいらなくなった`feature`ブランチを消すなどの後片付け役。\r\n  - Appストアへデプロイ\r\n    - Android\r\n    - iOS\r\n    - UWP\r\n\r\nちなみにWerckerでの`feature`ブランチなどの後片付けはこんな感じです。`master`マージのタイミングで走らせます。\r\n\r\n```yaml\r\nbox: ruby:2.4.0\r\nbuild:\r\n  steps:\r\n    - add-ssh-key:\r\n        host: github.com\r\n        keyname: GITHUB\r\n    - add-to-known_hosts:\r\n        hostname: github.com\r\n        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48\r\n    - script:\r\n        name: Add git-tag\r\n        code: |\r\n          _tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S)\r\n          git remote add origin git@github.com:nabinno/utagaki.git\r\n          git config --global user.email 'wercker@blahfe.com'\r\n          git config --global user.name 'Wercker Bot'\r\n          git tag -a $_tag master -m 'wercker deploy'\r\n          git push origin $_tag\r\n  after-steps:\r\n    - wantedly/pretty-slack-notify:\r\n        webhook_url: ${SLACK_WEBHOOK_URL}\r\n        channel: general\r\n```\r\n\r\n## 開発環境\r\nその上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。\r\n\r\n- IDE\r\n  -  Visual Studio Community 2017\r\n    - Basic extentions\r\n      - Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC\r\n      - Microsoft .NET Framework Version 4.6.01586\r\n      - Visual C# 2017\r\n      - JavaScript Language Service   2.0\r\n      - JavaScript Project System   2.0\r\n      - JavaScript UWP Project System   2.0\r\n      - TypeScript   2.1.5.0\r\n      - Microsoft Visual Studio VC Package   1.0\r\n      - Xamarin   4.3.0.784 (73f58d6)\r\n      - Xamarin.Android SDK   7.1.0.41 (9578cdc)\r\n      - Xamarin.iOS and Xamarin.Mac SDK   10.4.0.123 (35d1ccd)\r\n      - Visual Studio Tools for Unity   3.0.0.1\r\n      - Visual Studio Tools for Universal Windows Apps   15.0.26228.00\r\n      - Mono Debugging for Visual Studio   Mono.Debugging.VisualStudio\r\n      - ASP.NET and Web Tools 2017   15.0.30223.0\r\n      - NuGet Package Manager   4.0.0\r\n      - Common Azure Tools   1.9\r\n      - NpgsqlVSPackage Extension   1.0\r\n      - Merq   1.1.13-alpha (2f64b6d)\r\n      - VSPackage Extension   1.2\r\n    - Other extentions\r\n      - JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。\r\n      - CodeMaid   10.2.7 - 気軽にコード整形してくれる。\r\n      - .ignore   1.2.71\r\n      - Markdown Editor   1.11.201\r\n      - File Nesting   2.6.67\r\n      - GitHub.VisualStudio   2.2.0.8\r\n      - VSColorOutput   2.5\r\n      - HideMenu   1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。\r\n      - MinimaliticView Extension   1.0\r\n    - Debug用エミュレーター\r\n      - XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。\r\n      - Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。\r\n- DevStack\r\n  - Prism\r\n    - Prism template - スキャフォールド、スニペット便利\r\n    - Profile78 - Profile259になっているがWindows 8必要ないので\r\n    - Newtonsoft.Json\r\n    - FubarCoder.RestSharp.Portable.HttpClient\r\n    - NUnit\r\n    - Moq\r\n\r\n## キーバインド\r\nおまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。\r\n\r\n| category   | command                              | keybind      |\r\n|------------|--------------------------------------|--------------|\r\n| Navigation | CodeMaid.SwitchFile                  | `C-c,:`      |\r\n| Navigation | Edit.CharLeft                        | `C-b`        |\r\n| Navigation | Edit.CharRight                       | `C-f`        |\r\n| Navigation | Edit.DocumentBottom                  | `M->`        |\r\n| Navigation | Edit.DocumentTop                     | `M-<`        |\r\n| Navigation | Edit.GoTo                            | `M-g`        |\r\n| Navigation | Edit.IncrementalSearch               | `C-s`        |\r\n| Navigation | Edit.LineDown                        | `C-n`        |\r\n| Navigation | Edit.LineEnd                         | `C-e`        |\r\n| Navigation | Edit.LineStart                       | `C-a`        |\r\n| Navigation | Edit.LineUp                          | `C-p`        |\r\n| Navigation | Edit.NextMethod                      | `M-}`        |\r\n| Navigation | Edit.PageDown                        | `C-v`        |\r\n| Navigation | Edit.PageUp                          | `M-v`        |\r\n| Navigation | Edit.PreviousMethod                  | `M-{`        |\r\n| Navigation | Edit.ScrollLineCenter                | `C-l`        |\r\n| Navigation | Edit.ToggleAllOutling                | `C-u,M-c`    |\r\n| Navigation | Edit.ToggleOutlingExpansion          | `C-i`        |\r\n| Navigation | Edit.WordNext                        | `M-f`        |\r\n| Navigation | Edit.WordPrevious                    | `M-b`        |\r\n| Navigation | ReSharper.ReSharper_GotoRecentFiles  | `M-x,b`      |\r\n| Navigation | Team.TeamExplorerSearch              | `C-x,g`      |\r\n| Navigation | View.C#Interactive                   | `C-c,i`      |\r\n| Navigation | Window.NewVerticalTabGroup           | `C-x,&#124;` |\r\n| Navigation | Window.PreviousTabGroup              | `C-x,1`      |\r\n| Edit       | Build.BuildSolution                  | `C-c,b`      |\r\n| Edit       | Build.RebuildSolution                | `C-c,r`      |\r\n| Edit       | CodeMaid.JoinLine                    | `C-c,j`      |\r\n| Edit       | CodeMaid.SortLines                   | `M-x,s`      |\r\n| Edit       | Debug.Start                          | `C-c,d`      |\r\n| Edit       | Edit.BackwardDelete                  | `C-h`        |\r\n| Edit       | Edit.BackwardDelete                  | `M-h`        |\r\n| Edit       | Edit.BreakLine                       | `C-m`        |\r\n| Edit       | Edit.Capitalize                      | `M-c`        |\r\n| Edit       | Edit.CommentSelection                | `M-;`        |\r\n| Edit       | Edit.Delete                          | `C-d`        |\r\n| Edit       | Edit.InsertSnippet                   | `C-,`        |\r\n| Edit       | Edit.LineCut                         | `C-k`        |\r\n| Edit       | Edit.LineDownExtendColumn            | `M-.`        |\r\n| Edit       | Edit.LineUpExtendColumn              | `M-,`        |\r\n| Edit       | Edit.MakeLowercase                   | `M-l`        |\r\n| Edit       | Edit.MakeUppercase                   | `M-u`        |\r\n| Edit       | Edit.Paste                           | `C-y`        |\r\n| Edit       | Edit.SelectCurrentWord               | `C-SPC`      |\r\n| Edit       | Edit.UncommentSelection              | `M-:`        |\r\n| Edit       | Edit.Undo                            | `M-/`        |\r\n| Edit       | File.Close                           | `C-x,k`      |\r\n| Edit       | File.SaveSelection                   | `C-x,C-s`    |\r\n| Edit       | Project.AddNewItem                   | `C-c,s`      |\r\n| Edit       | ReSharpe.\\_ReSharper\\_DuplicateText  | `C-c,p`      |\r\n| Edit       | ReSharper.ReSharper_GotoRelatedFile  | `C-c,;`      |\r\n| Edit       | ReSharper.ReSharper_GotoText         | `C-c,g`      |\r\n| Edit       | Tools.ManageNuGetPackagesforSolution | `C-c,n`      |\r\n| Edit       | Tools.Options                        | `M-0`        |\r\n| Edit       | View.PackageManagerConsole           | `C-q,1`      |\r\n\r\n# WRAPUP\r\n途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。","body_html":"<a href=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"484\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/e559af9e-af78-4d70-a76f-e41ab5110fd7.png\"></a>\n<p data-sourcepos=\"3:1-3:280\">Xamarinに手を出し始めたのは良いのですが、その開発環境がどうにも手になじまず試行錯誤しています。今回の記事で解決できるかというと微妙ではありますが、やれるだけのことはやってみようと思います。</p>\n<h1 data-sourcepos=\"5:1-5:9\" id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"6:1-12:0\">\n<li data-sourcepos=\"6:1-12:0\">Xamarin開発環境がサーバー側のそれとかい離している\n<ul data-sourcepos=\"7:3-12:0\">\n<li data-sourcepos=\"7:3-7:68\">Visual Studio Community 2015の動作がもっさりしている</li>\n<li data-sourcepos=\"8:3-8:46\">適切な開発フローがわからない</li>\n<li data-sourcepos=\"9:3-9:76\">適切なアプリケーションフレームワークがわからない</li>\n<li data-sourcepos=\"10:3-10:53\">適切なXAMLプレビュワーがわからない</li>\n<li data-sourcepos=\"11:3-12:0\">適切なAndroidエミュレーターがわからない</li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"13:1-13:10\" id=\"2-0-0\" name=\"2-0-0\">\n<a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"14:1-14:180\">というわけで、動作が快適になったといわれるVisual Studio 2017がでたのでそちらを中心に開発環境を暫定で整理します、永遠のWIPです。</p>\n<h2 data-sourcepos=\"16:1-16:18\" id=\"2-1-0\" name=\"2-1-0\">\n<a class=\"anchor\" id=\"開発フロー\" name=\"%E9%96%8B%E7%99%BA%E3%83%95%E3%83%AD%E3%83%BC\" href=\"#%E9%96%8B%E7%99%BA%E3%83%95%E3%83%AD%E3%83%BC\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"開発フロー\"> &gt; 開発フロー</span></a>開発フロー</h2>\n<p data-sourcepos=\"17:1-17:63\">まず、想定している開発フローは下記の通り。</p>\n<ul data-sourcepos=\"19:1-39:0\">\n<li data-sourcepos=\"19:1-28:26\">テスト駆動開発\n<ul data-sourcepos=\"20:3-28:26\">\n<li data-sourcepos=\"20:3-25:46\">デバッグ\n<ul data-sourcepos=\"21:5-25:46\">\n<li data-sourcepos=\"21:5-21:105\">エミュレーター画面の動作確認 - ビルドスピード等考慮してUWPでおこなう</li>\n<li data-sourcepos=\"22:5-22:57\">アウトプット - Debug.WriteLineなどの確認</li>\n<li data-sourcepos=\"23:5-23:45\">イミディエイト - 変数の追跡</li>\n<li data-sourcepos=\"24:5-24:51\">C# REPL - C#やパッケージの動作確認</li>\n<li data-sourcepos=\"25:5-25:46\">XAMLのプレビュー - いらない子</li>\n</ul>\n</li>\n<li data-sourcepos=\"26:3-28:26\">テスト\n<ul data-sourcepos=\"27:5-28:26\">\n<li data-sourcepos=\"27:5-27:29\">単体テスト - NUnit</li>\n<li data-sourcepos=\"28:5-28:26\">UIテスト - 保留</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"29:1-39:0\">\n<a href=\"http://qiita.com/tbpgr/items/4ff76ef35c4ff0ec8314\" target=\"_blank\" rel=\"noopener noreferrer\">Github Flow</a>にそったデプロイ\n<ul data-sourcepos=\"30:3-39:0\">\n<li data-sourcepos=\"30:3-30:70\">\n<code>feature</code>ブランチをきってプルリクエストをたてる</li>\n<li data-sourcepos=\"31:3-34:147\">当該ブランチに対してCIツールでビルド・テスト・配布を自動化 - ビルド・テスト後にレビュアーにメールにて配布しスマホで確認してもらう流れ。\n<ul data-sourcepos=\"32:5-34:147\">\n<li data-sourcepos=\"32:5-34:147\">CIツール\n<ul data-sourcepos=\"33:7-34:147\">\n<li data-sourcepos=\"33:7-33:288\">\n<a href=\"https://mobile.azure.com/apps\" target=\"_blank\" rel=\"noopener noreferrer\">Visual Studio Mobile Center</a> - HockeyApp（クラッシュレポート）とXamarin Test Cloud（UIテスト）を統合したCIサービス。Xamarin.Formsは2017年3月18日現在iOS対応、Android非対応という状況。UWPは知らない。</li>\n<li data-sourcepos=\"34:7-34:147\">\n<a href=\"https://app.wercker.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Wercker</a> - <code>master</code>マージ後にいらなくなった<code>feature</code>ブランチを消すなどの後片付け役。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"35:3-39:0\">Appストアへデプロイ\n<ul data-sourcepos=\"36:5-39:0\">\n<li data-sourcepos=\"36:5-36:13\">Android</li>\n<li data-sourcepos=\"37:5-37:9\">iOS</li>\n<li data-sourcepos=\"38:5-39:0\">UWP</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p data-sourcepos=\"40:1-40:150\">ちなみにWerckerでの<code>feature</code>ブランチなどの後片付けはこんな感じです。<code>master</code>マージのタイミングで走らせます。</p>\n<div class=\"code-block\" data-sourcepos=\"42:1-65:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>yaml</div>\n<div class=\"highlight\"><pre class=\"highlight yaml\"><code><span class=\"na\">box</span><span class=\"pi\">:</span> <span class=\"s\">ruby:2.4.0</span>\n<span class=\"na\">build</span><span class=\"pi\">:</span>\n  <span class=\"na\">steps</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"na\">add-ssh-key</span><span class=\"pi\">:</span>\n        <span class=\"na\">host</span><span class=\"pi\">:</span> <span class=\"s\">github.com</span>\n        <span class=\"na\">keyname</span><span class=\"pi\">:</span> <span class=\"s\">GITHUB</span>\n    <span class=\"pi\">-</span> <span class=\"na\">add-to-known_hosts</span><span class=\"pi\">:</span>\n        <span class=\"na\">hostname</span><span class=\"pi\">:</span> <span class=\"s\">github.com</span>\n        <span class=\"na\">fingerprint</span><span class=\"pi\">:</span> <span class=\"s\">16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48</span>\n    <span class=\"pi\">-</span> <span class=\"na\">script</span><span class=\"pi\">:</span>\n        <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Add git-tag</span>\n        <span class=\"na\">code</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n          <span class=\"s\">_tag=$(date -u -d '9 hours' +%Y-%m-%d-%H-%M-%S)</span>\n          <span class=\"s\">git remote add origin git@github.com:nabinno/utagaki.git</span>\n          <span class=\"s\">git config --global user.email 'wercker@blahfe.com'</span>\n          <span class=\"s\">git config --global user.name 'Wercker Bot'</span>\n          <span class=\"s\">git tag -a $_tag master -m 'wercker deploy'</span>\n          <span class=\"s\">git push origin $_tag</span>\n  <span class=\"na\">after-steps</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">wantedly/pretty-slack-notify</span><span class=\"pi\">:</span>\n        <span class=\"na\">webhook_url</span><span class=\"pi\">:</span> <span class=\"s\">${SLACK_WEBHOOK_URL}</span>\n        <span class=\"na\">channel</span><span class=\"pi\">:</span> <span class=\"s\">general</span>\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"67:1-67:15\" id=\"2-2-0\" name=\"2-2-0\">\n<a class=\"anchor\" id=\"開発環境\" name=\"%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\" href=\"#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"開発環境\"> &gt; 開発環境</span></a>開発環境</h2>\n<p data-sourcepos=\"68:1-68:607\">その上で開発環境は下記の通りに設定します。Visual Studio 2017版Xamarinは現時点でHypervisorがHyper-Vを考慮していない、Intel HAXMやVirtualBoxなどのホスト型を前提としています。ただ私見としては、VirtualBoxなどのホスト型はWindowsアップデート時に動作検証対象となっておらずクラッシュが起きやすいです。Hyper-Vを開発環境とすることをお薦めします。いずれにせよ、デバッグはビルドスピード等がHypervisorに左右されるAndroidではなくUWPで行うと良いでしょう。</p>\n<ul data-sourcepos=\"70:1-114:0\">\n<li data-sourcepos=\"70:1-105:234\">IDE\n<ul data-sourcepos=\"71:3-105:234\">\n<li data-sourcepos=\"71:3-71:33\">Visual Studio Community 2017</li>\n<li data-sourcepos=\"72:5-92:33\">Basic extentions\n<ul data-sourcepos=\"73:7-92:33\">\n<li data-sourcepos=\"73:7-73:77\">Microsoft Visual Studio Community 2017 Version 15.0.26228.9 D15RTWSVC</li>\n<li data-sourcepos=\"74:7-74:50\">Microsoft .NET Framework Version 4.6.01586</li>\n<li data-sourcepos=\"75:7-75:22\">Visual C# 2017</li>\n<li data-sourcepos=\"76:7-76:41\">JavaScript Language Service   2.0</li>\n<li data-sourcepos=\"77:7-77:39\">JavaScript Project System   2.0</li>\n<li data-sourcepos=\"78:7-78:43\">JavaScript UWP Project System   2.0</li>\n<li data-sourcepos=\"79:7-79:28\">TypeScript   2.1.5.0</li>\n<li data-sourcepos=\"80:7-80:48\">Microsoft Visual Studio VC Package   1.0</li>\n<li data-sourcepos=\"81:7-81:37\">Xamarin   4.3.0.784 (73f58d6)</li>\n<li data-sourcepos=\"82:7-82:48\">Xamarin.Android SDK   7.1.0.41 (9578cdc)</li>\n<li data-sourcepos=\"83:7-83:62\">Xamarin.iOS and Xamarin.Mac SDK   10.4.0.123 (35d1ccd)</li>\n<li data-sourcepos=\"84:7-84:47\">Visual Studio Tools for Unity   3.0.0.1</li>\n<li data-sourcepos=\"85:7-85:70\">Visual Studio Tools for Universal Windows Apps   15.0.26228.00</li>\n<li data-sourcepos=\"86:7-86:70\">Mono Debugging for Visual Studio   Mono.Debugging.VisualStudio</li>\n<li data-sourcepos=\"87:7-87:49\">ASP.NET and Web Tools 2017   15.0.30223.0</li>\n<li data-sourcepos=\"88:7-88:37\">NuGet Package Manager   4.0.0</li>\n<li data-sourcepos=\"89:7-89:32\">Common Azure Tools   1.9</li>\n<li data-sourcepos=\"90:7-90:39\">NpgsqlVSPackage Extension   1.0</li>\n<li data-sourcepos=\"91:7-91:37\">Merq   1.1.13-alpha (2f64b6d)</li>\n<li data-sourcepos=\"92:7-92:33\">VSPackage Extension   1.2</li>\n</ul>\n</li>\n<li data-sourcepos=\"93:5-102:39\">Other extentions\n<ul data-sourcepos=\"94:7-102:39\">\n<li data-sourcepos=\"94:7-94:87\">JetBrains ReSharper Ultimate 2016.3.2 - なにはともあれ入れておく。</li>\n<li data-sourcepos=\"95:7-95:70\">CodeMaid   10.2.7 - 気軽にコード整形してくれる。</li>\n<li data-sourcepos=\"96:7-96:24\">.ignore   1.2.71</li>\n<li data-sourcepos=\"97:7-97:34\">Markdown Editor   1.11.201</li>\n<li data-sourcepos=\"98:7-98:29\">File Nesting   2.6.67</li>\n<li data-sourcepos=\"99:7-99:37\">GitHub.VisualStudio   2.2.0.8</li>\n<li data-sourcepos=\"100:7-100:27\">VSColorOutput   2.5</li>\n<li data-sourcepos=\"101:7-101:96\">HideMenu   1.0 - MinimaliticViewとの組み合わせでEmacsっぽい画面になる。</li>\n<li data-sourcepos=\"102:7-102:39\">MinimaliticView Extension   1.0</li>\n</ul>\n</li>\n<li data-sourcepos=\"103:5-105:234\">Debug用エミュレーター\n<ul data-sourcepos=\"104:7-105:234\">\n<li data-sourcepos=\"104:7-104:200\">XAML Previewer for Xamarin.Forms - Gorilla PlayerはVS2017未対応の上、Data Bindingを参照できないため機能的にXAML Previewer for Xamarin.Formsとほぼかわらない様子。</li>\n<li data-sourcepos=\"105:7-105:234\">Android Emulator Manager/Android SDK Manager - VS2017ではHyper-VベースのVisual Studio Emulator for Xamarinがなくなり、Intel HAXMベースのAndroid Emulator Manager/Android SDK Manager (Google)のみとなった。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"106:1-114:0\">DevStack\n<ul data-sourcepos=\"107:3-114:0\">\n<li data-sourcepos=\"107:3-114:0\">Prism\n<ul data-sourcepos=\"108:5-114:0\">\n<li data-sourcepos=\"108:5-108:71\">Prism template - スキャフォールド、スニペット便利</li>\n<li data-sourcepos=\"109:5-109:76\">Profile78 - Profile259になっているがWindows 8必要ないので</li>\n<li data-sourcepos=\"110:5-110:21\">Newtonsoft.Json</li>\n<li data-sourcepos=\"111:5-111:46\">FubarCoder.RestSharp.Portable.HttpClient</li>\n<li data-sourcepos=\"112:5-112:11\">NUnit</li>\n<li data-sourcepos=\"113:5-114:0\">Moq</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 data-sourcepos=\"115:1-115:21\" id=\"2-3-0\" name=\"2-3-0\">\n<a class=\"anchor\" id=\"キーバインド\" name=\"%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89\" href=\"#%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89\" data-position=\"2-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"キーバインド\"> &gt; キーバインド</span></a>キーバインド</h2>\n<p data-sourcepos=\"116:1-116:225\">おまけのEmacs風キーバインド。Edit.Emacsメソッドは1級市民ではないのでその周辺で代替します。Edit.LineCut、Edit.Outline、ReSharpeのいらないキーバインドは削除しています。</p>\n<table data-sourcepos=\"118:1-174:68\">\n<thead>\n<tr data-sourcepos=\"118:1-118:68\">\n<th data-sourcepos=\"118:2-118:13\">category</th>\n<th data-sourcepos=\"118:15-118:52\">command</th>\n<th data-sourcepos=\"118:54-118:67\">keybind</th>\n</tr>\n</thead>\n<tbody>\n<tr data-sourcepos=\"120:1-120:68\">\n<td data-sourcepos=\"120:2-120:13\">Navigation</td>\n<td data-sourcepos=\"120:15-120:52\">CodeMaid.SwitchFile</td>\n<td data-sourcepos=\"120:54-120:67\"><code>C-c,:</code></td>\n</tr>\n<tr data-sourcepos=\"121:1-121:68\">\n<td data-sourcepos=\"121:2-121:13\">Navigation</td>\n<td data-sourcepos=\"121:15-121:52\">Edit.CharLeft</td>\n<td data-sourcepos=\"121:54-121:67\"><code>C-b</code></td>\n</tr>\n<tr data-sourcepos=\"122:1-122:68\">\n<td data-sourcepos=\"122:2-122:13\">Navigation</td>\n<td data-sourcepos=\"122:15-122:52\">Edit.CharRight</td>\n<td data-sourcepos=\"122:54-122:67\"><code>C-f</code></td>\n</tr>\n<tr data-sourcepos=\"123:1-123:68\">\n<td data-sourcepos=\"123:2-123:13\">Navigation</td>\n<td data-sourcepos=\"123:15-123:52\">Edit.DocumentBottom</td>\n<td data-sourcepos=\"123:54-123:67\"><code>M-&gt;</code></td>\n</tr>\n<tr data-sourcepos=\"124:1-124:68\">\n<td data-sourcepos=\"124:2-124:13\">Navigation</td>\n<td data-sourcepos=\"124:15-124:52\">Edit.DocumentTop</td>\n<td data-sourcepos=\"124:54-124:67\"><code>M-&lt;</code></td>\n</tr>\n<tr data-sourcepos=\"125:1-125:68\">\n<td data-sourcepos=\"125:2-125:13\">Navigation</td>\n<td data-sourcepos=\"125:15-125:52\">Edit.GoTo</td>\n<td data-sourcepos=\"125:54-125:67\"><code>M-g</code></td>\n</tr>\n<tr data-sourcepos=\"126:1-126:68\">\n<td data-sourcepos=\"126:2-126:13\">Navigation</td>\n<td data-sourcepos=\"126:15-126:52\">Edit.IncrementalSearch</td>\n<td data-sourcepos=\"126:54-126:67\"><code>C-s</code></td>\n</tr>\n<tr data-sourcepos=\"127:1-127:68\">\n<td data-sourcepos=\"127:2-127:13\">Navigation</td>\n<td data-sourcepos=\"127:15-127:52\">Edit.LineDown</td>\n<td data-sourcepos=\"127:54-127:67\"><code>C-n</code></td>\n</tr>\n<tr data-sourcepos=\"128:1-128:68\">\n<td data-sourcepos=\"128:2-128:13\">Navigation</td>\n<td data-sourcepos=\"128:15-128:52\">Edit.LineEnd</td>\n<td data-sourcepos=\"128:54-128:67\"><code>C-e</code></td>\n</tr>\n<tr data-sourcepos=\"129:1-129:68\">\n<td data-sourcepos=\"129:2-129:13\">Navigation</td>\n<td data-sourcepos=\"129:15-129:52\">Edit.LineStart</td>\n<td data-sourcepos=\"129:54-129:67\"><code>C-a</code></td>\n</tr>\n<tr data-sourcepos=\"130:1-130:68\">\n<td data-sourcepos=\"130:2-130:13\">Navigation</td>\n<td data-sourcepos=\"130:15-130:52\">Edit.LineUp</td>\n<td data-sourcepos=\"130:54-130:67\"><code>C-p</code></td>\n</tr>\n<tr data-sourcepos=\"131:1-131:68\">\n<td data-sourcepos=\"131:2-131:13\">Navigation</td>\n<td data-sourcepos=\"131:15-131:52\">Edit.NextMethod</td>\n<td data-sourcepos=\"131:54-131:67\"><code>M-}</code></td>\n</tr>\n<tr data-sourcepos=\"132:1-132:68\">\n<td data-sourcepos=\"132:2-132:13\">Navigation</td>\n<td data-sourcepos=\"132:15-132:52\">Edit.PageDown</td>\n<td data-sourcepos=\"132:54-132:67\"><code>C-v</code></td>\n</tr>\n<tr data-sourcepos=\"133:1-133:68\">\n<td data-sourcepos=\"133:2-133:13\">Navigation</td>\n<td data-sourcepos=\"133:15-133:52\">Edit.PageUp</td>\n<td data-sourcepos=\"133:54-133:67\"><code>M-v</code></td>\n</tr>\n<tr data-sourcepos=\"134:1-134:68\">\n<td data-sourcepos=\"134:2-134:13\">Navigation</td>\n<td data-sourcepos=\"134:15-134:52\">Edit.PreviousMethod</td>\n<td data-sourcepos=\"134:54-134:67\"><code>M-{</code></td>\n</tr>\n<tr data-sourcepos=\"135:1-135:68\">\n<td data-sourcepos=\"135:2-135:13\">Navigation</td>\n<td data-sourcepos=\"135:15-135:52\">Edit.ScrollLineCenter</td>\n<td data-sourcepos=\"135:54-135:67\"><code>C-l</code></td>\n</tr>\n<tr data-sourcepos=\"136:1-136:68\">\n<td data-sourcepos=\"136:2-136:13\">Navigation</td>\n<td data-sourcepos=\"136:15-136:52\">Edit.ToggleAllOutling</td>\n<td data-sourcepos=\"136:54-136:67\"><code>C-u,M-c</code></td>\n</tr>\n<tr data-sourcepos=\"137:1-137:68\">\n<td data-sourcepos=\"137:2-137:13\">Navigation</td>\n<td data-sourcepos=\"137:15-137:52\">Edit.ToggleOutlingExpansion</td>\n<td data-sourcepos=\"137:54-137:67\"><code>C-i</code></td>\n</tr>\n<tr data-sourcepos=\"138:1-138:68\">\n<td data-sourcepos=\"138:2-138:13\">Navigation</td>\n<td data-sourcepos=\"138:15-138:52\">Edit.WordNext</td>\n<td data-sourcepos=\"138:54-138:67\"><code>M-f</code></td>\n</tr>\n<tr data-sourcepos=\"139:1-139:68\">\n<td data-sourcepos=\"139:2-139:13\">Navigation</td>\n<td data-sourcepos=\"139:15-139:52\">Edit.WordPrevious</td>\n<td data-sourcepos=\"139:54-139:67\"><code>M-b</code></td>\n</tr>\n<tr data-sourcepos=\"140:1-140:68\">\n<td data-sourcepos=\"140:2-140:13\">Navigation</td>\n<td data-sourcepos=\"140:15-140:52\">ReSharper.ReSharper_GotoRecentFiles</td>\n<td data-sourcepos=\"140:54-140:67\"><code>M-x,b</code></td>\n</tr>\n<tr data-sourcepos=\"141:1-141:68\">\n<td data-sourcepos=\"141:2-141:13\">Navigation</td>\n<td data-sourcepos=\"141:15-141:52\">Team.TeamExplorerSearch</td>\n<td data-sourcepos=\"141:54-141:67\"><code>C-x,g</code></td>\n</tr>\n<tr data-sourcepos=\"142:1-142:68\">\n<td data-sourcepos=\"142:2-142:13\">Navigation</td>\n<td data-sourcepos=\"142:15-142:52\">View.C#Interactive</td>\n<td data-sourcepos=\"142:54-142:67\"><code>C-c,i</code></td>\n</tr>\n<tr data-sourcepos=\"143:1-143:68\">\n<td data-sourcepos=\"143:2-143:13\">Navigation</td>\n<td data-sourcepos=\"143:15-143:52\">Window.NewVerticalTabGroup</td>\n<td data-sourcepos=\"143:54-143:67\"><code>C-x,&amp;#124;</code></td>\n</tr>\n<tr data-sourcepos=\"144:1-144:68\">\n<td data-sourcepos=\"144:2-144:13\">Navigation</td>\n<td data-sourcepos=\"144:15-144:52\">Window.PreviousTabGroup</td>\n<td data-sourcepos=\"144:54-144:67\"><code>C-x,1</code></td>\n</tr>\n<tr data-sourcepos=\"145:1-145:68\">\n<td data-sourcepos=\"145:2-145:13\">Edit</td>\n<td data-sourcepos=\"145:15-145:52\">Build.BuildSolution</td>\n<td data-sourcepos=\"145:54-145:67\"><code>C-c,b</code></td>\n</tr>\n<tr data-sourcepos=\"146:1-146:68\">\n<td data-sourcepos=\"146:2-146:13\">Edit</td>\n<td data-sourcepos=\"146:15-146:52\">Build.RebuildSolution</td>\n<td data-sourcepos=\"146:54-146:67\"><code>C-c,r</code></td>\n</tr>\n<tr data-sourcepos=\"147:1-147:68\">\n<td data-sourcepos=\"147:2-147:13\">Edit</td>\n<td data-sourcepos=\"147:15-147:52\">CodeMaid.JoinLine</td>\n<td data-sourcepos=\"147:54-147:67\"><code>C-c,j</code></td>\n</tr>\n<tr data-sourcepos=\"148:1-148:68\">\n<td data-sourcepos=\"148:2-148:13\">Edit</td>\n<td data-sourcepos=\"148:15-148:52\">CodeMaid.SortLines</td>\n<td data-sourcepos=\"148:54-148:67\"><code>M-x,s</code></td>\n</tr>\n<tr data-sourcepos=\"149:1-149:68\">\n<td data-sourcepos=\"149:2-149:13\">Edit</td>\n<td data-sourcepos=\"149:15-149:52\">Debug.Start</td>\n<td data-sourcepos=\"149:54-149:67\"><code>C-c,d</code></td>\n</tr>\n<tr data-sourcepos=\"150:1-150:68\">\n<td data-sourcepos=\"150:2-150:13\">Edit</td>\n<td data-sourcepos=\"150:15-150:52\">Edit.BackwardDelete</td>\n<td data-sourcepos=\"150:54-150:67\"><code>C-h</code></td>\n</tr>\n<tr data-sourcepos=\"151:1-151:68\">\n<td data-sourcepos=\"151:2-151:13\">Edit</td>\n<td data-sourcepos=\"151:15-151:52\">Edit.BackwardDelete</td>\n<td data-sourcepos=\"151:54-151:67\"><code>M-h</code></td>\n</tr>\n<tr data-sourcepos=\"152:1-152:68\">\n<td data-sourcepos=\"152:2-152:13\">Edit</td>\n<td data-sourcepos=\"152:15-152:52\">Edit.BreakLine</td>\n<td data-sourcepos=\"152:54-152:67\"><code>C-m</code></td>\n</tr>\n<tr data-sourcepos=\"153:1-153:68\">\n<td data-sourcepos=\"153:2-153:13\">Edit</td>\n<td data-sourcepos=\"153:15-153:52\">Edit.Capitalize</td>\n<td data-sourcepos=\"153:54-153:67\"><code>M-c</code></td>\n</tr>\n<tr data-sourcepos=\"154:1-154:68\">\n<td data-sourcepos=\"154:2-154:13\">Edit</td>\n<td data-sourcepos=\"154:15-154:52\">Edit.CommentSelection</td>\n<td data-sourcepos=\"154:54-154:67\"><code>M-;</code></td>\n</tr>\n<tr data-sourcepos=\"155:1-155:68\">\n<td data-sourcepos=\"155:2-155:13\">Edit</td>\n<td data-sourcepos=\"155:15-155:52\">Edit.Delete</td>\n<td data-sourcepos=\"155:54-155:67\"><code>C-d</code></td>\n</tr>\n<tr data-sourcepos=\"156:1-156:68\">\n<td data-sourcepos=\"156:2-156:13\">Edit</td>\n<td data-sourcepos=\"156:15-156:52\">Edit.InsertSnippet</td>\n<td data-sourcepos=\"156:54-156:67\"><code>C-,</code></td>\n</tr>\n<tr data-sourcepos=\"157:1-157:68\">\n<td data-sourcepos=\"157:2-157:13\">Edit</td>\n<td data-sourcepos=\"157:15-157:52\">Edit.LineCut</td>\n<td data-sourcepos=\"157:54-157:67\"><code>C-k</code></td>\n</tr>\n<tr data-sourcepos=\"158:1-158:68\">\n<td data-sourcepos=\"158:2-158:13\">Edit</td>\n<td data-sourcepos=\"158:15-158:52\">Edit.LineDownExtendColumn</td>\n<td data-sourcepos=\"158:54-158:67\"><code>M-.</code></td>\n</tr>\n<tr data-sourcepos=\"159:1-159:68\">\n<td data-sourcepos=\"159:2-159:13\">Edit</td>\n<td data-sourcepos=\"159:15-159:52\">Edit.LineUpExtendColumn</td>\n<td data-sourcepos=\"159:54-159:67\"><code>M-,</code></td>\n</tr>\n<tr data-sourcepos=\"160:1-160:68\">\n<td data-sourcepos=\"160:2-160:13\">Edit</td>\n<td data-sourcepos=\"160:15-160:52\">Edit.MakeLowercase</td>\n<td data-sourcepos=\"160:54-160:67\"><code>M-l</code></td>\n</tr>\n<tr data-sourcepos=\"161:1-161:68\">\n<td data-sourcepos=\"161:2-161:13\">Edit</td>\n<td data-sourcepos=\"161:15-161:52\">Edit.MakeUppercase</td>\n<td data-sourcepos=\"161:54-161:67\"><code>M-u</code></td>\n</tr>\n<tr data-sourcepos=\"162:1-162:68\">\n<td data-sourcepos=\"162:2-162:13\">Edit</td>\n<td data-sourcepos=\"162:15-162:52\">Edit.Paste</td>\n<td data-sourcepos=\"162:54-162:67\"><code>C-y</code></td>\n</tr>\n<tr data-sourcepos=\"163:1-163:68\">\n<td data-sourcepos=\"163:2-163:13\">Edit</td>\n<td data-sourcepos=\"163:15-163:52\">Edit.SelectCurrentWord</td>\n<td data-sourcepos=\"163:54-163:67\"><code>C-SPC</code></td>\n</tr>\n<tr data-sourcepos=\"164:1-164:68\">\n<td data-sourcepos=\"164:2-164:13\">Edit</td>\n<td data-sourcepos=\"164:15-164:52\">Edit.UncommentSelection</td>\n<td data-sourcepos=\"164:54-164:67\"><code>M-:</code></td>\n</tr>\n<tr data-sourcepos=\"165:1-165:68\">\n<td data-sourcepos=\"165:2-165:13\">Edit</td>\n<td data-sourcepos=\"165:15-165:52\">Edit.Undo</td>\n<td data-sourcepos=\"165:54-165:67\"><code>M-/</code></td>\n</tr>\n<tr data-sourcepos=\"166:1-166:68\">\n<td data-sourcepos=\"166:2-166:13\">Edit</td>\n<td data-sourcepos=\"166:15-166:52\">File.Close</td>\n<td data-sourcepos=\"166:54-166:67\"><code>C-x,k</code></td>\n</tr>\n<tr data-sourcepos=\"167:1-167:68\">\n<td data-sourcepos=\"167:2-167:13\">Edit</td>\n<td data-sourcepos=\"167:15-167:52\">File.SaveSelection</td>\n<td data-sourcepos=\"167:54-167:67\"><code>C-x,C-s</code></td>\n</tr>\n<tr data-sourcepos=\"168:1-168:68\">\n<td data-sourcepos=\"168:2-168:13\">Edit</td>\n<td data-sourcepos=\"168:15-168:52\">Project.AddNewItem</td>\n<td data-sourcepos=\"168:54-168:67\"><code>C-c,s</code></td>\n</tr>\n<tr data-sourcepos=\"169:1-169:68\">\n<td data-sourcepos=\"169:2-169:13\">Edit</td>\n<td data-sourcepos=\"169:15-169:52\">ReSharpe._ReSharper_DuplicateText</td>\n<td data-sourcepos=\"169:54-169:67\"><code>C-c,p</code></td>\n</tr>\n<tr data-sourcepos=\"170:1-170:68\">\n<td data-sourcepos=\"170:2-170:13\">Edit</td>\n<td data-sourcepos=\"170:15-170:52\">ReSharper.ReSharper_GotoRelatedFile</td>\n<td data-sourcepos=\"170:54-170:67\"><code>C-c,;</code></td>\n</tr>\n<tr data-sourcepos=\"171:1-171:68\">\n<td data-sourcepos=\"171:2-171:13\">Edit</td>\n<td data-sourcepos=\"171:15-171:52\">ReSharper.ReSharper_GotoText</td>\n<td data-sourcepos=\"171:54-171:67\"><code>C-c,g</code></td>\n</tr>\n<tr data-sourcepos=\"172:1-172:68\">\n<td data-sourcepos=\"172:2-172:13\">Edit</td>\n<td data-sourcepos=\"172:15-172:52\">Tools.ManageNuGetPackagesforSolution</td>\n<td data-sourcepos=\"172:54-172:67\"><code>C-c,n</code></td>\n</tr>\n<tr data-sourcepos=\"173:1-173:68\">\n<td data-sourcepos=\"173:2-173:13\">Edit</td>\n<td data-sourcepos=\"173:15-173:52\">Tools.Options</td>\n<td data-sourcepos=\"173:54-173:67\"><code>M-0</code></td>\n</tr>\n<tr data-sourcepos=\"174:1-174:68\">\n<td data-sourcepos=\"174:2-174:13\">Edit</td>\n<td data-sourcepos=\"174:15-174:52\">View.PackageManagerConsole</td>\n<td data-sourcepos=\"174:54-174:67\"><code>C-q,1</code></td>\n</tr>\n</tbody>\n</table>\n<h1 data-sourcepos=\"176:1-176:8\" id=\"3-0-0\" name=\"3-0-0\">\n<a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"177:1-177:271\">途中途中心の声が漏れていますが、なんとか触れる状態になってきました。ただ、モチベーションとしては下がり気味なのでこのままXamarinをさわり続けるかは分かりません。やはり文化が違いますね。</p>\n","tags":["xamarin.forms","prism","xamarin"],"updated_at":"2021-01-17T12:26:26+09:00","childPublishedDate":{"published_on":"2017-03-31T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_ef5f024307008aa399b91f87fa5f64e8.jpg"}},"relatedPosts":{"edges":[{"node":{"number":91,"relative_category":"blog/backend","fields":{"title":"Hardware-Accelerated GPU Scheduling機能を使ったWSL2はどのくらいパフォーマンスが向上するか","excerpt":"新しいPC端末を購入したところ「Hardware-Accerlarated GPU Scheduling」機能があることに気づきました。使用したところ気持ち速くなったように感じたのでどのくらいパフォーマンスが向上したか調べてみました。   > PROBLEMPROBLEM \n\n- システム設定で「Hardware-Accerlarated GPU Scheduling（HAGS）」機能を使ったところWSL2のパフォーマンスが体感的に速くなったように感じた 他の端末にもHAGSを展開していきたいので実際にどのらくらいパフォーマンスが向上するか検証したい \n- 他の端末にもHAGSを展開していきたいので実際にどのらくらいパフォーマンスが向上するか検証したい  > SOLUTIONSOLUTION \n\nと言うわけで、以前Phoronixによって書かれた「WSLとWSL2とのベンチマーク比較の記事」を参考にPhoronix Test SuiteでHAGSのオン・オフのベンチマーク比較を行います。  > 検証端末の環境検証端末の環境    Item Content     Processor AMD Ryzen 9 5900X 12-Core (12 Cores / 24 Threads)   Memory 52 GB   Disk 2 x 275GB Virtual Disk   OS Ubuntu 20.04   Kernel 5.4.72-microsoft-standard-WSL2 (x86_64)   Display Server X Server   Compiler GCC 9.3.0   File System ext4   System Layer wsl     > Phoronix Test SuiteをインストールするPhoronix Test Suiteをインストールする sh\n\nbrew install phoronix-test-suite sudo apt install php php-gd php-xml php-curl   > 実行するベンチマークテストを選定する実行するベンチマークテストを選定する \n\nまず実行可能なテストとテストスーツを確認します、テストスーツは関連テストのグループになります。 sh\n\nphoronix-test-suite list-available-tests phoronix-test-suite list-available-suite  \n\n今回は開発する際に関係がある下記のテストを選定しました。テストスーツは数時間では完了しないケースがあったので今回の対象から外しています。 \n\n- pts/build-gcc\n- pts/compress-gzip\n- pts/system-decompress-gzip\n- pts/gnupg\n- pts/mutex\n- pts/openssl\n- pts/git\n- pts/pybench\n- pts/nginx\n- pts/node-web-tooling  > ベンチマーク結果ベンチマーク結果    Item HAGSオン HAGSオフ     pts/build-gcc 717.39 sec 715.56 sec   pts/compress-gzip 29.10 sec 29.36 sec   pts/system-decompress-gzip 2.397 sec 2.427 sec   pts/mutex Lock Shared 15.2 sec 15.2 sec   pts/mutex Unlock spinlock 33.1 sec 33.4 sec   pts/mutex Unlock std::mutex 14.8 sec 14.7 sec   pts/mutex Semaphore Release And Acquire 8.44 sec 8.36 sec   pts/mutex Unlock pthread_mutex 8.45 sec 8.34 sec   pts/openssl 3704.3 sign/sec 3694 sign/sec   pts/git 39.01 sec 38.85 sec   pts/pybench 869 msec 877 msec   pts/nginx 70124.29 req/sec 71919.70 req/sec   pts/node-web-tooling 16.71 sec 17.01 sec     > WRAPUPWRAPUP \n\n残念ながらベンチマーク結果からHAGSのオンとオフの間に大きなパフォーマンスの変化は見られませんでした。通常の開発の場合はほぼ恩恵を受けられないと言って問題ないでしょう。 \n\n結論として、他の端末へのHAGSの展開はお薦めしません。不具合等の口コミも散見されるので使用端末との相性を見ながら導入するのが良さそうです。個人的にはChromeのハードウェアアクセラレーション機能との相性を見つつしばらく運用しようと思います。"},"name":"[2021-08-01]Hardware-Accelerated GPU Scheduling機能を使ったWSL2はどのくらいパフォーマンスが向上するか","tags":["wsl2","hags","windows-10"],"childPublishedDate":{"published_on":"2021-08-01T00:00:00.000Z","published_on_unix":1627776000}}},{"node":{"number":93,"relative_category":"blog/backend","fields":{"title":"AWS CloudTrail用のコスパの良いSIEMを探す","excerpt":"IT統制において証跡管理の充実という観点から、また、ゼロトラストの強化という観点からSIEMの導入が必要になってきた。今回はAWS CloudTrail用のSIEMについてざっと調べました。   > PROBLEMPROBLEM \n\n- AWS CloudTrailのログをセキュリティアカウントに集約しているが、深く監視しきれていない 可能ならアカウントが不審な操作をした場合にアラートを飛ばしたい 可能ならCloudTrail以外のIaaSリソースを監視対象にしたい NewRelicのように人のコストをかけずに管理したい \n- 可能ならアカウントが不審な操作をした場合にアラートを飛ばしたい\n- 可能ならCloudTrail以外のIaaSリソースを監視対象にしたい NewRelicのように人のコストをかけずに管理したい \n- NewRelicのように人のコストをかけずに管理したい  > SOLUTIONSOLUTION \n\nと言うわけで、コスパが良いと噂のSumo LogicとAzure Sentinelを比較評価します。  > Azure SentinelAzure Sentinel  > 料金料金 \n\n- Azure Sentinel の価格 | Microsoft Azure\n- 価格 - Azure Monitor | Microsoft Azure  > SIEMからCloudTrailへの接続方法SIEMからCloudTrailへの接続方法 \n\n1. 下記設定でLog Analyticsワークスペースを作成 サブスクリプション 無料試用版 リソース グループ production 名前 prod-sentinel 地域 東日本 \n2. サブスクリプション 無料試用版\n3. リソース グループ production\n4. 名前 prod-sentinel\n5. 地域 東日本\n6. [ワークスペースprod-sentinel - データコネクタ] にて [アマゾンウェブサービス] コネクタページを開く\n7. [AWSアカウント - IAM - ロール] にて下記設定で [別のAWSアカウント] を作成 アカウントID {Microsoft account ID} オプション 外部IDが必要 をチェック 外部ID {外部ID (ワークスペースID)} パーミッションポリシーを適用 AWSCloudTrailReadOnlyAccess ロール名 AzureSentinel ※ Cf. AWS CloudTrail を Azure Sentinel に接続する | Microsoft Docs アマゾン ウェブ サービス (AWS) のための MCAS と Azure Sentinel - Azure Solution Ideas | Microsoft Docs Security-JAWS 第21回レポート #secjaws #secjaws21 #jawsug | DevelopersIO \n8. アカウントID {Microsoft account ID}\n9. オプション 外部IDが必要 をチェック 外部ID {外部ID (ワークスペースID)} \n10. 外部IDが必要 をチェック\n11. 外部ID {外部ID (ワークスペースID)}\n12. パーミッションポリシーを適用 AWSCloudTrailReadOnlyAccess\n13. ロール名 AzureSentinel\n14. ※ Cf. AWS CloudTrail を Azure Sentinel に接続する | Microsoft Docs アマゾン ウェブ サービス (AWS) のための MCAS と Azure Sentinel - Azure Solution Ideas | Microsoft Docs Security-JAWS 第21回レポート #secjaws #secjaws21 #jawsug | DevelopersIO \n15. AWS CloudTrail を Azure Sentinel に接続する | Microsoft Docs\n16. アマゾン ウェブ サービス (AWS) のための MCAS と Azure Sentinel - Azure Solution Ideas | Microsoft Docs\n17. Security-JAWS 第21回レポート #secjaws #secjaws21 #jawsug | DevelopersIO  > SIEM機能 (AWS CloudTrail)SIEM機能 (AWS CloudTrail) \n\n- デフォルト監視対象 時間経過に伴うイベントアラート 悪意ある可能性があるイベント 最近のインシデント データソースの異常 \n- 時間経過に伴うイベントアラート\n- 悪意ある可能性があるイベント\n- 最近のインシデント\n- データソースの異常\n- ログクエリ Audit Network Security \n- Audit\n- Network\n- Security\n- 脅威管理 インシデント ブック ... 簡易な分析情報を提供 AWSネットワークアクティビティ ... SG、ネットワークACL、IGW、ELB、VPC、サブネット、NIの作成・更新・削除など、AWS ネットワーク関連のリソースアクティビティに関する分析情報を得ます。 AWSユーザーアクティビティ ... 失敗したサインイン試行、IP アドレス、リージョン、ユーザー エージェント、ID の種類、また想定されたロールを持つ悪意のある可能性があるユーザー アクティビティなど、AWS ユーザー アクティビティに関する分析情報を得ます。 ハンティング ... 脅威判定となるログクエリを提供 Changes made to AWS IAM policy Tracking Privileged Account Rare Activity Exploit and Pentest Framework User Agent IAM Privilege Escalation by Instance Profile attachment Privileged role attached to Instance Suspicious credential token access of valid IAM Roles Unused or Unsupported Cloud Regions ノートブック ... Jupyter Notebookによる分析を提供 \n- インシデント\n- ブック ... 簡易な分析情報を提供 AWSネットワークアクティビティ ... SG、ネットワークACL、IGW、ELB、VPC、サブネット、NIの作成・更新・削除など、AWS ネットワーク関連のリソースアクティビティに関する分析情報を得ます。 AWSユーザーアクティビティ ... 失敗したサインイン試行、IP アドレス、リージョン、ユーザー エージェント、ID の種類、また想定されたロールを持つ悪意のある可能性があるユーザー アクティビティなど、AWS ユーザー アクティビティに関する分析情報を得ます。 \n- AWSネットワークアクティビティ ... SG、ネットワークACL、IGW、ELB、VPC、サブネット、NIの作成・更新・削除など、AWS ネットワーク関連のリソースアクティビティに関する分析情報を得ます。\n- AWSユーザーアクティビティ ... 失敗したサインイン試行、IP アドレス、リージョン、ユーザー エージェント、ID の種類、また想定されたロールを持つ悪意のある可能性があるユーザー アクティビティなど、AWS ユーザー アクティビティに関する分析情報を得ます。\n- ハンティング ... 脅威判定となるログクエリを提供 Changes made to AWS IAM policy Tracking Privileged Account Rare Activity Exploit and Pentest Framework User Agent IAM Privilege Escalation by Instance Profile attachment Privileged role attached to Instance Suspicious credential token access of valid IAM Roles Unused or Unsupported Cloud Regions \n- Changes made to AWS IAM policy\n- Tracking Privileged Account Rare Activity\n- Exploit and Pentest Framework User Agent\n- IAM Privilege Escalation by Instance Profile attachment\n- Privileged role attached to Instance\n- Suspicious credential token access of valid IAM Roles\n- Unused or Unsupported Cloud Regions\n- ノートブック ... Jupyter Notebookによる分析を提供\n- ソリューション ... 外部のエンドポイントセキュリティツールと連携することが可能 Trend Micro Apex One McAfee Network Security Platform \n- Trend Micro Apex One\n- McAfee Network Security Platform  > Sumo LogicSumo Logic  > 料金料金 \n\n- Sumo Logic 料金表  > SIEMからCloudTrailへの接続方法SIEMからCloudTrailへの接続方法 \n\n1. [AWSアカウントSecurity - S3] にてバケット cloudtrail-accumulativelogs-{account-id} を下記設定にて作成 パブリックアクセスをすべてブロック オフ バケットポリシー json{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"AWSCloudTrailAclCheck20150319\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"s3:GetBucketAcl\", \"Resource\": \"arn:aws:s3:::cloudtrail-accumulativelogs-{account-id}\" }, { \"Sid\": \"AWSCloudTrailWrite20150319\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"s3:PutObject\", \"Resource\": \"arn:aws:s3:::cloudtrail-accumulativelogs-{account-id}/AWSLogs/{organization-id}/*\", \"Condition\": { \"StringEquals\": { \"s3:x-amz-acl\": \"bucket-owner-full-control\" } } } ] } \n2. パブリックアクセスをすべてブロック オフ\n3. バケットポリシー json{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"AWSCloudTrailAclCheck20150319\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"s3:GetBucketAcl\", \"Resource\": \"arn:aws:s3:::cloudtrail-accumulativelogs-{account-id}\" }, { \"Sid\": \"AWSCloudTrailWrite20150319\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"s3:PutObject\", \"Resource\": \"arn:aws:s3:::cloudtrail-accumulativelogs-{account-id}/AWSLogs/{organization-id}/*\", \"Condition\": { \"StringEquals\": { \"s3:x-amz-acl\": \"bucket-owner-full-control\" } } } ] } \n4. [親AWSアカウント - KMS] にて下記設定でKSMを作成 キーのタイプ 対称 キーマテリアルオリジン KMS リージョンごと 単一リージョン エイリアス名 cloudtrail-kms キーポリシー json{ \"Version\": \"2012-10-17\", \"Id\": \"Key policy created by CloudTrail\", \"Statement\": [ { \"Sid\": \"Enable IAM User Permissions\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": \"kms:*\", \"Resource\": \"*\" }, { \"Sid\": \"Allow CloudTrail to encrypt logs\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"kms:GenerateDataKey*\", \"Resource\": \"*\", \"Condition\": { \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } }, { \"Sid\": \"Allow CloudTrail to describe key\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"kms:DescribeKey\", \"Resource\": \"*\" }, { \"Sid\": \"Allow principals in the account to decrypt log files\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": [ \"kms:Decrypt\", \"kms:ReEncryptFrom\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\" }, \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } }, { \"Sid\": \"Allow alias creation during setup\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": \"kms:CreateAlias\", \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\", \"kms:ViaService\": \"ec2.ap-northeast-1.amazonaws.com\" } } }, { \"Sid\": \"Enable cross account log decryption\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": [ \"kms:Decrypt\", \"kms:ReEncryptFrom\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\" }, \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } } ] } \n5. キーのタイプ 対称\n6. キーマテリアルオリジン KMS\n7. リージョンごと 単一リージョン\n8. エイリアス名 cloudtrail-kms\n9. キーポリシー json{ \"Version\": \"2012-10-17\", \"Id\": \"Key policy created by CloudTrail\", \"Statement\": [ { \"Sid\": \"Enable IAM User Permissions\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": \"kms:*\", \"Resource\": \"*\" }, { \"Sid\": \"Allow CloudTrail to encrypt logs\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"kms:GenerateDataKey*\", \"Resource\": \"*\", \"Condition\": { \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } }, { \"Sid\": \"Allow CloudTrail to describe key\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"cloudtrail.amazonaws.com\" }, \"Action\": \"kms:DescribeKey\", \"Resource\": \"*\" }, { \"Sid\": \"Allow principals in the account to decrypt log files\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": [ \"kms:Decrypt\", \"kms:ReEncryptFrom\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\" }, \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } }, { \"Sid\": \"Allow alias creation during setup\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": \"kms:CreateAlias\", \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\", \"kms:ViaService\": \"ec2.ap-northeast-1.amazonaws.com\" } } }, { \"Sid\": \"Enable cross account log decryption\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"*\" }, \"Action\": [ \"kms:Decrypt\", \"kms:ReEncryptFrom\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"kms:CallerAccount\": \"{account-id}\" }, \"StringLike\": { \"kms:EncryptionContext:aws:cloudtrail:arn\": \"arn:aws:cloudtrail:*:{account-id}:trail/*\" } } } ] } \n10. [親AWSアカウント - CloudTrail] にて下記設定で証跡を作成 全般的な詳細 証跡名 cloudtrail-logs 組織に証跡を適用 はい ストレージの場所 既存のS3バケットを使用する 証跡ログバケット名 cloudtrail-accumulativelogs-{account-id} ログファイルのSSE-KMS暗号化 有効 カスタマー管理のAWS KMSキー 新規 AWS KMSエイリアス arn:aws:kms:{region}:{account-id}:key/{kms-id} ログファイルの検証 有効 管理イベント APIアクティビティ すべて \n11. 全般的な詳細 証跡名 cloudtrail-logs 組織に証跡を適用 はい ストレージの場所 既存のS3バケットを使用する 証跡ログバケット名 cloudtrail-accumulativelogs-{account-id} ログファイルのSSE-KMS暗号化 有効 カスタマー管理のAWS KMSキー 新規 AWS KMSエイリアス arn:aws:kms:{region}:{account-id}:key/{kms-id} ログファイルの検証 有効 \n12. 証跡名 cloudtrail-logs\n13. 組織に証跡を適用 はい\n14. ストレージの場所 既存のS3バケットを使用する\n15. 証跡ログバケット名 cloudtrail-accumulativelogs-{account-id}\n16. ログファイルのSSE-KMS暗号化 有効\n17. カスタマー管理のAWS KMSキー 新規\n18. AWS KMSエイリアス arn:aws:kms:{region}:{account-id}:key/{kms-id}\n19. ログファイルの検証 有効\n20. 管理イベント APIアクティビティ すべて \n21. APIアクティビティ すべて\n22. [Sumo Logic - Setup Wizard - Start streaming data to Sumo Logic - CloudTrail] にて下記設定でCloudTrailデータタイプを作成 Source Category aws/cloudtrail S3 Bucket S3 Bucket Name cloudtrail-accumulativelogs-{account-id} Path Expression AWSLogs/{organization-id}/* S3 Region Asia Pacific (Tokyo) How do you want the user to access the S3 Bucket? Role-based access 指定されたCFnテンプレートでIAMロールを作成 \n23. Source Category aws/cloudtrail\n24. S3 Bucket S3 Bucket Name cloudtrail-accumulativelogs-{account-id} Path Expression AWSLogs/{organization-id}/* S3 Region Asia Pacific (Tokyo) How do you want the user to access the S3 Bucket? Role-based access 指定されたCFnテンプレートでIAMロールを作成 \n25. S3 Bucket Name cloudtrail-accumulativelogs-{account-id}\n26. Path Expression AWSLogs/{organization-id}/*\n27. S3 Region Asia Pacific (Tokyo)\n28. How do you want the user to access the S3 Bucket? Role-based access 指定されたCFnテンプレートでIAMロールを作成 \n29. 指定されたCFnテンプレートでIAMロールを作成  > SIEM機能 (AWS CloudTrail)SIEM機能 (AWS CloudTrail) \n\nデフォルト監視対象 \n\n- Console Logins Geo Location of All Users Login Events By User Logins Over Time Logins from Multiple IP Logins from Outside the USA Outlier - Success Login Outlier - Failed Login Login Results - One Day Time Comparison Logins without MFA \n- Geo Location of All Users\n- Login Events By User\n- Logins Over Time\n- Logins from Multiple IP\n- Logins from Outside the USA\n- Outlier - Success Login\n- Outlier - Failed Login\n- Login Results - One Day Time Comparison\n- Logins without MFA\n- Network and Security Authorization Failures from All Countries Network and Security Events Over Time Authorization Failures Over Time Network ACL with All Allowed Ingress/Egress Recent Authorization Failures Recent Security Group and Network ACL Changes Created and Deleted Network and Security Events Short Lived Critical Operations \n- Authorization Failures from All Countries\n- Network and Security Events Over Time\n- Authorization Failures Over Time\n- Network ACL with All Allowed Ingress/Egress\n- Recent Authorization Failures\n- Recent Security Group and Network ACL Changes\n- Created and Deleted Network and Security Events\n- Short Lived Critical Operations\n- Operations Action Events Requested AWS Services Over Time Events by AWS Region Recent Elastic IP Address Operations Created Resources Over Time Deleted Resources Over Time \n- Action Events\n- Requested AWS Services Over Time\n- Events by AWS Region\n- Recent Elastic IP Address Operations\n- Created Resources Over Time\n- Deleted Resources Over Time\n- Overview Geo Location of All Users Created Resources Deleted Resources Over Time Top 10 Users Failed Logins Created and Deleted Network and Security Events \n- Geo Location of All Users\n- Created Resources\n- Deleted Resources Over Time\n- Top 10 Users\n- Failed Logins\n- Created and Deleted Network and Security Events\n- S3 Public Objects and Buckets New Public Objects New Public Object by Object-Bucket New Public Objects Table Public Buckets Public Buckets Table Modified Public Objects Modified Public Objects by Object-Buket Modified Public Objects Table \n- New Public Objects\n- New Public Object by Object-Bucket\n- New Public Objects Table\n- Public Buckets\n- Public Buckets Table\n- Modified Public Objects\n- Modified Public Objects by Object-Buket\n- Modified Public Objects Table\n- User Monitoring Geo Location of All Users Top 10 Users Launched and Terminated Instances by User Administrative Activities Over Time Top 10 Activities by Administrative User Recent Activity by Administrative Users \n- Geo Location of All Users\n- Top 10 Users\n- Launched and Terminated Instances by User\n- Administrative Activities Over Time\n- Top 10 Activities by Administrative User\n- Recent Activity by Administrative Users  > 総評総評  > 使用コスト使用コスト \n\n初期導入の段階ではSumo LogicよりAzure Sentinelの方が倍のコストがかかります。    ログ取込量/日 Azure Sentinel月額 Sumo Logic月額     100MB 2,396 JPY 0 USD   500MB 11,978 JPY 0 USD   3GB 71,870 JPY 332 USD    \n\n※ Azure Sentinelの内訳は「 ((GB当たりのAzure Sentinel取込量347.20円) + (GB当たりのLog Analytics取込量451.36円) * 取込量GB 」  > 導入コスト導入コスト \n\n一度の設定で完了するSumo Logicの方が導入コストが低いです。Azure SentinelはIAMロールのみで済むという点で導入は楽ですがAWSアカウントごとに設定する必要があるので手離れが悪いです。  > SIEM機能SIEM機能 \n\nAzure Sentinelの方が分析機能が充実しています。Sumo Logicが大まかな脅威をログクエリからしか拾えないのに対し、Azure Sentinelは細かな脅威判定をログクエリで提供しているのに加え、Jupyter Notebookや外部のエンドポイントセキュリティツールを提供しています。また、デフォルトの監視対象も時間経過に伴うイベントアラート、悪意ある可能性があるイベント、最近のインシデント等必要十分な情報を提供しています。 \n\nまた、対象のデータソースはAzure SentinelがAWS CloudTrail、Google Workspace、Office 365、Azure AD等と幅広く用意しているのに対し、Sumo LogicはSIEMという観点では実質AWS CloudTrail専用のツールに落ち着いています。  > WRAPUPWRAPUP \n\nメインプロダクトがまだ2-3しかない状況でSIEMをAWSだけに限定する場合はSumo Logicで十分でしょう。使用コスト、導入コストともに低く抑えることができるので、しばらくはSumo Logicで運用し、プロダクトがスケールする段階でAzure Sentinelを移行するのが現実的だと思いました。"},"name":"[2021-08-15]AWS CloudTrail用のコスパの良いSIEMを探す","tags":["siem","aws-cloudtrail","azure-sentinel","sumo-logic"],"childPublishedDate":{"published_on":"2021-08-15T00:00:00.000Z","published_on_unix":1628985600}}},{"node":{"number":89,"relative_category":"blog/backend","fields":{"title":"imi-enrichment-addressは住所のバリデーションチェックでどの程度使えるか","excerpt":"コロナ禍であらゆる流通がオンラインに移行する中、正しい住所を使うことはいっそう求められています。ユーザーが配送用に住所を入力する時そのデータが正しいとどうやって判定するのでしょうか。今回はOSSライブラリimi-enrichment-addressが住所のバリデーションチェックでどの程度使えるか検証してみました。   > PROBLEMPROBLEM \n\n- 住所の不備が至るところで起きている 特に町名番地の抜けもれや不備が多くこの点をどうにか拾いたい 可能ならユーザーの入力時点でFEあるいはBE側でバリデーションチェックしたい まずはOSSのライブラリで検証したい \n- 特に町名番地の抜けもれや不備が多くこの点をどうにか拾いたい\n- 可能ならユーザーの入力時点でFEあるいはBE側でバリデーションチェックしたい まずはOSSのライブラリで検証したい \n- まずはOSSのライブラリで検証したい  > SOLUTIONSOLUTION \n\nというわけで、昨年（2020年）経産省IMI（情報共有基盤）から公開された住所変換コンポーネント「IMI-Tool-Project/imi-enrichment-address」がバリデーションチェックでどの程度使えるか検証します。  > imi-enrichment-addressとはimi-enrichment-addressとは \n\n経産省IMIツールプロジェクトで公開された住所変換コンポーネントです。CLIとサーバーが用意されていますが、今回はCLIを見ていきます。 \n\nヘルプを見ると住所を引数として渡すことで処理されることが分かります。 sh\n\n$ npm install -g https://info.gbiz.go.jp/tools/imi_tools/resource/imi-enrichment-address/imi-enrichment-address-2.0.0.tgz $ imi-enrichment-address --help imi-enrichment-address 住所文字列をもとに住所型・場所型の情報を補完します オプション -h, --help このヘルプを表示します -f, --file file 変換対象とする JSON ファイル -s, --string string 変換対象とする住所文字列 -i, --indent number 出力する JSON のインデント (default 2) 実行例 ヘルプの表示 $ imi-enrichment-address -h 文字列の処理 $ imi-enrichment-address -s 霞が関2 ファイルの処理 $ imi-enrichment-address input.json 標準入力の処理 $ cat input.json | imi-enrichment-address  \n\n実行すると正確な住所を渡したときと不正確な住所を渡したときで異なった結果を返すことが分かります。今回はこの正確・不正確の異なった結果を利用して検証していこうと思います。 sh\n\n$ imi-enrichment-address -s 長野県長野市大字長野旭町1108 { \"@context\": \"https://imi.go.jp/ns/core/context.jsonld\", \"@type\": \"場所型\", \"住所\": { \"@type\": \"住所型\", \"表記\": \"長野県長野市大字長野旭町1108\", \"都道府県\": \"長野県\", \"都道府県コード\": \"http://data.e-stat.go.jp/lod/sac/C20000\", \"市区町村\": \"長野市\", \"市区町村コード\": \"http://data.e-stat.go.jp/lod/sac/C20201\", \"町名\": \"大字長野\" }, \"地理座標\": { \"@type\": \"座標型\", \"緯度\": \"36.674892\", \"経度\": \"138.178449\" } } $ imi-enrichment-address -s 長野県長野市旭町1108 { \"@context\": \"https://imi.go.jp/ns/core/context.jsonld\", \"@type\": \"場所型\", \"住所\": { \"@type\": \"住所型\", \"表記\": \"長野県長野市旭町1108\", \"都道府県\": \"長野県\", \"都道府県コード\": \"http://data.e-stat.go.jp/lod/sac/C20000\", \"市区町村\": \"長野市\", \"市区町村コード\": \"http://data.e-stat.go.jp/lod/sac/C20201\" }, \"メタデータ\": { \"@type\": \"文書型\", \"説明\": \"該当する町名が見つかりません\" } }  \n\nなお、GitHubコードを見るとimi-enrichment-addressは街区レベル位置参照情報を利用して実装しています。このことを考えるとバリデーションチェックで積極的につかうのは難しく、ユースケースとしては下記2点に落ち着くと考えます。 \n\n- ユーザーに住所の再確認を促す\n- 入力後の住所不備について人が目検で確認する前段階で利用  > 検証用データ検証用データ \n\nさて、検証に進みましょう。imi-enrichment-addressで検証するデータは簡易に使える住所.jp、その中の事業所住所22402件を使います。他にも検証データはありますが、コストもそれほどかけられないのでコマンドだけで完結するものを選んでいます。 sh\n\n$ curl -sSL http://jusyo.jp/downloads/new/csv/csv_zenkoku.zip -o csv_zenkoku.zip $ unzip csv_zenkoku.zip $ go get github.com/mithrandie/csvq $ csvq -f CSV \"SELECT COUNT(*) FROM zenkoku WHERE 事業所住所 IS NOT NULL\" COUNT(*) 22402   > imi-enrichment-addressで検証用データを確認するimi-enrichment-addressで検証用データを確認する \n\n今回実行したCLIはNodeJSであることと数時間で処理できるという点で逐次で済ませました。 sh\n\n$ for i in $( csvq -f CSV \"SELECT 都道府県,市区町村,事業所住所 FROM zenkoku WHERE 事業所住所 IS NOT NULL\" \\ | sed 's/,//g' \\ | tail +2 \\ ); do imi-enrichment-address -s $i \\ | jq -r ' [ .[\"住所\"][\"表記\"], ( if .[\"地理座標\"] != null then true else false end ), .[\"メタデータ\"][\"説明\"] ] | @csv ' >>output.csv; done &   > バリデーションチェックの結果を確認するバリデーションチェックの結果を確認する \n\nimi-enrichment-addressの出力結果を確認したところ全国で9.25%が無効、下記の通り町名番地の表記揺れに弱いことが分かりました。特に町字（まちあざ）省略によるバリデーションエラーの比率が高く、青森、長野、沖縄等複数の県の住所が実用に耐えない結果となりました。 \n\nバリデーションエラーになった原因 \n\n- 各地方の字・大字の省略\n- 京都の通り上る・下るの表記\n- 北海道の条、線の表記揺れ\n- 茨城、岐阜等の町名省略\n- 茨城、神奈川、岐阜、石川等の区画整理地    都道府県 無効割合（%） 備考     青森県 54.42 字省略により無効   長野県 44.28 字省略により無効   沖縄県 43.55 字省略により無効   大分県 38.96 字省略により無効   京都府 36.86 字省略、通りにより無効   佐賀県 33.33 字省略により無効   奈良県 29.94 字省略により無効   福島県 29.18 字省略により無効   宮崎県 27.71 字省略により無効   埼玉県 23.08 字省略により無効   山口県 22.65 字省略により無効   和歌山県 17.78 字省略により無効   群馬県 17.08 字省略、ノ町により無効   茨城県 15.51 字省略、町名省略、区画整理により無効   熊本県 14.89 字省略により無効   山形県 14.38 字省略により無効   北海道 13.76 字省略、条、線により無効   栃木県 13.6 字省略により無効   新潟県 13.19 字省略により無効   鳥取県 9.57 字省略により無効   全国 9.25    福岡県 9 字省略により無効   三重県 7.74 字省略により無効   愛知県 7.4 字省略により無効   鹿児島県 7.09 字省略により無効   山梨県 6.8 字省略により無効   宮城県 6.37 字省略により無効   岩手県 6.28 字省略により無効   岐阜県 5.67 字省略、町名省略、区画整理により無効   香川県 4.71 字省略により無効   石川県 4.7 字省略、区画整理により無効   愛媛県 4.39 字省略により無効   秋田県 4.17 字省略により無効   滋賀県 3.76 字省略により無効   広島県 3.74 字省略により無効   高知県 3.38 字省略により無効   大阪府 3.28 字省略により無効   兵庫県 2.71 字省略により無効   島根県 2.04 字省略により無効   岡山県 1.81 字省略により無効   神奈川県 1.72 字省略、区画整理により無効   徳島県 1.64 字省略により無効   富山県 1.14 字省略により無効   静岡県 1.06 字省略、町名省略、区画整理により無効   東京都 0.89 字省略により無効   福井県 0.71 字省略により無効   千葉県 0.64 字省略により無効   長崎県 0      > WRAPUPWRAPUP \n\nimi-enrichment-addressは町名番地の判定に素の街区レベル位置参照情報を使用しているため、町字（まちあざ）の省略に弱いことが分かりました。 \n\n- ユーザーに住所の再確認を促す\n- 入力後の住所不備について人が目検で確認する前段階で利用 \n\nまず、想定したユースケースの内1つ「ユーザーに住所の再確認を促す」については、配送で使う住所の場合「町字の省略は影響ない」ので機能として適切ではありません。ユーザーが東京に集中している場合は関係ないですが、「町字が存在するさいたま市、川崎市、名古屋市、広島市、北九州市、福岡市、熊本市等の政令指定都市」や長野市のように住所が町字の組み合わせで2つ以上存在する都市の場合、使い勝手の悪い機能となります。 \n\n次に「入力後の住所不備について人が目検で確認する前段階で利用」については多少は有効に機能するでしょう。ただし、町字が多い地域では上記同様に使い勝手が悪くなります。 \n\n今回の検証の結果、現状の仕様ではimi-enrichment-addressを使うケースは限定せざるを得ず、一旦使用を見送りとします。とは言え、街区レベル位置参照情報にある町名番地から町字を除けば活用範囲が広がる可能性も確認できました。幸いなことにライブラリはMITライセンスで公開されています。"},"name":"[2021-07-24]imi-enrichment-addressは住所のバリデーションチェックでどの程度使えるか","tags":["imi-enrichment-address","mlit-isj"],"childPublishedDate":{"published_on":"2021-07-24T00:00:00.000Z","published_on_unix":1627084800}}}]}},"pageContext":{"number":54}},"staticQueryHashes":[]}