{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/60","result":{"data":{"esaPost":{"number":60,"relative_category":"blog/backend","fields":{"title":"連載 Rails2Phoenix 2 認証機能を実装する","excerpt":"連載「Rails2Phoenix」になります、前回は「UmbrellaプロジェクトをHerokuにデプロイする 」でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。   > PROBLEMPROBLEM \n\n- サービスについて 拡張にともない技術スタックがふえるのを抑えたい スケーラビリティのためのコストを抑えたい パフォーマンスをあげたい \n- 拡張にともない技術スタックがふえるのを抑えたい\n- スケーラビリティのためのコストを抑えたい\n- パフォーマンスをあげたい   > SOLUTIONSOLUTION \n\nというわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。 \n\n方針 \n\n- Railsから徐々にPhoenixに移行できるように いままでとおなじPaaS（Heroku） いままでとおなじレポジトリ ブランチ戦略は phoenix/base をベースに 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく いままでとおなじDB 移行完了までDBマイグレーションをしない \n- いままでとおなじPaaS（Heroku）\n- いままでとおなじレポジトリ ブランチ戦略は phoenix/base をベースに 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく \n- ブランチ戦略は phoenix/base をベースに\n- 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく\n- いままでとおなじDB 移行完了までDBマイグレーションをしない \n- 移行完了までDBマイグレーションをしない\n- Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで   > Guardianを実装するGuardianを実装する \n\nまず、参考にしたのはBlackodeのguardian_authです。ただ、Guardianのバージョンがふるいので1.0へのマイグレーション記事をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。 \n\nロジック \n\n- MyApp.Account\n- MyApp.Account.Registration\n- MyApp.Account.User\n- MyApp.Auth.Guardian\n- MyApp.Auth.ErrorHandler\n- MyApp.Auth.Pipeline\n- MyApp.Auth.AfterPipeline\n- MyApp.Auth.Session \n\nコントローラ \n\n- MyAppWeb.RegistrationController\n- MyAppWeb.SessionController   > シリアライザとエラーハンドラの設定シリアライザとエラーハンドラの設定 \n\nGuardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。   elixir \n\n# apps/my_app/lib/my_app/auth/guardian.ex defmodule MyApp.Auth.Guardian do use Guardian, otp_app: :my_app alias MyApp.Account def subject_for_token(resource, _claims), do: {:ok, to_string(resource.id)} def subject_for_token(_, _), do: {:error, :reason_for_error} def resource_from_claims(claims), do: {:ok, Account.get_user!(claims[\"sub\"])} def resource_from_claims(_claims), do: {:error, :reason_for_error} end     elixir \n\n# apps/my_app/lib/my_app/auth/error_handler.ex defmodule MyApp.Auth.ErrorHandler do import Plug.Conn def auth_error(conn, {type, _reason}, _opts) do body = Poison.encode!(%{message: to_string(type)}) send_resp(conn, 401, body) end end     elixir \n\n# apps/my_app/config/config.exs config :my_app, MyApp.Auth.Guardian, issuer: \"MyApp\", ttl: {30, :days}, allowed_drift: 2000, # optionals allowed_algos: [\"HS512\"], verify_module: MyApp.Auth.Guardian.JWT, verify_issuer: true, secret_key: System.get_env(\"GUARDIAN_SECRET\") || \"secret_key\"     > ルーターの設定ルーターの設定 \n\n認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。 \n\nルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート / などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。   elixir \n\n# apps/my_app/lib/my_app/auth/pipeline.ex defmodule MyApp.Auth.Pipeline do use Guardian.Plug.Pipeline, otp_app: :my_app plug(Guardian.Plug.VerifySession, claims: %{\"typ\" => \"access\"}) plug(Guardian.Plug.VerifyHeader, claims: %{\"typ\" => \"access\"}) plug(Guardian.Plug.LoadResource, allow_blank: true) end     elixir \n\n# apps/my_app/lib/my_app/auth/after_pipeline.ex defmodule MyApp.Auth.AfterPipeline do use Guardian.Plug.Pipeline, otp_app: :my_app plug(Guardian.Plug.EnsureAuthenticated) end     elixir \n\n# apps/my_app/lib/my_app_web/router.ex defmodule MyAppWeb.Router do use MyAppWeb, :router pipeline :browser do plug(:accepts, [\"html\"]) plug(:fetch_session) plug(:fetch_flash) plug(:protect_from_forgery) plug(:put_secure_browser_headers) end pipeline :browser_auth do plug(MyApp.Auth.Pipeline) end pipeline :browser_auth_after do plug(MyApp.Auth.AfterPipeline) end scope \"/\", MyAppWeb do pipe_through([:browser, :browser_auth]) post(\"/registration\", RegistrationController, :create) get(\"/login\", SessionController, :new) post(\"/login\", SessionController, :create) get(\"/logout\", SessionController, :delete) end scope \"/\", MyAppWeb do pipe_through([:browser, :browser_auth, :browser_auth_after]) get(\"/edit\", RegistrationController, :edit) put(\"/edit\", RegistrationController, :update) get(\"/users\", UserController, :index) resources \"/\", UserController, only: [:show, :delete], param: \"username\" end end     elixir \n\n# apps/my_app/config/config.exs config :MyApp, MyApp.Auth.Pipeline, module: MyApp.Auth.Guardian, error_handler: MyApp.Auth.ErrorHandler config :MyApp, MyApp.Auth.AferPipeline, module: MyApp.Auth.Guardian, error_handler: MyApp.Auth.ErrorHandler     > 登録登録 \n\n登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。 \n\nこのあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。   elixir \n\n# apps/my_app/lib/my_app_web/controller/registration_controller.ex def create(conn, user_params) do changeset = User.registration_changeset(%User{}, user_params) case Registration.create(changeset, Repo) do {:ok, user} -> conn |> MyApp.Auth.login(user) |> put_flash(:info, \"Your account was created successfully\") |> redirect(to: page_path(conn, :home)) {:error, changeset} -> conn |> put_flash(:error, \"Unable to create account: Try again\") |> render(MyAppWeb.PageView, \"home.html\", changeset: changeset) end end     elixir \n\n# apps/my_app/lib/my_app/auth/auth.ex def login(conn, %User{} = user) do conn |> Guardian.Plug.sign_in(user) |> assign(:current_user, user) end     elixir \n\n# apps/my_app/lib/my_app/account/registration.ex def create(changeset, repo) do changeset |> repo.insert() end     > ログイン・ログアウトログイン・ログアウト \n\nログイン・ログアウトはセッション用のサービスとコントローラで実装します。   elixir \n\n# apps/my_app/lib/my_app_web/controller/session_controller.ex @doc \"Logged in [POST /login]\" def create(conn, %{\"email\" => email, \"password\" => password}) do case Session.authenticate_user(email, password) do {:ok, user} -> conn |> Session.login(user) |> put_flash(:info, \"Logged in successfully\") |> redirect(to: page_path(conn, :home)) {:error, _reason} -> conn |> put_flash(:error, \"Wrong username/password\") |> render(\"new.html\") end end @doc \"Logged out [DELETE /logout]\" def delete(conn, _params) do conn |> Session.logout() |> put_flash(:info, \"Logged out successfully.\") |> redirect(to: \"/\") end     elixir \n\n# apps/my_app/lib/my_app/auth/session.ex defmodule MyApp.Auth.Session do import Ecto.Query import Plug.Conn import Comeonin.Bcrypt, only: [checkpw: 2, dummy_checkpw: 0] alias MyApp.Repo alias MyApp.Auth.Guardian alias MyApp.Account.User def login(conn, %User{} = user) do conn |> Guardian.Plug.sign_in(user) |> assign(:current_user, user) end def logout(conn), do: Guardian.Plug.sign_out(conn) def authenticate_user(email, given_password) do query = Ecto.Query.from(u in User, where: u.email == ^email) Repo.one(query) |> check_password(given_password) end def current_user(conn), do: Guardian.Plug.current_resource(conn, []) def logged_in?(conn), do: Guardian.Plug.authenticated?(conn, []) defp check_password(nil, _), do: {:error, \"Incorrect username or password\"} defp check_password(user, given_password) do case Comeonin.Bcrypt.checkpw(given_password, user.encrypted_password) do true -> {:ok, user} false -> {:error, \"Incorrect email or password\"} end end end   \n\nDevise/Railsのビューヘルパーはビューマクロで適用します。   elixir \n\n# apps/my_app/lib/my_app_web.ex def view do quote do # .. import Okuribi.Auth.Session, only: [current_user: 1, logged_in?: 1] end end   \n\nあるいは、put_assigns関数をはやしてコントローラマクロに適用します。   elixir \n\n# apps/my_app/lib/my_app/auth/session.ex def put_assigns(%{private: %{phoenix_action: action}} = conn, settings) do current_resource = Guardian.Plug.current_resource(conn) settings = if current_resource, do: settings[:sign_in][action] || [], else: settings[:sign_out][action] || [] conn |> assign(:current_user, current_resource) |> assign(:page_title, settings[:page_title]) |> assign(:page_description, settings[:page_description]) end     elixir \n\n# apps/my_app/lib/my_app_web.ex def controller do quote do # .. import Okuribi.Auth, only: [put_assigns: 2] end end   \n\nassignsひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsのActionView::Helpers::CaptureHelper#provideの代わりに使えます。   elixir \n\n# apps/my_app/lib/my_app_web/controller/*_controller.ex @page %{ sign_in: %{ new: %{ page_title: dgettext(\"views\", \"pages.home.signed_in.page_title\"), page_description: \"\" } }, sign_out: %{ new: %{ page_title: dgettext(\"views\", \"pages.home.signed_out.page_title\"), page_description: \"\" } } } plug(:put_assigns, @page when action in [:home])     > その他その他 \n\nRailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。 \n\n- Rails ActionView::Helpers::FormHelper#form_for(record, options={}, &block) ActionView::Helpers::FormHelper#text_field(object_name, method, options={}) ActionView::Helpers::FormHelper#file_field(object_name, method, options={}) ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={}) ActionView::Helpers::FormHelper#password_field(object_name, method, options={}) ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={}) ActionView::Helpers::FormBuilder#submit(value=nil, options={}) ActionView::Helpers::TranslationHelper#t \n- ActionView::Helpers::FormHelper#form_for(record, options={}, &block)\n- ActionView::Helpers::FormHelper#text_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#file_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#password_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})\n- ActionView::Helpers::FormBuilder#submit(value=nil, options={})\n- ActionView::Helpers::TranslationHelper#t\n- Phoenix Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun) Phoenix.HTML.Form.text_input(form, field, opts \\\\ []) Phoenix.HTML.Form.file_input(form, field, opts \\\\ []) Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ []) Phoenix.HTML.Form.password_input(form, field, opts \\\\ []) Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ []) Phoenix.HTML.Form.submit(opts, opts \\\\ []) Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{}) \n- Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)\n- Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])\n- Phoenix.HTML.Form.submit(opts, opts \\\\ [])\n- Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})   > WRAPUPWRAPUP \n\n前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png"},"wip":false,"body_md":"<img width=\"728\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\">\r\n\r\n連載「Rails2Phoenix」になります、前回は[「UmbrellaプロジェクトをHerokuにデプロイする 」](https://blahfe.esa.io/posts/59)でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。\r\n\r\n\r\n# PROBLEM\r\n- サービスについて\r\n    - 拡張にともない技術スタックがふえるのを抑えたい\r\n    - スケーラビリティのためのコストを抑えたい\r\n    - パフォーマンスをあげたい\r\n\r\n# SOLUTION\r\nというわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。\r\n\r\n**方針**\r\n- Railsから徐々にPhoenixに移行できるように\r\n  - いままでとおなじPaaS（Heroku）\r\n  - いままでとおなじレポジトリ\r\n      - ブランチ戦略は `phoenix/base` をベースに\r\n      - 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく\r\n  - いままでとおなじDB\r\n      - 移行完了までDBマイグレーションをしない\r\n- Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで\r\n\r\n## Guardianを実装する\r\nまず、参考にしたのはBlackodeの[guardian_auth](https://github.com/blackode/guardian_auth)です。ただ、Guardianのバージョンがふるいので[1.0へのマイグレーション記事](https://github.com/ueberauth/guardian/blob/master/upgrade_guides/0.14.to.1.0.md)をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。\r\n\r\nロジック\r\n- MyApp.Account\r\n- MyApp.Account.Registration\r\n- MyApp.Account.User\r\n- MyApp.Auth.Guardian\r\n- MyApp.Auth.ErrorHandler\r\n- MyApp.Auth.Pipeline\r\n- MyApp.Auth.AfterPipeline\r\n- MyApp.Auth.Session\r\n\r\nコントローラ\r\n- MyAppWeb.RegistrationController\r\n- MyAppWeb.SessionController\r\n\r\n### シリアライザとエラーハンドラの設定\r\nGuardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/guardian.ex\r\n\r\ndefmodule MyApp.Auth.Guardian do\r\n  use Guardian, otp_app: :my_app\r\n  alias MyApp.Account\r\n\r\n  def subject_for_token(resource, _claims), do: {:ok, to_string(resource.id)}\r\n  def subject_for_token(_, _), do: {:error, :reason_for_error}\r\n\r\n  def resource_from_claims(claims), do: {:ok, Account.get_user!(claims[\"sub\"])}\r\n  def resource_from_claims(_claims), do: {:error, :reason_for_error}\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/error_handler.ex\r\n\r\ndefmodule MyApp.Auth.ErrorHandler do\r\n  import Plug.Conn\r\n\r\n  def auth_error(conn, {type, _reason}, _opts) do\r\n    body = Poison.encode!(%{message: to_string(type)})\r\n    send_resp(conn, 401, body)\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/config/config.exs\r\n\r\nconfig :my_app, MyApp.Auth.Guardian,\r\n  issuer: \"MyApp\",\r\n  ttl: {30, :days},\r\n  allowed_drift: 2000,\r\n  # optionals\r\n  allowed_algos: [\"HS512\"],\r\n  verify_module: MyApp.Auth.Guardian.JWT,\r\n  verify_issuer: true,\r\n  secret_key:\r\n    System.get_env(\"GUARDIAN_SECRET\") ||\r\n      \"secret_key\"\r\n```\r\n\r\n### ルーターの設定\r\n認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。\r\n\r\nルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート `/` などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/pipeline.ex\r\n\r\ndefmodule MyApp.Auth.Pipeline do\r\n  use Guardian.Plug.Pipeline, otp_app: :my_app\r\n\r\n  plug(Guardian.Plug.VerifySession, claims: %{\"typ\" => \"access\"})\r\n  plug(Guardian.Plug.VerifyHeader, claims: %{\"typ\" => \"access\"})\r\n  plug(Guardian.Plug.LoadResource, allow_blank: true)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/after_pipeline.ex\r\n\r\ndefmodule MyApp.Auth.AfterPipeline do\r\n  use Guardian.Plug.Pipeline, otp_app: :my_app\r\n\r\n  plug(Guardian.Plug.EnsureAuthenticated)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/router.ex\r\n\r\ndefmodule MyAppWeb.Router do\r\n  use MyAppWeb, :router\r\n\r\n  pipeline :browser do\r\n    plug(:accepts, [\"html\"])\r\n    plug(:fetch_session)\r\n    plug(:fetch_flash)\r\n    plug(:protect_from_forgery)\r\n    plug(:put_secure_browser_headers)\r\n  end\r\n\r\n  pipeline :browser_auth do\r\n    plug(MyApp.Auth.Pipeline)\r\n  end\r\n\r\n  pipeline :browser_auth_after do\r\n    plug(MyApp.Auth.AfterPipeline)\r\n  end\r\n\r\n  scope \"/\", MyAppWeb do\r\n    pipe_through([:browser, :browser_auth])\r\n\r\n    post(\"/registration\", RegistrationController, :create)\r\n    get(\"/login\", SessionController, :new)\r\n    post(\"/login\", SessionController, :create)\r\n    get(\"/logout\", SessionController, :delete)\r\n  end\r\n\r\n  scope \"/\", MyAppWeb do\r\n    pipe_through([:browser, :browser_auth, :browser_auth_after])\r\n\r\n    get(\"/edit\", RegistrationController, :edit)\r\n    put(\"/edit\", RegistrationController, :update)\r\n    get(\"/users\", UserController, :index)\r\n    resources \"/\", UserController, only: [:show, :delete], param: \"username\"\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/config/config.exs\r\n\r\nconfig :MyApp, MyApp.Auth.Pipeline,\r\n  module: MyApp.Auth.Guardian,\r\n  error_handler: MyApp.Auth.ErrorHandler\r\n\r\nconfig :MyApp, MyApp.Auth.AferPipeline,\r\n  module: MyApp.Auth.Guardian,\r\n  error_handler: MyApp.Auth.ErrorHandler\r\n```\r\n\r\n### 登録\r\n登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。\r\n\r\nこのあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/registration_controller.ex\r\n\r\ndef create(conn, user_params) do\r\n  changeset = User.registration_changeset(%User{}, user_params)\r\n\r\n  case Registration.create(changeset, Repo) do\r\n    {:ok, user} ->\r\n      conn\r\n      |> MyApp.Auth.login(user)\r\n      |> put_flash(:info, \"Your account was created successfully\")\r\n      |> redirect(to: page_path(conn, :home))\r\n\r\n   {:error, changeset} ->\r\n      conn\r\n      |> put_flash(:error, \"Unable to create account: Try again\")\r\n      |> render(MyAppWeb.PageView, \"home.html\", changeset: changeset)\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/auth.ex\r\n\r\ndef login(conn, %User{} = user) do\r\n  conn\r\n  |> Guardian.Plug.sign_in(user)\r\n  |> assign(:current_user, user)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/account/registration.ex\r\n\r\ndef create(changeset, repo) do\r\n  changeset\r\n  |> repo.insert()\r\nend\r\n```\r\n\r\n### ログイン・ログアウト\r\nログイン・ログアウトはセッション用のサービスとコントローラで実装します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/session_controller.ex\r\n\r\n@doc \"Logged in [POST /login]\"\r\ndef create(conn, %{\"email\" => email, \"password\" => password}) do\r\n  case Session.authenticate_user(email, password) do\r\n    {:ok, user} ->\r\n      conn\r\n      |> Session.login(user)\r\n      |> put_flash(:info, \"Logged in successfully\")\r\n      |> redirect(to: page_path(conn, :home))\r\n\r\n    {:error, _reason} ->\r\n      conn\r\n      |> put_flash(:error, \"Wrong username/password\")\r\n      |> render(\"new.html\")\r\n  end\r\nend\r\n\r\n@doc \"Logged out [DELETE /logout]\"\r\ndef delete(conn, _params) do\r\n  conn\r\n  |> Session.logout()\r\n  |> put_flash(:info, \"Logged out successfully.\")\r\n  |> redirect(to: \"/\")\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/session.ex\r\n\r\ndefmodule MyApp.Auth.Session do\r\n  import Ecto.Query\r\n  import Plug.Conn\r\n  import Comeonin.Bcrypt, only: [checkpw: 2, dummy_checkpw: 0]\r\n  alias MyApp.Repo\r\n  alias MyApp.Auth.Guardian\r\n  alias MyApp.Account.User\r\n\r\n  def login(conn, %User{} = user) do\r\n    conn\r\n    |> Guardian.Plug.sign_in(user)\r\n    |> assign(:current_user, user)\r\n  end\r\n\r\n  def logout(conn), do: Guardian.Plug.sign_out(conn)\r\n\r\n  def authenticate_user(email, given_password) do\r\n    query = Ecto.Query.from(u in User, where: u.email == ^email)\r\n\r\n    Repo.one(query)\r\n    |> check_password(given_password)\r\n  end\r\n\r\n  def current_user(conn), do: Guardian.Plug.current_resource(conn, [])\r\n\r\n  def logged_in?(conn), do: Guardian.Plug.authenticated?(conn, [])\r\n\r\n  defp check_password(nil, _), do: {:error, \"Incorrect username or password\"}\r\n\r\n  defp check_password(user, given_password) do\r\n    case Comeonin.Bcrypt.checkpw(given_password, user.encrypted_password) do\r\n      true -> {:ok, user}\r\n      false -> {:error, \"Incorrect email or password\"}\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nDevise/Railsのビューヘルパーはビューマクロで適用します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web.ex\r\n\r\ndef view do\r\n  quote do\r\n    # ..\r\n    import Okuribi.Auth.Session, only: [current_user: 1, logged_in?: 1]\r\n  end\r\nend\r\n```\r\n\r\nあるいは、`put_assigns`関数をはやしてコントローラマクロに適用します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/session.ex\r\n\r\ndef put_assigns(%{private: %{phoenix_action: action}} = conn, settings) do\r\n  current_resource = Guardian.Plug.current_resource(conn)\r\n\r\n  settings =\r\n    if current_resource,\r\n      do: settings[:sign_in][action] || [],\r\n      else: settings[:sign_out][action] || []\r\n\r\n  conn\r\n  |> assign(:current_user, current_resource)\r\n  |> assign(:page_title, settings[:page_title])\r\n  |> assign(:page_description, settings[:page_description])\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web.ex\r\n\r\ndef controller do\r\n  quote do\r\n    # ..\r\n    import Okuribi.Auth, only: [put_assigns: 2]\r\n  end\r\nend\r\n```\r\n\r\n`assigns`ひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsの`ActionView::Helpers::CaptureHelper#provide`の代わりに使えます。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/*_controller.ex\r\n\r\n@page %{\r\n  sign_in: %{\r\n    new: %{\r\n      page_title: dgettext(\"views\", \"pages.home.signed_in.page_title\"),\r\n      page_description: \"\"\r\n    }\r\n  },\r\n  sign_out: %{\r\n    new: %{\r\n      page_title: dgettext(\"views\", \"pages.home.signed_out.page_title\"),\r\n      page_description: \"\"\r\n    }\r\n  }\r\n}\r\nplug(:put_assigns, @page when action in [:home])\r\n```\r\n\r\n## その他\r\nRailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。\r\n\r\n- Rails\r\n    - `ActionView::Helpers::FormHelper#form_for(record, options={}, &block)`\r\n    - `ActionView::Helpers::FormHelper#text_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#file_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#password_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})`\r\n    - `ActionView::Helpers::FormBuilder#submit(value=nil, options={})`\r\n    - `ActionView::Helpers::TranslationHelper#t`\r\n- Phoenix\r\n    - `Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)`\r\n    - `Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.submit(opts, opts \\\\ [])`\r\n    - `Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})`\r\n\r\n# WRAPUP\r\n前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。","body_html":"<a href=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"728\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\"></a>\n<p data-sourcepos=\"3:1-3:257\">連載「Rails2Phoenix」になります、前回は<a href=\"https://blahfe.esa.io/posts/59\">「UmbrellaプロジェクトをHerokuにデプロイする 」</a>でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。</p>\n<h1 data-sourcepos=\"6:1-6:9\" id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"7:1-11:0\">\n<li data-sourcepos=\"7:1-11:0\">サービスについて\n<ul data-sourcepos=\"8:5-11:0\">\n<li data-sourcepos=\"8:5-8:75\">拡張にともない技術スタックがふえるのを抑えたい</li>\n<li data-sourcepos=\"9:5-9:66\">スケーラビリティのためのコストを抑えたい</li>\n<li data-sourcepos=\"10:5-11:0\">パフォーマンスをあげたい</li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"12:1-12:10\" id=\"2-0-0\" name=\"2-0-0\">\n<a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"13:1-13:220\">というわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。</p>\n<p data-sourcepos=\"15:1-15:10\"><strong>方針</strong></p>\n<ul data-sourcepos=\"16:1-24:0\">\n<li data-sourcepos=\"16:1-22:64\">Railsから徐々にPhoenixに移行できるように\n<ul data-sourcepos=\"17:3-22:64\">\n<li data-sourcepos=\"17:3-17:44\">いままでとおなじPaaS（Heroku）</li>\n<li data-sourcepos=\"18:3-20:100\">いままでとおなじレポジトリ\n<ul data-sourcepos=\"19:7-20:100\">\n<li data-sourcepos=\"19:7-19:60\">ブランチ戦略は <code>phoenix/base</code> をベースに</li>\n<li data-sourcepos=\"20:7-20:100\">気軽に参照できるようにRails関連ファイルは可能な限りのこしておく</li>\n</ul>\n</li>\n<li data-sourcepos=\"21:3-22:64\">いままでとおなじDB\n<ul data-sourcepos=\"22:7-22:64\">\n<li data-sourcepos=\"22:7-22:64\">移行完了までDBマイグレーションをしない</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"23:1-24:0\">Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで</li>\n</ul>\n<h2 data-sourcepos=\"25:1-25:26\" id=\"2-1-0\" name=\"2-1-0\">\n<a class=\"anchor\" id=\"Guardianを実装する\" name=\"Guardian%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" href=\"#Guardian%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Guardianを実装する\"> &gt; Guardianを実装する</span></a>Guardianを実装する</h2>\n<p data-sourcepos=\"26:1-26:382\">まず、参考にしたのはBlackodeの<a href=\"https://github.com/blackode/guardian_auth\" target=\"_blank\" rel=\"noopener noreferrer\">guardian_auth</a>です。ただ、Guardianのバージョンがふるいので<a href=\"https://github.com/ueberauth/guardian/blob/master/upgrade_guides/0.14.to.1.0.md\" target=\"_blank\" rel=\"noopener noreferrer\">1.0へのマイグレーション記事</a>をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。</p>\n<p data-sourcepos=\"28:1-28:12\">ロジック</p>\n<ul data-sourcepos=\"29:1-37:0\">\n<li data-sourcepos=\"29:1-29:15\">MyApp.Account</li>\n<li data-sourcepos=\"30:1-30:28\">MyApp.Account.Registration</li>\n<li data-sourcepos=\"31:1-31:20\">MyApp.Account.User</li>\n<li data-sourcepos=\"32:1-32:21\">MyApp.Auth.Guardian</li>\n<li data-sourcepos=\"33:1-33:25\">MyApp.Auth.ErrorHandler</li>\n<li data-sourcepos=\"34:1-34:21\">MyApp.Auth.Pipeline</li>\n<li data-sourcepos=\"35:1-35:26\">MyApp.Auth.AfterPipeline</li>\n<li data-sourcepos=\"36:1-37:0\">MyApp.Auth.Session</li>\n</ul>\n<p data-sourcepos=\"38:1-38:18\">コントローラ</p>\n<ul data-sourcepos=\"39:1-41:0\">\n<li data-sourcepos=\"39:1-39:33\">MyAppWeb.RegistrationController</li>\n<li data-sourcepos=\"40:1-41:0\">MyAppWeb.SessionController</li>\n</ul>\n<h3 data-sourcepos=\"42:1-42:55\" id=\"2-1-1\" name=\"2-1-1\">\n<a class=\"anchor\" id=\"シリアライザとエラーハンドラの設定\" name=\"%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%B6%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%81%AE%E8%A8%AD%E5%AE%9A\" href=\"#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%B6%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%81%AE%E8%A8%AD%E5%AE%9A\" data-position=\"2-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"シリアライザとエラーハンドラの設定\"> &gt; シリアライザとエラーハンドラの設定</span></a>シリアライザとエラーハンドラの設定</h3>\n<p data-sourcepos=\"43:1-43:191\">Guardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。</p>\n<div class=\"code-block\" data-sourcepos=\"45:1-58:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/guardian.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Account</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">subject_for_token</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">_claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">to_string</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)}</span>\n  <span class=\"k\">def</span> <span class=\"n\">subject_for_token</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"ss\">:reason_for_error</span><span class=\"p\">}</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">resource_from_claims</span><span class=\"p\">(</span><span class=\"n\">claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"no\">Account</span><span class=\"o\">.</span><span class=\"n\">get_user!</span><span class=\"p\">(</span><span class=\"n\">claims</span><span class=\"p\">[</span><span class=\"s2\">\"sub\"</span><span class=\"p\">])}</span>\n  <span class=\"k\">def</span> <span class=\"n\">resource_from_claims</span><span class=\"p\">(</span><span class=\"n\">_claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"ss\">:reason_for_error</span><span class=\"p\">}</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"60:1-71:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/error_handler.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span> <span class=\"k\">do</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Conn</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">auth_error</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">_reason</span><span class=\"p\">},</span> <span class=\"n\">_opts</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"no\">Poison</span><span class=\"o\">.</span><span class=\"n\">encode!</span><span class=\"p\">(%{</span><span class=\"ss\">message:</span> <span class=\"n\">to_string</span><span class=\"p\">(</span><span class=\"n\">type</span><span class=\"p\">)})</span>\n    <span class=\"n\">send_resp</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"73:1-87:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/config/config.exs</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:my_app</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">issuer:</span> <span class=\"s2\">\"MyApp\"</span><span class=\"p\">,</span>\n  <span class=\"ss\">ttl:</span> <span class=\"p\">{</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"ss\">:days</span><span class=\"p\">},</span>\n  <span class=\"ss\">allowed_drift:</span> <span class=\"mi\">2000</span><span class=\"p\">,</span>\n  <span class=\"c1\"># optionals</span>\n  <span class=\"ss\">allowed_algos:</span> <span class=\"p\">[</span><span class=\"s2\">\"HS512\"</span><span class=\"p\">],</span>\n  <span class=\"ss\">verify_module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">JWT</span><span class=\"p\">,</span>\n  <span class=\"ss\">verify_issuer:</span> <span class=\"no\">true</span><span class=\"p\">,</span>\n  <span class=\"ss\">secret_key:</span>\n    <span class=\"no\">System</span><span class=\"o\">.</span><span class=\"n\">get_env</span><span class=\"p\">(</span><span class=\"s2\">\"GUARDIAN_SECRET\"</span><span class=\"p\">)</span> <span class=\"o\">||</span>\n      <span class=\"s2\">\"secret_key\"</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"89:1-89:25\" id=\"2-1-2\" name=\"2-1-2\">\n<a class=\"anchor\" id=\"ルーターの設定\" name=\"%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A\" href=\"#%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A\" data-position=\"2-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ルーターの設定\"> &gt; ルーターの設定</span></a>ルーターの設定</h3>\n<p data-sourcepos=\"90:1-90:129\">認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。</p>\n<p data-sourcepos=\"92:1-92:614\">ルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート <code>/</code> などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。</p>\n<div class=\"code-block\" data-sourcepos=\"94:1-104:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/pipeline.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">VerifySession</span><span class=\"p\">,</span> <span class=\"ss\">claims:</span> <span class=\"p\">%{</span><span class=\"s2\">\"typ\"</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"access\"</span><span class=\"p\">})</span>\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">VerifyHeader</span><span class=\"p\">,</span> <span class=\"ss\">claims:</span> <span class=\"p\">%{</span><span class=\"s2\">\"typ\"</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"access\"</span><span class=\"p\">})</span>\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">LoadResource</span><span class=\"p\">,</span> <span class=\"ss\">allow_blank:</span> <span class=\"no\">true</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"106:1-114:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/after_pipeline.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AfterPipeline</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">EnsureAuthenticated</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"116:1-156:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/router.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyAppWeb</span><span class=\"o\">.</span><span class=\"no\">Router</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">MyAppWeb</span><span class=\"p\">,</span> <span class=\"ss\">:router</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:accepts</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"html\"</span><span class=\"p\">])</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:fetch_session</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:fetch_flash</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:protect_from_forgery</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:put_secure_browser_headers</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser_auth</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser_auth_after</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AfterPipeline</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">scope</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">MyAppWeb</span> <span class=\"k\">do</span>\n    <span class=\"n\">pipe_through</span><span class=\"p\">([</span><span class=\"ss\">:browser</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth</span><span class=\"p\">])</span>\n\n    <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"/registration\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:create</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:new</span><span class=\"p\">)</span>\n    <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:create</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/logout\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:delete</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">scope</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">MyAppWeb</span> <span class=\"k\">do</span>\n    <span class=\"n\">pipe_through</span><span class=\"p\">([</span><span class=\"ss\">:browser</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth_after</span><span class=\"p\">])</span>\n\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/edit\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:edit</span><span class=\"p\">)</span>\n    <span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"/edit\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:update</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/users\"</span><span class=\"p\">,</span> <span class=\"no\">UserController</span><span class=\"p\">,</span> <span class=\"ss\">:index</span><span class=\"p\">)</span>\n    <span class=\"n\">resources</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">UserController</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">:show</span><span class=\"p\">,</span> <span class=\"ss\">:delete</span><span class=\"p\">],</span> <span class=\"ss\">param:</span> <span class=\"s2\">\"username\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"158:1-168:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/config/config.exs</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:MyApp</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span>\n  <span class=\"ss\">module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">error_handler:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:MyApp</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AferPipeline</span><span class=\"p\">,</span>\n  <span class=\"ss\">module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">error_handler:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"170:1-170:10\" id=\"2-1-3\" name=\"2-1-3\">\n<a class=\"anchor\" id=\"登録\" name=\"%E7%99%BB%E9%8C%B2\" href=\"#%E7%99%BB%E9%8C%B2\" data-position=\"2-1-3\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"登録\"> &gt; 登録</span></a>登録</h3>\n<p data-sourcepos=\"171:1-171:123\">登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。</p>\n<p data-sourcepos=\"173:1-173:207\">このあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。</p>\n<div class=\"code-block\" data-sourcepos=\"175:1-194:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/registration_controller.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">user_params</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">changeset</span> <span class=\"o\">=</span> <span class=\"no\">User</span><span class=\"o\">.</span><span class=\"n\">registration_changeset</span><span class=\"p\">(%</span><span class=\"no\">User</span><span class=\"p\">{},</span> <span class=\"n\">user_params</span><span class=\"p\">)</span>\n\n  <span class=\"k\">case</span> <span class=\"no\">Registration</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">changeset</span><span class=\"p\">,</span> <span class=\"no\">Repo</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Your account was created successfully\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"n\">page_path</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"ss\">:home</span><span class=\"p\">))</span>\n\n   <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"n\">changeset</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Unable to create account: Try again\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"no\">MyAppWeb</span><span class=\"o\">.</span><span class=\"no\">PageView</span><span class=\"p\">,</span> <span class=\"s2\">\"home.html\"</span><span class=\"p\">,</span> <span class=\"ss\">changeset:</span> <span class=\"n\">changeset</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"196:1-204:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/auth.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%</span><span class=\"no\">User</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_in</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"206:1-213:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/account/registration.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">changeset</span><span class=\"p\">,</span> <span class=\"n\">repo</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">changeset</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">()</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"215:1-215:34\" id=\"2-1-4\" name=\"2-1-4\">\n<a class=\"anchor\" id=\"ログイン・ログアウト\" name=\"%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%83%BB%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88\" href=\"#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%83%BB%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88\" data-position=\"2-1-4\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ログイン・ログアウト\"> &gt; ログイン・ログアウト</span></a>ログイン・ログアウト</h3>\n<p data-sourcepos=\"216:1-216:108\">ログイン・ログアウトはセッション用のサービスとコントローラで実装します。</p>\n<div class=\"code-block\" data-sourcepos=\"218:1-244:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/session_controller.ex</span>\n\n<span class=\"nv\">@doc</span> <span class=\"s2\">\"Logged in [POST /login]\"</span>\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%{</span><span class=\"s2\">\"email\"</span> <span class=\"o\">=&gt;</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span> <span class=\"o\">=&gt;</span> <span class=\"n\">password</span><span class=\"p\">})</span> <span class=\"k\">do</span>\n  <span class=\"k\">case</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">authenticate_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Logged in successfully\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"n\">page_path</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"ss\">:home</span><span class=\"p\">))</span>\n\n    <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"n\">_reason</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Wrong username/password\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s2\">\"new.html\"</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"nv\">@doc</span> <span class=\"s2\">\"Logged out [DELETE /logout]\"</span>\n<span class=\"k\">def</span> <span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">_params</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Logged out successfully.\"</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"246:1-285:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/session.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Session</span> <span class=\"k\">do</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Ecto</span><span class=\"o\">.</span><span class=\"no\">Query</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Conn</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Comeonin</span><span class=\"o\">.</span><span class=\"no\">Bcrypt</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">checkpw:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"ss\">dummy_checkpw:</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Repo</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Account</span><span class=\"o\">.</span><span class=\"no\">User</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%</span><span class=\"no\">User</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">conn</span>\n    <span class=\"o\">|&gt;</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_in</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_out</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">authenticate_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">given_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"no\">Ecto</span><span class=\"o\">.</span><span class=\"no\">Query</span><span class=\"o\">.</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">u</span> <span class=\"ow\">in</span> <span class=\"no\">User</span><span class=\"p\">,</span> <span class=\"ss\">where:</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">==</span> <span class=\"o\">^</span><span class=\"n\">email</span><span class=\"p\">)</span>\n\n    <span class=\"no\">Repo</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n    <span class=\"o\">|&gt;</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"n\">given_password</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">current_user</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">current_resource</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">logged_in?</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">authenticated?</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n  <span class=\"k\">defp</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Incorrect username or password\"</span><span class=\"p\">}</span>\n\n  <span class=\"k\">defp</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">given_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"k\">case</span> <span class=\"no\">Comeonin</span><span class=\"o\">.</span><span class=\"no\">Bcrypt</span><span class=\"o\">.</span><span class=\"n\">checkpw</span><span class=\"p\">(</span><span class=\"n\">given_password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">encrypted_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n      <span class=\"no\">true</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span>\n      <span class=\"no\">false</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Incorrect email or password\"</span><span class=\"p\">}</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"287:1-287:78\">Devise/Railsのビューヘルパーはビューマクロで適用します。</p>\n<div class=\"code-block\" data-sourcepos=\"289:1-298:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">view</span> <span class=\"k\">do</span>\n  <span class=\"kn\">quote</span> <span class=\"k\">do</span>\n    <span class=\"c1\"># ..</span>\n    <span class=\"kn\">import</span> <span class=\"no\">Okuribi</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Session</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">current_user:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">logged_in?:</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"300:1-300:97\">あるいは、<code>put_assigns</code>関数をはやしてコントローラマクロに適用します。</p>\n<div class=\"code-block\" data-sourcepos=\"302:1-318:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/session.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">put_assigns</span><span class=\"p\">(%{</span><span class=\"ss\">private:</span> <span class=\"p\">%{</span><span class=\"ss\">phoenix_action:</span> <span class=\"n\">action</span><span class=\"p\">}}</span> <span class=\"o\">=</span> <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">current_resource</span> <span class=\"o\">=</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">current_resource</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">)</span>\n\n  <span class=\"n\">settings</span> <span class=\"o\">=</span>\n    <span class=\"k\">if</span> <span class=\"n\">current_resource</span><span class=\"p\">,</span>\n      <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:sign_in</span><span class=\"p\">][</span><span class=\"n\">action</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"p\">[],</span>\n      <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:sign_out</span><span class=\"p\">][</span><span class=\"n\">action</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"p\">[]</span>\n\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">current_resource</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:page_title</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:page_title</span><span class=\"p\">])</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:page_description</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:page_description</span><span class=\"p\">])</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"320:1-329:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">controller</span> <span class=\"k\">do</span>\n  <span class=\"kn\">quote</span> <span class=\"k\">do</span>\n    <span class=\"c1\"># ..</span>\n    <span class=\"kn\">import</span> <span class=\"no\">Okuribi</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">put_assigns:</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"331:1-331:205\"><code>assigns</code>ひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsの<code>ActionView::Helpers::CaptureHelper#provide</code>の代わりに使えます。</p>\n<div class=\"code-block\" data-sourcepos=\"333:1-351:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/*_controller.ex</span>\n\n<span class=\"nv\">@page</span> <span class=\"p\">%{</span>\n  <span class=\"ss\">sign_in:</span> <span class=\"p\">%{</span>\n    <span class=\"ss\">new:</span> <span class=\"p\">%{</span>\n      <span class=\"ss\">page_title:</span> <span class=\"n\">dgettext</span><span class=\"p\">(</span><span class=\"s2\">\"views\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pages.home.signed_in.page_title\"</span><span class=\"p\">),</span>\n      <span class=\"ss\">page_description:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"ss\">sign_out:</span> <span class=\"p\">%{</span>\n    <span class=\"ss\">new:</span> <span class=\"p\">%{</span>\n      <span class=\"ss\">page_title:</span> <span class=\"n\">dgettext</span><span class=\"p\">(</span><span class=\"s2\">\"views\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pages.home.signed_out.page_title\"</span><span class=\"p\">),</span>\n      <span class=\"ss\">page_description:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:put_assigns</span><span class=\"p\">,</span> <span class=\"nv\">@page</span> <span class=\"ow\">when</span> <span class=\"n\">action</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"ss\">:home</span><span class=\"p\">])</span>\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"353:1-353:12\" id=\"2-2-0\" name=\"2-2-0\">\n<a class=\"anchor\" id=\"その他\" name=\"%E3%81%9D%E3%81%AE%E4%BB%96\" href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"その他\"> &gt; その他</span></a>その他</h2>\n<p data-sourcepos=\"354:1-354:120\">RailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。</p>\n<ul data-sourcepos=\"356:1-374:0\">\n<li data-sourcepos=\"356:1-364:48\">Rails\n<ul data-sourcepos=\"357:5-364:48\">\n<li data-sourcepos=\"357:5-357:76\"><code>ActionView::Helpers::FormHelper#form_for(record, options={}, &amp;block)</code></li>\n<li data-sourcepos=\"358:5-358:83\"><code>ActionView::Helpers::FormHelper#text_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"359:5-359:83\"><code>ActionView::Helpers::FormHelper#file_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"360:5-360:85\"><code>ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"361:5-361:87\"><code>ActionView::Helpers::FormHelper#password_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"362:5-362:96\"><code>ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})</code></li>\n<li data-sourcepos=\"363:5-363:70\"><code>ActionView::Helpers::FormBuilder#submit(value=nil, options={})</code></li>\n<li data-sourcepos=\"364:5-364:48\"><code>ActionView::Helpers::TranslationHelper#t</code></li>\n</ul>\n</li>\n<li data-sourcepos=\"365:1-374:0\">Phoenix\n<ul data-sourcepos=\"366:5-374:0\">\n<li data-sourcepos=\"366:5-366:73\"><code>Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)</code></li>\n<li data-sourcepos=\"367:5-367:61\"><code>Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"368:5-368:61\"><code>Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"369:5-369:63\"><code>Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"370:5-370:65\"><code>Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"371:5-371:70\"><code>Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])</code></li>\n<li data-sourcepos=\"372:5-372:50\"><code>Phoenix.HTML.Form.submit(opts, opts \\\\ [])</code></li>\n<li data-sourcepos=\"373:5-374:0\"><code>Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})</code></li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"375:1-375:8\" id=\"3-0-0\" name=\"3-0-0\">\n<a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"376:1-376:177\">前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。</p>\n","tags":["phoenix-framework","elixir","ruby-on-rails","ruby","wercker","heroku","authentication","guardian"],"updated_at":"2021-01-16T23:37:33+09:00","childPublishedDate":{"published_on":"2018-05-20T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_ef5f024307008aa399b91f87fa5f64e8.jpg"}},"relatedPosts":{"edges":[{"node":{"number":89,"relative_category":"blog/backend","fields":{"title":"imi-enrichment-addressは住所のバリデーションチェックでどの程度使えるか","excerpt":"コロナ禍であらゆる流通がオンラインに移行する中、正しい住所を使うことはいっそう求められています。ユーザーが配送用に住所を入力する時そのデータが正しいとどうやって判定するのでしょうか。今回はOSSライブラリimi-enrichment-addressが住所のバリデーションチェックでどの程度使えるか検証してみました。\n   > PROBLEMPROBLEM \n\n- 住所の不備が至るところで起きている 特に町名番地の抜けもれや不備が多くこの点をどうにか拾いたい 可能ならユーザーの入力時点でFEあるいはBE側でバリデーションチェックしたい まずはOSSのライブラリをで検証したい \n- 特に町名番地の抜けもれや不備が多くこの点をどうにか拾いたい\n- 可能ならユーザーの入力時点でFEあるいはBE側でバリデーションチェックしたい まずはOSSのライブラリをで検証したい \n- まずはOSSのライブラリをで検証したい  > SOLUTIONSOLUTION \n\nというわけで、昨年（2020年）経産省IMI（情報共有基盤）から公開された住所変換コンポーネント「IMI-Tool-Project/imi-enrichment-address」がバリデーションチェックでどの程度使えるか検証します。  > imi-enrichment-addressとはimi-enrichment-addressとは \n\n経産省IMIツールプロジェクトで公開された住所変換コンポーネントです。CLIとサーバーが用意されていますが、今回はCLIを見ていきます。 \n\nヘルプを見ると住所を引数として渡すことで処理されることが分かります。 sh\n\n$ npm install -g https://info.gbiz.go.jp/tools/imi_tools/resource/imi-enrichment-address/imi-enrichment-address-2.0.0.tgz $ imi-enrichment-address --help imi-enrichment-address 住所文字列をもとに住所型・場所型の情報を補完します オプション -h, --help このヘルプを表示します -f, --file file 変換対象とする JSON ファイル -s, --string string 変換対象とする住所文字列 -i, --indent number 出力する JSON のインデント (default 2) 実行例 ヘルプの表示 $ imi-enrichment-address -h 文字列の処理 $ imi-enrichment-address -s 霞が関2 ファイルの処理 $ imi-enrichment-address input.json 標準入力の処理 $ cat input.json | imi-enrichment-address  \n\n実行すると正確な住所を渡したときと不正確な住所を渡したときで異なった結果を返すことが分かります。今回はこの正確・不正確の異なった結果を利用して検証していこうと思います。 sh\n\n$ imi-enrichment-address -s 長野県長野市大字長野旭町1108 { \"@context\": \"https://imi.go.jp/ns/core/context.jsonld\", \"@type\": \"場所型\", \"住所\": { \"@type\": \"住所型\", \"表記\": \"長野県長野市大字長野旭町1108\", \"都道府県\": \"長野県\", \"都道府県コード\": \"http://data.e-stat.go.jp/lod/sac/C20000\", \"市区町村\": \"長野市\", \"市区町村コード\": \"http://data.e-stat.go.jp/lod/sac/C20201\", \"町名\": \"大字長野\" }, \"地理座標\": { \"@type\": \"座標型\", \"緯度\": \"36.674892\", \"経度\": \"138.178449\" } } $ imi-enrichment-address -s 長野県長野市旭町1108 { \"@context\": \"https://imi.go.jp/ns/core/context.jsonld\", \"@type\": \"場所型\", \"住所\": { \"@type\": \"住所型\", \"表記\": \"長野県長野市旭町1108\", \"都道府県\": \"長野県\", \"都道府県コード\": \"http://data.e-stat.go.jp/lod/sac/C20000\", \"市区町村\": \"長野市\", \"市区町村コード\": \"http://data.e-stat.go.jp/lod/sac/C20201\" }, \"メタデータ\": { \"@type\": \"文書型\", \"説明\": \"該当する町名が見つかりません\" } }  \n\nなお、GitHubコードを見るとimi-enrichment-addressは街区レベル位置参照情報を利用して実装しています。このことを考えるとバリデーションチェックで積極的につかうのは難しく、ユースケースとしては下記2点に落ち着くと考えます。 \n\n- ユーザーに住所の再確認を促す\n- 入力後の住所不備について人が目検で確認する前段階で利用  > 検証用データ検証用データ \n\nさて、検証に進みましょう。imi-enrichment-addressで検証するデータは簡易に使える住所.jp、その中の事業所住所22402件を使います。他にも検証データはありますが、コストもそれほどかけられないのでコマンドだけで完結するものを選んでいます。 sh\n\n$ curl http://jusyo.jp/downloads/new/csv/csv_zenkoku.zip csv_zenkoku.zip $ unzip csv_zenkoku.zip $ go get github.com/mithrandie/csvq $ csvq -f CSV \"SELECT COUNT(*) FROM zenkoku WHERE 事業所住所 IS NOT NULL\" COUNT(*) 22402   > imi-enrichment-addressで検証用データを確認するimi-enrichment-addressで検証用データを確認する \n\n今回実行したCLIはNodeJSであることと数時間で処理できるという点で逐次で済ませました。 sh\n\n$ for i in $( csvq -f CSV \"SELECT 都道府県,市区町村,事業所住所 FROM zenkoku WHERE 事業所住所 IS NOT NULL\" \\ | sed 's/,//g' \\ | tail +2 \\ ); do imi-enrichment-address -s $i \\ | jq -r ' [ .[\"住所\"][\"表記\"], ( if .[\"地理座標\"] != null then true else false end ), .[\"メタデータ\"][\"説明\"] ] | @csv ' >>output.csv; done &   > バリデーションチェックの結果を確認するバリデーションチェックの結果を確認する \n\nimi-enrichment-addressの出力結果を確認したところ全国で9.25%が無効、下記の通り町名番地の表記揺れに弱いことが分かりました。特に町字（まちあざ）省略によるバリデーションエラーの比率が高く、青森、長野、沖縄等複数の県の住所が実用に耐えない結果となりました。 \n\n- 各地方の字・大字の省略\n- 京都の通り上る・下るの表記\n- 北海道の条、線の表記揺れ\n- 茨城、岐阜等の町名省略\n- 茨城、神奈川、岐阜、石川等の区画整理地    都道府県 無効割合（%） 備考     青森県 54.42 字省略により無効   長野県 44.28 字省略により無効   沖縄県 43.55 字省略により無効   大分県 38.96 字省略により無効   京都府 36.86 字省略、通りにより無効   佐賀県 33.33 字省略により無効   奈良県 29.94 字省略により無効   福島県 29.18 字省略により無効   宮崎県 27.71 字省略により無効   埼玉県 23.08 字省略により無効   山口県 22.65 字省略により無効   和歌山県 17.78 字省略により無効   群馬県 17.08 字省略、ノ町により無効   茨城県 15.51 字省略、町名省略、区画整理により無効   熊本県 14.89 字省略により無効   山形県 14.38 字省略により無効   北海道 13.76 字省略、条、線により無効   栃木県 13.6 字省略により無効   新潟県 13.19 字省略により無効   鳥取県 9.57 字省略により無効   全国 9.25    福岡県 9 字省略により無効   三重県 7.74 字省略により無効   愛知県 7.4 字省略により無効   鹿児島県 7.09 字省略により無効   山梨県 6.8 字省略により無効   宮城県 6.37 字省略により無効   岩手県 6.28 字省略により無効   岐阜県 5.67 字省略、町名省略、区画整理により無効   香川県 4.71 字省略により無効   石川県 4.7 字省略、区画整理により無効   愛媛県 4.39 字省略により無効   秋田県 4.17 字省略により無効   滋賀県 3.76 字省略により無効   広島県 3.74 字省略により無効   高知県 3.38 字省略により無効   大阪府 3.28 字省略により無効   兵庫県 2.71 字省略により無効   島根県 2.04 字省略により無効   岡山県 1.81 字省略により無効   神奈川県 1.72 字省略、区画整理により無効   徳島県 1.64 字省略により無効   富山県 1.14 字省略により無効   静岡県 1.06 字省略、町名省略、区画整理により無効   東京都 0.89 字省略により無効   福井県 0.71 字省略により無効   千葉県 0.64 字省略により無効   長崎県 0      > WRAPUPWRAPUP \n\nimi-enrichment-addressは町名番地の判定に素の街区レベル位置参照情報を使用しているため、町字（まちあざ）の省略に弱いことが分かりました。 \n\n- ユーザーに住所の再確認を促す\n- 入力後の住所不備について人が目検で確認する前段階で利用 \n\nまず、想定したユースケースの内1つ「ユーザーに住所の再確認を促す」については、配送で使う住所の場合「町字の省略は影響ない」ので機能として適切ではありません。ユーザーが東京に集中している場合は関係ないですが、「町字が存在するさいたま市、川崎市、名古屋市、広島市、北九州市、福岡市、熊本市等の政令指定都市」や長野市のように住所が町字の組み合わせで2つ以上存在する都市の場合、使い勝手の悪い機能となります。 \n\n次に「入力後の住所不備について人が目検で確認する前段階で利用」については多少は有効に機能するでしょう。ただし、町字が多い地域では上記同様に使い勝手が悪くなります。 \n\n今回の検証の結果、現状の仕様ではimi-enrichment-addressを使うケースは限定せざるを得ず、一旦使用を見送りとします。とは言え、街区レベル位置参照情報にある町名番地から町字を除けば活用範囲が広がる可能性も確認できました。幸いなことにライブラリはMITライセンスで公開されています。"},"name":"imi-enrichment-addressは住所のバリデーションチェックでどの程度使えるか","tags":[],"childPublishedDate":{"published_on":"2021-07-23T18:57:47.000Z","published_on_unix":1627066667}}},{"node":{"number":80,"relative_category":"blog/backend","fields":{"title":"AWS Organizationsを別のAWSアカウントに移行する","excerpt":"最近のAWSはCDKの発表に代表されるようにインフラ以外の開発者が触りやすい環境が整ってきています。ただ、こうした機能やリソースを存分に享受するにはIAM管理だけでは不足しており、AWSアカウントの管理方針を大枠で整理する必要が出てきました。今回は深く考えずに使っていたOrganizationsを整理する際にはまったポイントを記していきます。    > PROBLEMPROBLEM \n\n- 初期の頃につくったAWSアカウントにコンソリ請求の便利さからとりあえずOrganizations機能をつけてみた その後、当該アカウントに異なるワークロードのリソースを加えすぎてスケールしづらい構成になってきた 例えば 開発環境をAWSアカウント単位で分けられないためIAMや開発サイクルが複雑になり開発スピードに支障が出てきた セキュリティ上望ましくないシステム構成について改修のハードルが上がってきた \n- その後、当該アカウントに異なるワークロードのリソースを加えすぎてスケールしづらい構成になってきた 例えば 開発環境をAWSアカウント単位で分けられないためIAMや開発サイクルが複雑になり開発スピードに支障が出てきた セキュリティ上望ましくないシステム構成について改修のハードルが上がってきた \n- 例えば 開発環境をAWSアカウント単位で分けられないためIAMや開発サイクルが複雑になり開発スピードに支障が出てきた セキュリティ上望ましくないシステム構成について改修のハードルが上がってきた \n- 開発環境をAWSアカウント単位で分けられないためIAMや開発サイクルが複雑になり開発スピードに支障が出てきた\n- セキュリティ上望ましくないシステム構成について改修のハードルが上がってきた   > SOLUTIONSOLUTION \n\nというわけで、一旦Organizations機能を解除して新しく作成したAWS管理アカウントに移行していくことにしました。一つ一つの作業は単純なのですが意外と時間がかかることが分かったので備忘として残しておきます。 \n\nOrganizationsのOU構成はサムネイル画像のBEFORE/AFTERの通りです。 \n\nBEFORE：Organization Unitの構成は全然考えずとりあえず追加していました。 \n\n- Foo - AWS Organizationsのオーナーアカウントであり、異なるワークロードや環境が混在しているアカウント\n- Bar - お試し用アカウント1\n- Buzz - お試し用アカウント2 \n\nAFTER：こちらの記事「Best Practices for Organizational Units with AWS Organizations | AWS Management & Governance Blog」を参考に構成しました。 \n\n- Foundation Management - AWS Organizationsのオーナーアカウント Security Infrastructure \n- Management - AWS Organizationsのオーナーアカウント\n- Security\n- Infrastructure\n- Workload Prod Foo Stg FooStg Integ FooInteg \n- Prod Foo \n- Foo\n- Stg FooStg \n- FooStg\n- Integ FooInteg \n- FooInteg\n- Sandbox BarSandbox BuzzSandbox \n- BarSandbox\n- BuzzSandbox   > Organizationsを別アカウントに移行する方法Organizationsを別アカウントに移行する方法 \n\nやったことはこちらの記事「2 つの AWS Organizations 間でアカウントを移動する」の通りですが、いくつかはまるポイントが書かれていないのでそちらも合わせて記します。まず注意点として3つあります。 \n\n一つ目は、Organizationsの移行期間中は請求の種類が3種類になる可能性があります。具体的には「古いOrganizationsによるコンソリ請求」「スタンドアロンのAWSアカウントによる請求」「新しいOrganizationsによるコンソリ請求」です。会社組織としてAWSを利用している場合は経理側との連携が必要になってくるでしょう。 \n\n二つ目は、古いOrganizationsから追加作成されたメンバーアカウントには請求情報の追加と電話番号の認証を行う必要があります。前者の請求情報の追加はそれほど手間ではないのですが、後者の電話番号の認証はAWSサポートを介すため1アカウントごとに3日から1週間ほど時間がかかります。詳細の対応方法はこちらの記事「組織からのメンバーアカウントのリンク解除のエラーを解決する」を参照下さい。 \n\n三つ目は、新しいOrganizationsでは先に制限緩和を行っておきましょう。新しいOrganizationsを作成する際はおそらく古いOrganizationsの時よりもにメンバーアカウントが増えることと思います。特にベストプラクティスのOrganization Unitでアカウントを分けていくとあっという間にデフォルト制限の10を超える可能性が高いです。 \n\n次に移行手順ですが、上記の注意点をクリアしたらほぼ単純作業になります。 \n\n1. 古いOrganizationからメンバーアカウントを削除\n2. 新しいOrganizationからメンバーアカウントに招待を送信\n3. メンバーアカウントで新しいOrganizationへの招待を受け入れる\n4. （全てのメンバーアカウントを削除し終わった後に）古いOrganizationsを削除\n5. 古いOrganizationsの管理アカウントをメンバーアカウントとして新しい Organization に招待   > WRAPUPWRAPUP \n\n昨今のAWSの動きを見ると、インフラ以外の開発者にもAWSを気軽に使えるようになってきており、Organizations機能を使うこと前提にサービスが展開されているようです。なのでこうした恩恵をうけるためにもOrganizationsのベストプラクティスに則ったアカウント構成にする必要があります。 \n\n一応の注意点としては、Organizationsが便利だからといってOrganizationsからメンバーアカウントを追加することは止めた方がいいです。Organizations移行の注意点から分かる通り、Organizationsから追加されたメンバーアカウントには請求情報追加も電話番号認証も行われません。いざ別のOrganizationsに移行する際に想定外の手間と時間をかけないよう、常にスタンドアロンでAWSアカウントを作成するようにしましょう。 \n\nさて、Organizationsの勘所が見えてきたら次はAWS SSOという便利な機能が待っています。AWSを楽しみましょう。"},"name":"AWS Organizationsを別のAWSアカウントに移行する","tags":["aws-organizations"],"childPublishedDate":{"published_on":"2021-05-13T11:39:28.000Z","published_on_unix":1620905968}}},{"node":{"number":55,"relative_category":"blog/backend","fields":{"title":"PositiveSSLをHerokuに適用する","excerpt":"年に1回のSSL更新のイベントです。毎年同じことをすれば良いかというとそうでもなく、販社と卸の都合でSSLの購入方法が微妙に変わります。とは言え、毎年一から調べ直すのも手間なので備忘として記しておきます。   > PROBLEMPROBLEM \n\n- HerokuのSSLの期限がきた   > SOLUTIONSOLUTION \n\n- というわけで、いつも使っているSSL販売代理店SSLs.com（NameCheap社）でPositiveSSL（運用Comodo社）を購入しHerokuに適用します。   > HOWTOHOWTO \n\n1. 証明書を購入する SSL販売代理店であればどこでもいいのですが、昔から使っているので \n2. SSL販売代理店であればどこでもいいのですが、昔から使っているので\n3. 秘密鍵と署名リクエストをつくる 秘密鍵 openssl genrsa -des3 -out server.orig.key 2048 秘密鍵パスワードなしopenssl rsa -in server.orig.key -out server.key 署名リクエスト openssl req -new -key server.key -out server.csr ※ 最近このあたりの署名情報は、SSL販売代理店側で生成しているケースが増えてきました \n4. 秘密鍵 openssl genrsa -des3 -out server.orig.key 2048 \n5. 秘密鍵パスワードなしopenssl rsa -in server.orig.key -out server.key \n6. 署名リクエスト openssl req -new -key server.key -out server.csr \n7. ※ 最近このあたりの署名情報は、SSL販売代理店側で生成しているケースが増えてきました\n8. 証明書発行を申請する SSL販売代理店より署名リクエストserver.csrと関連情報を送信します \n9. SSL販売代理店より署名リクエストserver.csrと関連情報を送信します\n10. ドメイン保持の証明をする PositiveSSLの運用会社Comodoに対しドメイン保持の証明します 証明方法はメールを受信する、あるいは、Webサイトにプレーンテキストを設置するかの2択になります \n11. PositiveSSLの運用会社Comodoに対しドメイン保持の証明します\n12. 証明方法はメールを受信する、あるいは、Webサイトにプレーンテキストを設置するかの2択になります\n13. Heroku用の証明書をつくる 証明タスクをこなししばらくすると、Comodo社より複数の証明書が送られてきます Heroku用に証明書をつくる cat www_example_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt > server.crt \n14. 証明タスクをこなししばらくすると、Comodo社より複数の証明書が送られてきます\n15. Heroku用に証明書をつくる cat www_example_com.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt > server.crt \n16. Herokuに証明書を適用する 新規で適用する場合は次のコマンドを実行します heroku addons:add ssl:endpoint heroku certs:add server.crt server.key 更新する場合は次のコマンドを実行します heroku certs:update server.crt server.key \n17. 新規で適用する場合は次のコマンドを実行します heroku addons:add ssl:endpoint heroku certs:add server.crt server.key \n18. heroku addons:add ssl:endpoint\n19. heroku certs:add server.crt server.key\n20. 更新する場合は次のコマンドを実行します heroku certs:update server.crt server.key \n21. heroku certs:update server.crt server.key   > WRAPUPWRAPUP \n\nこのあたりが自動化されれば良いと思いつつ、自動化されたらこのあたりを調べるモチベーションがなくなるので年に一回のリハビリイベントとして位置づけておきます、はい。"},"name":"[2017-04-23]PositiveSSLをHerokuに適用する","tags":[],"childPublishedDate":{"published_on":"2017-04-23T00:00:00.000Z","published_on_unix":1492905600}}}]}},"pageContext":{"number":60}},"staticQueryHashes":[]}