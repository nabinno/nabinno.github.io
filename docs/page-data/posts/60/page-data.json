{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/60","result":{"data":{"esaPost":{"number":60,"relative_category":"blog/backend","fields":{"title":"連載 Rails2Phoenix 2 認証機能を実装する","excerpt":"連載「Rails2Phoenix」になります、前回は「UmbrellaプロジェクトをHerokuにデプロイする 」でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。   > PROBLEMPROBLEM \n\n- サービスについて 拡張にともない技術スタックがふえるのを抑えたい スケーラビリティのためのコストを抑えたい パフォーマンスをあげたい \n- 拡張にともない技術スタックがふえるのを抑えたい\n- スケーラビリティのためのコストを抑えたい\n- パフォーマンスをあげたい   > SOLUTIONSOLUTION \n\nというわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。 \n\n方針 \n\n- Railsから徐々にPhoenixに移行できるように いままでとおなじPaaS（Heroku） いままでとおなじレポジトリ ブランチ戦略は phoenix/base をベースに 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく いままでとおなじDB 移行完了までDBマイグレーションをしない \n- いままでとおなじPaaS（Heroku）\n- いままでとおなじレポジトリ ブランチ戦略は phoenix/base をベースに 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく \n- ブランチ戦略は phoenix/base をベースに\n- 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく\n- いままでとおなじDB 移行完了までDBマイグレーションをしない \n- 移行完了までDBマイグレーションをしない\n- Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで   > Guardianを実装するGuardianを実装する \n\nまず、参考にしたのはBlackodeのguardian_authです。ただ、Guardianのバージョンがふるいので1.0へのマイグレーション記事をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。 \n\nロジック \n\n- MyApp.Account\n- MyApp.Account.Registration\n- MyApp.Account.User\n- MyApp.Auth.Guardian\n- MyApp.Auth.ErrorHandler\n- MyApp.Auth.Pipeline\n- MyApp.Auth.AfterPipeline\n- MyApp.Auth.Session \n\nコントローラ \n\n- MyAppWeb.RegistrationController\n- MyAppWeb.SessionController   > シリアライザとエラーハンドラの設定シリアライザとエラーハンドラの設定 \n\nGuardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。   elixir \n\n# apps/my_app/lib/my_app/auth/guardian.ex defmodule MyApp.Auth.Guardian do use Guardian, otp_app: :my_app alias MyApp.Account def subject_for_token(resource, _claims), do: {:ok, to_string(resource.id)} def subject_for_token(_, _), do: {:error, :reason_for_error} def resource_from_claims(claims), do: {:ok, Account.get_user!(claims[\"sub\"])} def resource_from_claims(_claims), do: {:error, :reason_for_error} end     elixir \n\n# apps/my_app/lib/my_app/auth/error_handler.ex defmodule MyApp.Auth.ErrorHandler do import Plug.Conn def auth_error(conn, {type, _reason}, _opts) do body = Poison.encode!(%{message: to_string(type)}) send_resp(conn, 401, body) end end     elixir \n\n# apps/my_app/config/config.exs config :my_app, MyApp.Auth.Guardian, issuer: \"MyApp\", ttl: {30, :days}, allowed_drift: 2000, # optionals allowed_algos: [\"HS512\"], verify_module: MyApp.Auth.Guardian.JWT, verify_issuer: true, secret_key: System.get_env(\"GUARDIAN_SECRET\") || \"secret_key\"     > ルーターの設定ルーターの設定 \n\n認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。 \n\nルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート / などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。   elixir \n\n# apps/my_app/lib/my_app/auth/pipeline.ex defmodule MyApp.Auth.Pipeline do use Guardian.Plug.Pipeline, otp_app: :my_app plug(Guardian.Plug.VerifySession, claims: %{\"typ\" => \"access\"}) plug(Guardian.Plug.VerifyHeader, claims: %{\"typ\" => \"access\"}) plug(Guardian.Plug.LoadResource, allow_blank: true) end     elixir \n\n# apps/my_app/lib/my_app/auth/after_pipeline.ex defmodule MyApp.Auth.AfterPipeline do use Guardian.Plug.Pipeline, otp_app: :my_app plug(Guardian.Plug.EnsureAuthenticated) end     elixir \n\n# apps/my_app/lib/my_app_web/router.ex defmodule MyAppWeb.Router do use MyAppWeb, :router pipeline :browser do plug(:accepts, [\"html\"]) plug(:fetch_session) plug(:fetch_flash) plug(:protect_from_forgery) plug(:put_secure_browser_headers) end pipeline :browser_auth do plug(MyApp.Auth.Pipeline) end pipeline :browser_auth_after do plug(MyApp.Auth.AfterPipeline) end scope \"/\", MyAppWeb do pipe_through([:browser, :browser_auth]) post(\"/registration\", RegistrationController, :create) get(\"/login\", SessionController, :new) post(\"/login\", SessionController, :create) get(\"/logout\", SessionController, :delete) end scope \"/\", MyAppWeb do pipe_through([:browser, :browser_auth, :browser_auth_after]) get(\"/edit\", RegistrationController, :edit) put(\"/edit\", RegistrationController, :update) get(\"/users\", UserController, :index) resources \"/\", UserController, only: [:show, :delete], param: \"username\" end end     elixir \n\n# apps/my_app/config/config.exs config :MyApp, MyApp.Auth.Pipeline, module: MyApp.Auth.Guardian, error_handler: MyApp.Auth.ErrorHandler config :MyApp, MyApp.Auth.AferPipeline, module: MyApp.Auth.Guardian, error_handler: MyApp.Auth.ErrorHandler     > 登録登録 \n\n登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。 \n\nこのあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。   elixir \n\n# apps/my_app/lib/my_app_web/controller/registration_controller.ex def create(conn, user_params) do changeset = User.registration_changeset(%User{}, user_params) case Registration.create(changeset, Repo) do {:ok, user} -> conn |> MyApp.Auth.login(user) |> put_flash(:info, \"Your account was created successfully\") |> redirect(to: page_path(conn, :home)) {:error, changeset} -> conn |> put_flash(:error, \"Unable to create account: Try again\") |> render(MyAppWeb.PageView, \"home.html\", changeset: changeset) end end     elixir \n\n# apps/my_app/lib/my_app/auth/auth.ex def login(conn, %User{} = user) do conn |> Guardian.Plug.sign_in(user) |> assign(:current_user, user) end     elixir \n\n# apps/my_app/lib/my_app/account/registration.ex def create(changeset, repo) do changeset |> repo.insert() end     > ログイン・ログアウトログイン・ログアウト \n\nログイン・ログアウトはセッション用のサービスとコントローラで実装します。   elixir \n\n# apps/my_app/lib/my_app_web/controller/session_controller.ex @doc \"Logged in [POST /login]\" def create(conn, %{\"email\" => email, \"password\" => password}) do case Session.authenticate_user(email, password) do {:ok, user} -> conn |> Session.login(user) |> put_flash(:info, \"Logged in successfully\") |> redirect(to: page_path(conn, :home)) {:error, _reason} -> conn |> put_flash(:error, \"Wrong username/password\") |> render(\"new.html\") end end @doc \"Logged out [DELETE /logout]\" def delete(conn, _params) do conn |> Session.logout() |> put_flash(:info, \"Logged out successfully.\") |> redirect(to: \"/\") end     elixir \n\n# apps/my_app/lib/my_app/auth/session.ex defmodule MyApp.Auth.Session do import Ecto.Query import Plug.Conn import Comeonin.Bcrypt, only: [checkpw: 2, dummy_checkpw: 0] alias MyApp.Repo alias MyApp.Auth.Guardian alias MyApp.Account.User def login(conn, %User{} = user) do conn |> Guardian.Plug.sign_in(user) |> assign(:current_user, user) end def logout(conn), do: Guardian.Plug.sign_out(conn) def authenticate_user(email, given_password) do query = Ecto.Query.from(u in User, where: u.email == ^email) Repo.one(query) |> check_password(given_password) end def current_user(conn), do: Guardian.Plug.current_resource(conn, []) def logged_in?(conn), do: Guardian.Plug.authenticated?(conn, []) defp check_password(nil, _), do: {:error, \"Incorrect username or password\"} defp check_password(user, given_password) do case Comeonin.Bcrypt.checkpw(given_password, user.encrypted_password) do true -> {:ok, user} false -> {:error, \"Incorrect email or password\"} end end end   \n\nDevise/Railsのビューヘルパーはビューマクロで適用します。   elixir \n\n# apps/my_app/lib/my_app_web.ex def view do quote do # .. import Okuribi.Auth.Session, only: [current_user: 1, logged_in?: 1] end end   \n\nあるいは、put_assigns関数をはやしてコントローラマクロに適用します。   elixir \n\n# apps/my_app/lib/my_app/auth/session.ex def put_assigns(%{private: %{phoenix_action: action}} = conn, settings) do current_resource = Guardian.Plug.current_resource(conn) settings = if current_resource, do: settings[:sign_in][action] || [], else: settings[:sign_out][action] || [] conn |> assign(:current_user, current_resource) |> assign(:page_title, settings[:page_title]) |> assign(:page_description, settings[:page_description]) end     elixir \n\n# apps/my_app/lib/my_app_web.ex def controller do quote do # .. import Okuribi.Auth, only: [put_assigns: 2] end end   \n\nassignsひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsのActionView::Helpers::CaptureHelper#provideの代わりに使えます。   elixir \n\n# apps/my_app/lib/my_app_web/controller/*_controller.ex @page %{ sign_in: %{ new: %{ page_title: dgettext(\"views\", \"pages.home.signed_in.page_title\"), page_description: \"\" } }, sign_out: %{ new: %{ page_title: dgettext(\"views\", \"pages.home.signed_out.page_title\"), page_description: \"\" } } } plug(:put_assigns, @page when action in [:home])     > その他その他 \n\nRailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。 \n\n- Rails ActionView::Helpers::FormHelper#form_for(record, options={}, &block) ActionView::Helpers::FormHelper#text_field(object_name, method, options={}) ActionView::Helpers::FormHelper#file_field(object_name, method, options={}) ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={}) ActionView::Helpers::FormHelper#password_field(object_name, method, options={}) ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={}) ActionView::Helpers::FormBuilder#submit(value=nil, options={}) ActionView::Helpers::TranslationHelper#t \n- ActionView::Helpers::FormHelper#form_for(record, options={}, &block)\n- ActionView::Helpers::FormHelper#text_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#file_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#password_field(object_name, method, options={})\n- ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})\n- ActionView::Helpers::FormBuilder#submit(value=nil, options={})\n- ActionView::Helpers::TranslationHelper#t\n- Phoenix Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun) Phoenix.HTML.Form.text_input(form, field, opts \\\\ []) Phoenix.HTML.Form.file_input(form, field, opts \\\\ []) Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ []) Phoenix.HTML.Form.password_input(form, field, opts \\\\ []) Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ []) Phoenix.HTML.Form.submit(opts, opts \\\\ []) Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{}) \n- Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)\n- Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])\n- Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])\n- Phoenix.HTML.Form.submit(opts, opts \\\\ [])\n- Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})   > WRAPUPWRAPUP \n\n前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png"},"wip":false,"body_md":"<img width=\"728\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\">\r\n\r\n連載「Rails2Phoenix」になります、前回は[「UmbrellaプロジェクトをHerokuにデプロイする 」](https://blahfe.esa.io/posts/59)でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。\r\n\r\n\r\n# PROBLEM\r\n- サービスについて\r\n    - 拡張にともない技術スタックがふえるのを抑えたい\r\n    - スケーラビリティのためのコストを抑えたい\r\n    - パフォーマンスをあげたい\r\n\r\n# SOLUTION\r\nというわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。\r\n\r\n**方針**\r\n- Railsから徐々にPhoenixに移行できるように\r\n  - いままでとおなじPaaS（Heroku）\r\n  - いままでとおなじレポジトリ\r\n      - ブランチ戦略は `phoenix/base` をベースに\r\n      - 気軽に参照できるようにRails関連ファイルは可能な限りのこしておく\r\n  - いままでとおなじDB\r\n      - 移行完了までDBマイグレーションをしない\r\n- Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで\r\n\r\n## Guardianを実装する\r\nまず、参考にしたのはBlackodeの[guardian_auth](https://github.com/blackode/guardian_auth)です。ただ、Guardianのバージョンがふるいので[1.0へのマイグレーション記事](https://github.com/ueberauth/guardian/blob/master/upgrade_guides/0.14.to.1.0.md)をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。\r\n\r\nロジック\r\n- MyApp.Account\r\n- MyApp.Account.Registration\r\n- MyApp.Account.User\r\n- MyApp.Auth.Guardian\r\n- MyApp.Auth.ErrorHandler\r\n- MyApp.Auth.Pipeline\r\n- MyApp.Auth.AfterPipeline\r\n- MyApp.Auth.Session\r\n\r\nコントローラ\r\n- MyAppWeb.RegistrationController\r\n- MyAppWeb.SessionController\r\n\r\n### シリアライザとエラーハンドラの設定\r\nGuardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/guardian.ex\r\n\r\ndefmodule MyApp.Auth.Guardian do\r\n  use Guardian, otp_app: :my_app\r\n  alias MyApp.Account\r\n\r\n  def subject_for_token(resource, _claims), do: {:ok, to_string(resource.id)}\r\n  def subject_for_token(_, _), do: {:error, :reason_for_error}\r\n\r\n  def resource_from_claims(claims), do: {:ok, Account.get_user!(claims[\"sub\"])}\r\n  def resource_from_claims(_claims), do: {:error, :reason_for_error}\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/error_handler.ex\r\n\r\ndefmodule MyApp.Auth.ErrorHandler do\r\n  import Plug.Conn\r\n\r\n  def auth_error(conn, {type, _reason}, _opts) do\r\n    body = Poison.encode!(%{message: to_string(type)})\r\n    send_resp(conn, 401, body)\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/config/config.exs\r\n\r\nconfig :my_app, MyApp.Auth.Guardian,\r\n  issuer: \"MyApp\",\r\n  ttl: {30, :days},\r\n  allowed_drift: 2000,\r\n  # optionals\r\n  allowed_algos: [\"HS512\"],\r\n  verify_module: MyApp.Auth.Guardian.JWT,\r\n  verify_issuer: true,\r\n  secret_key:\r\n    System.get_env(\"GUARDIAN_SECRET\") ||\r\n      \"secret_key\"\r\n```\r\n\r\n### ルーターの設定\r\n認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。\r\n\r\nルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート `/` などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/pipeline.ex\r\n\r\ndefmodule MyApp.Auth.Pipeline do\r\n  use Guardian.Plug.Pipeline, otp_app: :my_app\r\n\r\n  plug(Guardian.Plug.VerifySession, claims: %{\"typ\" => \"access\"})\r\n  plug(Guardian.Plug.VerifyHeader, claims: %{\"typ\" => \"access\"})\r\n  plug(Guardian.Plug.LoadResource, allow_blank: true)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/after_pipeline.ex\r\n\r\ndefmodule MyApp.Auth.AfterPipeline do\r\n  use Guardian.Plug.Pipeline, otp_app: :my_app\r\n\r\n  plug(Guardian.Plug.EnsureAuthenticated)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/router.ex\r\n\r\ndefmodule MyAppWeb.Router do\r\n  use MyAppWeb, :router\r\n\r\n  pipeline :browser do\r\n    plug(:accepts, [\"html\"])\r\n    plug(:fetch_session)\r\n    plug(:fetch_flash)\r\n    plug(:protect_from_forgery)\r\n    plug(:put_secure_browser_headers)\r\n  end\r\n\r\n  pipeline :browser_auth do\r\n    plug(MyApp.Auth.Pipeline)\r\n  end\r\n\r\n  pipeline :browser_auth_after do\r\n    plug(MyApp.Auth.AfterPipeline)\r\n  end\r\n\r\n  scope \"/\", MyAppWeb do\r\n    pipe_through([:browser, :browser_auth])\r\n\r\n    post(\"/registration\", RegistrationController, :create)\r\n    get(\"/login\", SessionController, :new)\r\n    post(\"/login\", SessionController, :create)\r\n    get(\"/logout\", SessionController, :delete)\r\n  end\r\n\r\n  scope \"/\", MyAppWeb do\r\n    pipe_through([:browser, :browser_auth, :browser_auth_after])\r\n\r\n    get(\"/edit\", RegistrationController, :edit)\r\n    put(\"/edit\", RegistrationController, :update)\r\n    get(\"/users\", UserController, :index)\r\n    resources \"/\", UserController, only: [:show, :delete], param: \"username\"\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/config/config.exs\r\n\r\nconfig :MyApp, MyApp.Auth.Pipeline,\r\n  module: MyApp.Auth.Guardian,\r\n  error_handler: MyApp.Auth.ErrorHandler\r\n\r\nconfig :MyApp, MyApp.Auth.AferPipeline,\r\n  module: MyApp.Auth.Guardian,\r\n  error_handler: MyApp.Auth.ErrorHandler\r\n```\r\n\r\n### 登録\r\n登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。\r\n\r\nこのあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/registration_controller.ex\r\n\r\ndef create(conn, user_params) do\r\n  changeset = User.registration_changeset(%User{}, user_params)\r\n\r\n  case Registration.create(changeset, Repo) do\r\n    {:ok, user} ->\r\n      conn\r\n      |> MyApp.Auth.login(user)\r\n      |> put_flash(:info, \"Your account was created successfully\")\r\n      |> redirect(to: page_path(conn, :home))\r\n\r\n   {:error, changeset} ->\r\n      conn\r\n      |> put_flash(:error, \"Unable to create account: Try again\")\r\n      |> render(MyAppWeb.PageView, \"home.html\", changeset: changeset)\r\n  end\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/auth.ex\r\n\r\ndef login(conn, %User{} = user) do\r\n  conn\r\n  |> Guardian.Plug.sign_in(user)\r\n  |> assign(:current_user, user)\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/account/registration.ex\r\n\r\ndef create(changeset, repo) do\r\n  changeset\r\n  |> repo.insert()\r\nend\r\n```\r\n\r\n### ログイン・ログアウト\r\nログイン・ログアウトはセッション用のサービスとコントローラで実装します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/session_controller.ex\r\n\r\n@doc \"Logged in [POST /login]\"\r\ndef create(conn, %{\"email\" => email, \"password\" => password}) do\r\n  case Session.authenticate_user(email, password) do\r\n    {:ok, user} ->\r\n      conn\r\n      |> Session.login(user)\r\n      |> put_flash(:info, \"Logged in successfully\")\r\n      |> redirect(to: page_path(conn, :home))\r\n\r\n    {:error, _reason} ->\r\n      conn\r\n      |> put_flash(:error, \"Wrong username/password\")\r\n      |> render(\"new.html\")\r\n  end\r\nend\r\n\r\n@doc \"Logged out [DELETE /logout]\"\r\ndef delete(conn, _params) do\r\n  conn\r\n  |> Session.logout()\r\n  |> put_flash(:info, \"Logged out successfully.\")\r\n  |> redirect(to: \"/\")\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/session.ex\r\n\r\ndefmodule MyApp.Auth.Session do\r\n  import Ecto.Query\r\n  import Plug.Conn\r\n  import Comeonin.Bcrypt, only: [checkpw: 2, dummy_checkpw: 0]\r\n  alias MyApp.Repo\r\n  alias MyApp.Auth.Guardian\r\n  alias MyApp.Account.User\r\n\r\n  def login(conn, %User{} = user) do\r\n    conn\r\n    |> Guardian.Plug.sign_in(user)\r\n    |> assign(:current_user, user)\r\n  end\r\n\r\n  def logout(conn), do: Guardian.Plug.sign_out(conn)\r\n\r\n  def authenticate_user(email, given_password) do\r\n    query = Ecto.Query.from(u in User, where: u.email == ^email)\r\n\r\n    Repo.one(query)\r\n    |> check_password(given_password)\r\n  end\r\n\r\n  def current_user(conn), do: Guardian.Plug.current_resource(conn, [])\r\n\r\n  def logged_in?(conn), do: Guardian.Plug.authenticated?(conn, [])\r\n\r\n  defp check_password(nil, _), do: {:error, \"Incorrect username or password\"}\r\n\r\n  defp check_password(user, given_password) do\r\n    case Comeonin.Bcrypt.checkpw(given_password, user.encrypted_password) do\r\n      true -> {:ok, user}\r\n      false -> {:error, \"Incorrect email or password\"}\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nDevise/Railsのビューヘルパーはビューマクロで適用します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web.ex\r\n\r\ndef view do\r\n  quote do\r\n    # ..\r\n    import Okuribi.Auth.Session, only: [current_user: 1, logged_in?: 1]\r\n  end\r\nend\r\n```\r\n\r\nあるいは、`put_assigns`関数をはやしてコントローラマクロに適用します。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app/auth/session.ex\r\n\r\ndef put_assigns(%{private: %{phoenix_action: action}} = conn, settings) do\r\n  current_resource = Guardian.Plug.current_resource(conn)\r\n\r\n  settings =\r\n    if current_resource,\r\n      do: settings[:sign_in][action] || [],\r\n      else: settings[:sign_out][action] || []\r\n\r\n  conn\r\n  |> assign(:current_user, current_resource)\r\n  |> assign(:page_title, settings[:page_title])\r\n  |> assign(:page_description, settings[:page_description])\r\nend\r\n```\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web.ex\r\n\r\ndef controller do\r\n  quote do\r\n    # ..\r\n    import Okuribi.Auth, only: [put_assigns: 2]\r\n  end\r\nend\r\n```\r\n\r\n`assigns`ひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsの`ActionView::Helpers::CaptureHelper#provide`の代わりに使えます。\r\n\r\n```elixir\r\n# apps/my_app/lib/my_app_web/controller/*_controller.ex\r\n\r\n@page %{\r\n  sign_in: %{\r\n    new: %{\r\n      page_title: dgettext(\"views\", \"pages.home.signed_in.page_title\"),\r\n      page_description: \"\"\r\n    }\r\n  },\r\n  sign_out: %{\r\n    new: %{\r\n      page_title: dgettext(\"views\", \"pages.home.signed_out.page_title\"),\r\n      page_description: \"\"\r\n    }\r\n  }\r\n}\r\nplug(:put_assigns, @page when action in [:home])\r\n```\r\n\r\n## その他\r\nRailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。\r\n\r\n- Rails\r\n    - `ActionView::Helpers::FormHelper#form_for(record, options={}, &block)`\r\n    - `ActionView::Helpers::FormHelper#text_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#file_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#password_field(object_name, method, options={})`\r\n    - `ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})`\r\n    - `ActionView::Helpers::FormBuilder#submit(value=nil, options={})`\r\n    - `ActionView::Helpers::TranslationHelper#t`\r\n- Phoenix\r\n    - `Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)`\r\n    - `Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])`\r\n    - `Phoenix.HTML.Form.submit(opts, opts \\\\ [])`\r\n    - `Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})`\r\n\r\n# WRAPUP\r\n前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。","body_html":"<a href=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"728\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2021/01/11/97367/d19fe4dc-962c-4e58-b8e5-c1787fd566ed.png\"></a>\n<p data-sourcepos=\"3:1-3:257\">連載「Rails2Phoenix」になります、前回は<a href=\"https://blahfe.esa.io/posts/59\">「UmbrellaプロジェクトをHerokuにデプロイする 」</a>でした。今回は前回課題としてあがった認証機能の実装を試みたいと思います。</p>\n<h1 data-sourcepos=\"6:1-6:9\" id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"7:1-11:0\">\n<li data-sourcepos=\"7:1-11:0\">サービスについて\n<ul data-sourcepos=\"8:5-11:0\">\n<li data-sourcepos=\"8:5-8:75\">拡張にともない技術スタックがふえるのを抑えたい</li>\n<li data-sourcepos=\"9:5-9:66\">スケーラビリティのためのコストを抑えたい</li>\n<li data-sourcepos=\"10:5-11:0\">パフォーマンスをあげたい</li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"12:1-12:10\" id=\"2-0-0\" name=\"2-0-0\">\n<a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"13:1-13:220\">というわけで、現在つかっているRailsをPhoenixに変更することにしました。方針は以下の通りで、今回はRails/Deviseの認証機能をPhoenixで実装する流れを取り上げます。</p>\n<p data-sourcepos=\"15:1-15:10\"><strong>方針</strong></p>\n<ul data-sourcepos=\"16:1-24:0\">\n<li data-sourcepos=\"16:1-22:64\">Railsから徐々にPhoenixに移行できるように\n<ul data-sourcepos=\"17:3-22:64\">\n<li data-sourcepos=\"17:3-17:44\">いままでとおなじPaaS（Heroku）</li>\n<li data-sourcepos=\"18:3-20:100\">いままでとおなじレポジトリ\n<ul data-sourcepos=\"19:7-20:100\">\n<li data-sourcepos=\"19:7-19:60\">ブランチ戦略は <code>phoenix/base</code> をベースに</li>\n<li data-sourcepos=\"20:7-20:100\">気軽に参照できるようにRails関連ファイルは可能な限りのこしておく</li>\n</ul>\n</li>\n<li data-sourcepos=\"21:3-22:64\">いままでとおなじDB\n<ul data-sourcepos=\"22:7-22:64\">\n<li data-sourcepos=\"22:7-22:64\">移行完了までDBマイグレーションをしない</li>\n</ul>\n</li>\n</ul>\n</li>\n<li data-sourcepos=\"23:1-24:0\">Phoenixは今後の拡張性をかんがえてUmbrellaプロジェクトで</li>\n</ul>\n<h2 data-sourcepos=\"25:1-25:26\" id=\"2-1-0\" name=\"2-1-0\">\n<a class=\"anchor\" id=\"Guardianを実装する\" name=\"Guardian%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" href=\"#Guardian%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Guardianを実装する\"> &gt; Guardianを実装する</span></a>Guardianを実装する</h2>\n<p data-sourcepos=\"26:1-26:382\">まず、参考にしたのはBlackodeの<a href=\"https://github.com/blackode/guardian_auth\" target=\"_blank\" rel=\"noopener noreferrer\">guardian_auth</a>です。ただ、Guardianのバージョンがふるいので<a href=\"https://github.com/ueberauth/guardian/blob/master/upgrade_guides/0.14.to.1.0.md\" target=\"_blank\" rel=\"noopener noreferrer\">1.0へのマイグレーション記事</a>をもとにアレンジしてあります。認証に関係しそうな構成は下記の通り。</p>\n<p data-sourcepos=\"28:1-28:12\">ロジック</p>\n<ul data-sourcepos=\"29:1-37:0\">\n<li data-sourcepos=\"29:1-29:15\">MyApp.Account</li>\n<li data-sourcepos=\"30:1-30:28\">MyApp.Account.Registration</li>\n<li data-sourcepos=\"31:1-31:20\">MyApp.Account.User</li>\n<li data-sourcepos=\"32:1-32:21\">MyApp.Auth.Guardian</li>\n<li data-sourcepos=\"33:1-33:25\">MyApp.Auth.ErrorHandler</li>\n<li data-sourcepos=\"34:1-34:21\">MyApp.Auth.Pipeline</li>\n<li data-sourcepos=\"35:1-35:26\">MyApp.Auth.AfterPipeline</li>\n<li data-sourcepos=\"36:1-37:0\">MyApp.Auth.Session</li>\n</ul>\n<p data-sourcepos=\"38:1-38:18\">コントローラ</p>\n<ul data-sourcepos=\"39:1-41:0\">\n<li data-sourcepos=\"39:1-39:33\">MyAppWeb.RegistrationController</li>\n<li data-sourcepos=\"40:1-41:0\">MyAppWeb.SessionController</li>\n</ul>\n<h3 data-sourcepos=\"42:1-42:55\" id=\"2-1-1\" name=\"2-1-1\">\n<a class=\"anchor\" id=\"シリアライザとエラーハンドラの設定\" name=\"%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%B6%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%81%AE%E8%A8%AD%E5%AE%9A\" href=\"#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%B6%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%81%AE%E8%A8%AD%E5%AE%9A\" data-position=\"2-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"シリアライザとエラーハンドラの設定\"> &gt; シリアライザとエラーハンドラの設定</span></a>シリアライザとエラーハンドラの設定</h3>\n<p data-sourcepos=\"43:1-43:191\">Guardian1.0から直接ではなくモジュールを介して参照するようになりました。下記のように各モジュールを用意してコンフィグに割り当てます。</p>\n<div class=\"code-block\" data-sourcepos=\"45:1-58:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/guardian.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Account</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">subject_for_token</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">_claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">to_string</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)}</span>\n  <span class=\"k\">def</span> <span class=\"n\">subject_for_token</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"ss\">:reason_for_error</span><span class=\"p\">}</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">resource_from_claims</span><span class=\"p\">(</span><span class=\"n\">claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"no\">Account</span><span class=\"o\">.</span><span class=\"n\">get_user!</span><span class=\"p\">(</span><span class=\"n\">claims</span><span class=\"p\">[</span><span class=\"s2\">\"sub\"</span><span class=\"p\">])}</span>\n  <span class=\"k\">def</span> <span class=\"n\">resource_from_claims</span><span class=\"p\">(</span><span class=\"n\">_claims</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"ss\">:reason_for_error</span><span class=\"p\">}</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"60:1-71:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/error_handler.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span> <span class=\"k\">do</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Conn</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">auth_error</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">_reason</span><span class=\"p\">},</span> <span class=\"n\">_opts</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"no\">Poison</span><span class=\"o\">.</span><span class=\"n\">encode!</span><span class=\"p\">(%{</span><span class=\"ss\">message:</span> <span class=\"n\">to_string</span><span class=\"p\">(</span><span class=\"n\">type</span><span class=\"p\">)})</span>\n    <span class=\"n\">send_resp</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"73:1-87:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/config/config.exs</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:my_app</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">issuer:</span> <span class=\"s2\">\"MyApp\"</span><span class=\"p\">,</span>\n  <span class=\"ss\">ttl:</span> <span class=\"p\">{</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"ss\">:days</span><span class=\"p\">},</span>\n  <span class=\"ss\">allowed_drift:</span> <span class=\"mi\">2000</span><span class=\"p\">,</span>\n  <span class=\"c1\"># optionals</span>\n  <span class=\"ss\">allowed_algos:</span> <span class=\"p\">[</span><span class=\"s2\">\"HS512\"</span><span class=\"p\">],</span>\n  <span class=\"ss\">verify_module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">JWT</span><span class=\"p\">,</span>\n  <span class=\"ss\">verify_issuer:</span> <span class=\"no\">true</span><span class=\"p\">,</span>\n  <span class=\"ss\">secret_key:</span>\n    <span class=\"no\">System</span><span class=\"o\">.</span><span class=\"n\">get_env</span><span class=\"p\">(</span><span class=\"s2\">\"GUARDIAN_SECRET\"</span><span class=\"p\">)</span> <span class=\"o\">||</span>\n      <span class=\"s2\">\"secret_key\"</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"89:1-89:25\" id=\"2-1-2\" name=\"2-1-2\">\n<a class=\"anchor\" id=\"ルーターの設定\" name=\"%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A\" href=\"#%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AE%E8%A8%AD%E5%AE%9A\" data-position=\"2-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ルーターの設定\"> &gt; ルーターの設定</span></a>ルーターの設定</h3>\n<p data-sourcepos=\"90:1-90:129\">認証のパイプラインは、認証中と認証後のものを用意しコンフィグとルーターに割り当てます。</p>\n<p data-sourcepos=\"92:1-92:614\">ルータースコープ内のパイプラインくみあわせについて、ここでは未ログインスコープには認証前・認証中パイプライン、ログイン済スコープには認証前・認証中・認証後パイプラインを適用しています。こうすることでどのスコープにも認証リソースをロードすることができ、かつ、認証も担保することができるようになります。具体的にいうと、ルート <code>/</code> などの同一URLで未ログインスコープとログイン済スコープの切り替えができるようになります。</p>\n<div class=\"code-block\" data-sourcepos=\"94:1-104:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/pipeline.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">VerifySession</span><span class=\"p\">,</span> <span class=\"ss\">claims:</span> <span class=\"p\">%{</span><span class=\"s2\">\"typ\"</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"access\"</span><span class=\"p\">})</span>\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">VerifyHeader</span><span class=\"p\">,</span> <span class=\"ss\">claims:</span> <span class=\"p\">%{</span><span class=\"s2\">\"typ\"</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"access\"</span><span class=\"p\">})</span>\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">LoadResource</span><span class=\"p\">,</span> <span class=\"ss\">allow_blank:</span> <span class=\"no\">true</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"106:1-114:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/after_pipeline.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AfterPipeline</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span> <span class=\"ss\">otp_app:</span> <span class=\"ss\">:my_app</span>\n\n  <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">EnsureAuthenticated</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"116:1-156:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/router.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyAppWeb</span><span class=\"o\">.</span><span class=\"no\">Router</span> <span class=\"k\">do</span>\n  <span class=\"kn\">use</span> <span class=\"no\">MyAppWeb</span><span class=\"p\">,</span> <span class=\"ss\">:router</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:accepts</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"html\"</span><span class=\"p\">])</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:fetch_session</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:fetch_flash</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:protect_from_forgery</span><span class=\"p\">)</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:put_secure_browser_headers</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser_auth</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">pipeline</span> <span class=\"ss\">:browser_auth_after</span> <span class=\"k\">do</span>\n    <span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AfterPipeline</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">scope</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">MyAppWeb</span> <span class=\"k\">do</span>\n    <span class=\"n\">pipe_through</span><span class=\"p\">([</span><span class=\"ss\">:browser</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth</span><span class=\"p\">])</span>\n\n    <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"/registration\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:create</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:new</span><span class=\"p\">)</span>\n    <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:create</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/logout\"</span><span class=\"p\">,</span> <span class=\"no\">SessionController</span><span class=\"p\">,</span> <span class=\"ss\">:delete</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">scope</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">MyAppWeb</span> <span class=\"k\">do</span>\n    <span class=\"n\">pipe_through</span><span class=\"p\">([</span><span class=\"ss\">:browser</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth</span><span class=\"p\">,</span> <span class=\"ss\">:browser_auth_after</span><span class=\"p\">])</span>\n\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/edit\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:edit</span><span class=\"p\">)</span>\n    <span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"/edit\"</span><span class=\"p\">,</span> <span class=\"no\">RegistrationController</span><span class=\"p\">,</span> <span class=\"ss\">:update</span><span class=\"p\">)</span>\n    <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/users\"</span><span class=\"p\">,</span> <span class=\"no\">UserController</span><span class=\"p\">,</span> <span class=\"ss\">:index</span><span class=\"p\">)</span>\n    <span class=\"n\">resources</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"no\">UserController</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">:show</span><span class=\"p\">,</span> <span class=\"ss\">:delete</span><span class=\"p\">],</span> <span class=\"ss\">param:</span> <span class=\"s2\">\"username\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"158:1-168:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/config/config.exs</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:MyApp</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Pipeline</span><span class=\"p\">,</span>\n  <span class=\"ss\">module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">error_handler:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span>\n\n<span class=\"n\">config</span> <span class=\"ss\">:MyApp</span><span class=\"p\">,</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">AferPipeline</span><span class=\"p\">,</span>\n  <span class=\"ss\">module:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span><span class=\"p\">,</span>\n  <span class=\"ss\">error_handler:</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"170:1-170:10\" id=\"2-1-3\" name=\"2-1-3\">\n<a class=\"anchor\" id=\"登録\" name=\"%E7%99%BB%E9%8C%B2\" href=\"#%E7%99%BB%E9%8C%B2\" data-position=\"2-1-3\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"登録\"> &gt; 登録</span></a>登録</h3>\n<p data-sourcepos=\"171:1-171:123\">登録は登録用のロジック（ユーザーモデルと登録サービス）とコントローラを用意します。</p>\n<p data-sourcepos=\"173:1-173:207\">このあたりはDevise/Railsとあまり変わりません。他のアクション「新規パスワード発行」「メールアドレス確認」等も同様の構成をとろうと思っています。</p>\n<div class=\"code-block\" data-sourcepos=\"175:1-194:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/registration_controller.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">user_params</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">changeset</span> <span class=\"o\">=</span> <span class=\"no\">User</span><span class=\"o\">.</span><span class=\"n\">registration_changeset</span><span class=\"p\">(%</span><span class=\"no\">User</span><span class=\"p\">{},</span> <span class=\"n\">user_params</span><span class=\"p\">)</span>\n\n  <span class=\"k\">case</span> <span class=\"no\">Registration</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">changeset</span><span class=\"p\">,</span> <span class=\"no\">Repo</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Your account was created successfully\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"n\">page_path</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"ss\">:home</span><span class=\"p\">))</span>\n\n   <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"n\">changeset</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Unable to create account: Try again\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"no\">MyAppWeb</span><span class=\"o\">.</span><span class=\"no\">PageView</span><span class=\"p\">,</span> <span class=\"s2\">\"home.html\"</span><span class=\"p\">,</span> <span class=\"ss\">changeset:</span> <span class=\"n\">changeset</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"196:1-204:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/auth.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%</span><span class=\"no\">User</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_in</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"206:1-213:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/account/registration.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">changeset</span><span class=\"p\">,</span> <span class=\"n\">repo</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">changeset</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">()</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<h3 data-sourcepos=\"215:1-215:34\" id=\"2-1-4\" name=\"2-1-4\">\n<a class=\"anchor\" id=\"ログイン・ログアウト\" name=\"%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%83%BB%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88\" href=\"#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%83%BB%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88\" data-position=\"2-1-4\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ログイン・ログアウト\"> &gt; ログイン・ログアウト</span></a>ログイン・ログアウト</h3>\n<p data-sourcepos=\"216:1-216:108\">ログイン・ログアウトはセッション用のサービスとコントローラで実装します。</p>\n<div class=\"code-block\" data-sourcepos=\"218:1-244:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/session_controller.ex</span>\n\n<span class=\"nv\">@doc</span> <span class=\"s2\">\"Logged in [POST /login]\"</span>\n<span class=\"k\">def</span> <span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%{</span><span class=\"s2\">\"email\"</span> <span class=\"o\">=&gt;</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span> <span class=\"o\">=&gt;</span> <span class=\"n\">password</span><span class=\"p\">})</span> <span class=\"k\">do</span>\n  <span class=\"k\">case</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">authenticate_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Logged in successfully\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"n\">page_path</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"ss\">:home</span><span class=\"p\">))</span>\n\n    <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"n\">_reason</span><span class=\"p\">}</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">conn</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Wrong username/password\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|&gt;</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s2\">\"new.html\"</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"nv\">@doc</span> <span class=\"s2\">\"Logged out [DELETE /logout]\"</span>\n<span class=\"k\">def</span> <span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">_params</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"no\">Session</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">put_flash</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">,</span> <span class=\"s2\">\"Logged out successfully.\"</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"ss\">to:</span> <span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"246:1-285:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/session.ex</span>\n\n<span class=\"k\">defmodule</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Session</span> <span class=\"k\">do</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Ecto</span><span class=\"o\">.</span><span class=\"no\">Query</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">Conn</span>\n  <span class=\"kn\">import</span> <span class=\"no\">Comeonin</span><span class=\"o\">.</span><span class=\"no\">Bcrypt</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">checkpw:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"ss\">dummy_checkpw:</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Repo</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Guardian</span>\n  <span class=\"n\">alias</span> <span class=\"no\">MyApp</span><span class=\"o\">.</span><span class=\"no\">Account</span><span class=\"o\">.</span><span class=\"no\">User</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">%</span><span class=\"no\">User</span><span class=\"p\">{}</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">conn</span>\n    <span class=\"o\">|&gt;</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_in</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">sign_out</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">authenticate_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">given_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"no\">Ecto</span><span class=\"o\">.</span><span class=\"no\">Query</span><span class=\"o\">.</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">u</span> <span class=\"ow\">in</span> <span class=\"no\">User</span><span class=\"p\">,</span> <span class=\"ss\">where:</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">==</span> <span class=\"o\">^</span><span class=\"n\">email</span><span class=\"p\">)</span>\n\n    <span class=\"no\">Repo</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n    <span class=\"o\">|&gt;</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"n\">given_password</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">current_user</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">current_resource</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">logged_in?</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">authenticated?</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n  <span class=\"k\">defp</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"no\">nil</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">),</span> <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Incorrect username or password\"</span><span class=\"p\">}</span>\n\n  <span class=\"k\">defp</span> <span class=\"n\">check_password</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">given_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"k\">case</span> <span class=\"no\">Comeonin</span><span class=\"o\">.</span><span class=\"no\">Bcrypt</span><span class=\"o\">.</span><span class=\"n\">checkpw</span><span class=\"p\">(</span><span class=\"n\">given_password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">encrypted_password</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n      <span class=\"no\">true</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"ss\">:ok</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">}</span>\n      <span class=\"no\">false</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"ss\">:error</span><span class=\"p\">,</span> <span class=\"s2\">\"Incorrect email or password\"</span><span class=\"p\">}</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"287:1-287:78\">Devise/Railsのビューヘルパーはビューマクロで適用します。</p>\n<div class=\"code-block\" data-sourcepos=\"289:1-298:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">view</span> <span class=\"k\">do</span>\n  <span class=\"kn\">quote</span> <span class=\"k\">do</span>\n    <span class=\"c1\"># ..</span>\n    <span class=\"kn\">import</span> <span class=\"no\">Okuribi</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"o\">.</span><span class=\"no\">Session</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">current_user:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">logged_in?:</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"300:1-300:97\">あるいは、<code>put_assigns</code>関数をはやしてコントローラマクロに適用します。</p>\n<div class=\"code-block\" data-sourcepos=\"302:1-318:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app/auth/session.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">put_assigns</span><span class=\"p\">(%{</span><span class=\"ss\">private:</span> <span class=\"p\">%{</span><span class=\"ss\">phoenix_action:</span> <span class=\"n\">action</span><span class=\"p\">}}</span> <span class=\"o\">=</span> <span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">current_resource</span> <span class=\"o\">=</span> <span class=\"no\">Guardian</span><span class=\"o\">.</span><span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"n\">current_resource</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">)</span>\n\n  <span class=\"n\">settings</span> <span class=\"o\">=</span>\n    <span class=\"k\">if</span> <span class=\"n\">current_resource</span><span class=\"p\">,</span>\n      <span class=\"k\">do</span><span class=\"p\">:</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:sign_in</span><span class=\"p\">][</span><span class=\"n\">action</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"p\">[],</span>\n      <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:sign_out</span><span class=\"p\">][</span><span class=\"n\">action</span><span class=\"p\">]</span> <span class=\"o\">||</span> <span class=\"p\">[]</span>\n\n  <span class=\"n\">conn</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:current_user</span><span class=\"p\">,</span> <span class=\"n\">current_resource</span><span class=\"p\">)</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:page_title</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:page_title</span><span class=\"p\">])</span>\n  <span class=\"o\">|&gt;</span> <span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"ss\">:page_description</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"ss\">:page_description</span><span class=\"p\">])</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<div class=\"code-block\" data-sourcepos=\"320:1-329:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web.ex</span>\n\n<span class=\"k\">def</span> <span class=\"n\">controller</span> <span class=\"k\">do</span>\n  <span class=\"kn\">quote</span> <span class=\"k\">do</span>\n    <span class=\"c1\"># ..</span>\n    <span class=\"kn\">import</span> <span class=\"no\">Okuribi</span><span class=\"o\">.</span><span class=\"no\">Auth</span><span class=\"p\">,</span> <span class=\"ss\">only:</span> <span class=\"p\">[</span><span class=\"ss\">put_assigns:</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n</div>\n<p data-sourcepos=\"331:1-331:205\"><code>assigns</code>ひとつでアクセスできるので、下記のようにコントローラでまとめて指定することでRailsの<code>ActionView::Helpers::CaptureHelper#provide</code>の代わりに使えます。</p>\n<div class=\"code-block\" data-sourcepos=\"333:1-351:3\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>elixir</div>\n<div class=\"highlight\"><pre class=\"highlight elixir\"><code><span class=\"c1\"># apps/my_app/lib/my_app_web/controller/*_controller.ex</span>\n\n<span class=\"nv\">@page</span> <span class=\"p\">%{</span>\n  <span class=\"ss\">sign_in:</span> <span class=\"p\">%{</span>\n    <span class=\"ss\">new:</span> <span class=\"p\">%{</span>\n      <span class=\"ss\">page_title:</span> <span class=\"n\">dgettext</span><span class=\"p\">(</span><span class=\"s2\">\"views\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pages.home.signed_in.page_title\"</span><span class=\"p\">),</span>\n      <span class=\"ss\">page_description:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n  <span class=\"ss\">sign_out:</span> <span class=\"p\">%{</span>\n    <span class=\"ss\">new:</span> <span class=\"p\">%{</span>\n      <span class=\"ss\">page_title:</span> <span class=\"n\">dgettext</span><span class=\"p\">(</span><span class=\"s2\">\"views\"</span><span class=\"p\">,</span> <span class=\"s2\">\"pages.home.signed_out.page_title\"</span><span class=\"p\">),</span>\n      <span class=\"ss\">page_description:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">plug</span><span class=\"p\">(</span><span class=\"ss\">:put_assigns</span><span class=\"p\">,</span> <span class=\"nv\">@page</span> <span class=\"ow\">when</span> <span class=\"n\">action</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"ss\">:home</span><span class=\"p\">])</span>\n</code></pre></div>\n</div>\n<h2 data-sourcepos=\"353:1-353:12\" id=\"2-2-0\" name=\"2-2-0\">\n<a class=\"anchor\" id=\"その他\" name=\"%E3%81%9D%E3%81%AE%E4%BB%96\" href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"その他\"> &gt; その他</span></a>その他</h2>\n<p data-sourcepos=\"354:1-354:120\">RailsのビューをPhoenixのテンプレートに移植するには下記の変換を地道に行っていきます。</p>\n<ul data-sourcepos=\"356:1-374:0\">\n<li data-sourcepos=\"356:1-364:48\">Rails\n<ul data-sourcepos=\"357:5-364:48\">\n<li data-sourcepos=\"357:5-357:76\"><code>ActionView::Helpers::FormHelper#form_for(record, options={}, &amp;block)</code></li>\n<li data-sourcepos=\"358:5-358:83\"><code>ActionView::Helpers::FormHelper#text_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"359:5-359:83\"><code>ActionView::Helpers::FormHelper#file_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"360:5-360:85\"><code>ActionView::Helpers::FormHelper#hidden_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"361:5-361:87\"><code>ActionView::Helpers::FormHelper#password_field(object_name, method, options={})</code></li>\n<li data-sourcepos=\"362:5-362:96\"><code>ActionView::Helpers::FormHelper#radio_button(object_name, method, tag_value, options={})</code></li>\n<li data-sourcepos=\"363:5-363:70\"><code>ActionView::Helpers::FormBuilder#submit(value=nil, options={})</code></li>\n<li data-sourcepos=\"364:5-364:48\"><code>ActionView::Helpers::TranslationHelper#t</code></li>\n</ul>\n</li>\n<li data-sourcepos=\"365:1-374:0\">Phoenix\n<ul data-sourcepos=\"366:5-374:0\">\n<li data-sourcepos=\"366:5-366:73\"><code>Phoenix.HTML.Form.form_for(form_data, action, options \\\\ [], fun)</code></li>\n<li data-sourcepos=\"367:5-367:61\"><code>Phoenix.HTML.Form.text_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"368:5-368:61\"><code>Phoenix.HTML.Form.file_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"369:5-369:63\"><code>Phoenix.HTML.Form.hidden_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"370:5-370:65\"><code>Phoenix.HTML.Form.password_input(form, field, opts \\\\ [])</code></li>\n<li data-sourcepos=\"371:5-371:70\"><code>Phoenix.HTML.Form.radio_button(form, field, value, opts \\\\ [])</code></li>\n<li data-sourcepos=\"372:5-372:50\"><code>Phoenix.HTML.Form.submit(opts, opts \\\\ [])</code></li>\n<li data-sourcepos=\"373:5-374:0\"><code>Gettext.dgettext(backend, domain, msgid, bindings \\\\ %{})</code></li>\n</ul>\n</li>\n</ul>\n<h1 data-sourcepos=\"375:1-375:8\" id=\"3-0-0\" name=\"3-0-0\">\n<a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"376:1-376:177\">前回もそうですが、コードのマイグレーションはまあ地味な作業ですよね。とまれ、認証機能を実装できたので良しとしましょう。</p>\n","tags":["phoenix-framework","elixir","ruby-on-rails","ruby","wercker","heroku","authentication","guardian"],"updated_at":"2021-01-16T23:37:33+09:00","childPublishedDate":{"published_on":"2018-05-20T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_7b757a0db07cde6a337af7df901ab0c5.jpg"}},"relatedPosts":{"edges":[{"node":{"number":137,"relative_category":"blog/backend","fields":{"title":"G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","excerpt":"今回は10年以上利用していたG Suite無償版が2022年8月に停止されるとのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。   > PROBLEMPROBLEM \n\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう  > SOLUTIONSOLUTION \n\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。 \n\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。  > 構成構成  > beforebefore \n\n- ドメイン管理 バリュードメイン\n- NSレコード Cloudflare DNS\n- MXレコード G Suite\n- SMTP G Suite  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > 手順手順 \n\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。  > 1. ドメイン管理を整理する1. ドメイン管理を整理する \n\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。 \n\n1. 移管元にてWHOIS情報公開代行の解除\n2. 移管元にてドメインロックの解除\n3. 移管元にて認証鍵 (Auth-Code) を確認\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\n7. 移管元のNSレコードを移管先に変更\n8. 移管先にて認証鍵をつかい移管申請を行う\n9. 移管元に対して移管申請を行った旨をメールにて連携する \n\nCf. \n\n- ドメインの他社への移管 | バリュードメイン ユーザーガイド\n- ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53\n- Easily creating and routing email addresses with Cloudflare Email Routing  > 2. SMTPを設定する2. SMTPを設定する \n\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。 txt\n\n# メールタイプ 通例の取引がメインとなる予定です # ユースケース ## メールを送信する頻度 週に1-2回 ## 受信者リストのメンテナンス方法 四半期に一度の棚卸し ## バウンス対応 当該メールアドレスの削除 ## 申し立て対応 当該メールアドレスへのフラグ管理 ## 解除申請の管理方法 メールでの受付 ## 送信予定のメールサンプル {{宛先名}}様 お世話になっております。 表題の件につきまして1点問い合わせします。 {{問い合わせ内容}} ご不明な点等ございましたらお気軽にお問い合わせ下さい。 どうぞ、よろしくお願い致します。   > 3. G Suiteを退会する3. G Suiteを退会する \n\nG Suiteに依存しているサービスがないか確認し、退会します。  > WRAPUPWRAPUP \n\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。  > 後日談後日談 \n\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。 \n\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。  > beforebefore \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Amazon WorkMail\n- SMTP Amazon WorkMail"},"name":"[2022-04-12]G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","tags":["gsuite","google-workspace","cloudflare","amazon-ses","amazon-workmail"],"childPublishedDate":{"published_on":"2022-04-12T00:00:00.000Z","published_on_unix":1649721600}}},{"node":{"number":140,"relative_category":"blog/backend","fields":{"title":"提供していない決済方法を業務で取り扱う際に気をつけること","excerpt":"ECプロダクトを扱っていると、銀行振込という決済方法には欠かせないものとなります。しかしながら、特定のターゲット層を除いて、高いコストがかかる銀行振込は通常は裏メニューとして実装されることが多いでしょう。今回は、このケースにおける課題と解決策について詳しくご説明いたします。事前に対策を講じておくことで、業務の硬直化やスケーリングへの影響を最小限に抑えることができるでしょう。   > PROBLEMPROBLEM \n\n銀行振込のみを通常の決済方法として提供している場合には、以下のような問題が生じることがあります。 \n\n1. 人力でトランザクションを処理する必要があるため、予期せぬ支払いや二重決済が発生する可能性があります。\n2. 不整合処理に関わるCS担当者に権限が集中してしまい、運用上の制約が生じることがあります。  > 通常のケース通常のケース \n\n \n\n「ユーザ」：もしも銀行振込に変更したいんだけど、できる？\n 「CS」：（管理画面を通じて）了解しました。銀行振込を設定しますね。  > 不整合が起きるケース「銀行振込と通常決済が同時に実行」不整合が起きるケース「銀行振込と通常決済が同時に実行」 \n\n \n\n「ユーザ」：（問い合わせをする）銀行振込に変更したいです。\n 「CS」：（了承を得て）もちろん、銀行振込をお使いいただけますよ。 \n\n（ユーザが「銀行振込」を選択し、一方で「通常決済」も行われるシーン） \n\n「ユーザ」：（アプリを通じて）支払い完了！\n 「CS」：（困惑した表情で）えっ、銀行振込を選択してくれたはずなのに、通常決済も同時に行われている…？何が起きているのか調べないと。  > SOLUTIONSOLUTION \n\n銀行振込の不整合を防ぐために、システム側に決済ロックを実装することが重要です。ただし、振込確認を人力で行っている場合には、銀行振込を表側に出すのは難しいかもしれません。そこで、問い合わせタイミングでロックできるよう、問い合わせ窓口を工夫する必要があるでしょう。プロダクトのUXにも関わる重要な課題ですが、根気よく取り組んでいくことが必要です。 \n\n \n\n「ユーザ」：（問い合わせをする）銀行振込に変更したいです。\n 「プロダクトアプリ」：（問い合わせを受け取りつつ）わかりました。銀行振込をロックしますね。 \n\n「CS」：（ユーザへ案内しながら）銀行振込の方法についてご案内いたします。  > WRAPUPWRAPUP \n\nECプロダクトが成長し、決済方法が増えてくると業務処理が複雑化してきます。特に決済の適正性には細心の注意が必要であり、トランザクションの量に応じてリスクアセスメントを行い、適切な対応策を講じていくことが大切です。これにより、業務のスムーズな運営と顧客満足度の向上につなげることができるでしょう。"},"name":"[2022-05-02]提供していない決済方法を業務で取り扱う際に気をつけること","tags":["payment-service"],"childPublishedDate":{"published_on":"2022-05-02T00:00:00.000Z","published_on_unix":1651449600}}},{"node":{"number":139,"relative_category":"blog/backend","fields":{"title":"ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","excerpt":"ヘルステックでエンジニアをしている方々は、データの扱いに対して常に苦労しています。CISOが設計したデータセグメンテーションがどのような意図で成り立っているのか、整理されていない状況では理解に時間を要することもあります。新しい現場に入ったばかりのエンジニアとしては、保守的なアプローチを取り、緩めな方針よりも後々のトラブルを避けるために慎重に設計していくことが安全です。   > PROBLEMPROBLEM \n\n私たちが抱える問題は、要配慮個人情報に関するものであり、厚生労働省の医政局が発行した「医療情報システムの安全管理に関するガイドライン」1には「 医療・健康情報を[...]医師等以外の者が分析等を実施することは許されるものではない 」と明記されています。ここでの「 医療・健康情報 」とは具体的に何を指すのかが分かりづらく、また、「 医師等 」の「 等 」が何を指すのかも明確ではありません。厚生労働省医政局の発令0912001号「診療情報の提供等に関する指針」2を参考にすると、「 医療・健康情報 」は診療録を指し、「 医師等 」は医療系有資格者を指していると推察されます。医療系有資格者については、個人情報保護法に関連する「医療・介護分野用医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されており、守秘義務の対象となっています。 \n\nさらに、データアクセスを緩めると、教育が不十分な者が故意に情報を漏洩させ、刑法上の秘密漏示罪3に問われる可能性があります。秘密漏示罪は身分犯でありながらも解釈の余地があり、範囲が不透明な法律となっています。  > SOLUTIONSOLUTION \n\n解決策として、ヘルステックに関わる個人情報の取り扱いを整理してみました。 \n\n上記の問題は、時代の流れに伴い医療情報の整備が進んでいる状況です。善管注意の責務を負ったエンジニアとしては、医療系有資格者以外への診療録の情報提供は、例えば同僚であっても、連結可能な匿名（仮名加工）ではなく匿名加工で対応すべきでしょう。ゆくゆくは会社として次世代医療基盤法4を適用し、医療分野の研究開発に資するよう体制を構築することが望ましいと考えています。  > 加工なし加工なし \n\n学術研究等を除いては第三者への提供には本人の同意が必要となり、利用できる範囲が限られています。個々の個人情報の種類によってアクセスできる人が異なります。また、守秘義務が課せられる範囲も広く、行為によっては秘密漏示罪や不正アクセス禁止法5の罰則の対象になることもあります。     診療録 診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 (医療関連有資格者) 社内 社内, 社外   利用目的の必要性 (公表有無) 必要 必要 必要   利用目的の必要性 (変更可否) 関連性を有する合理的な範囲 関連性を有する合理的な範囲 関連性を有する合理的な範囲   目的外利用 不可 不可 不可   第三者提供 (可否) 可 可 可   第三者提供 (本人同意) 必要 (オプトインのみ) 必要 (オプトインのみ) 必要 (オプトアウト)   個人の開示請求 応じる 応じる 応じる   漏洩時の報告 必須 必須 必須     > 仮名加工仮名加工 \n\n診療録に関する規定は次世代医療基盤法で明確にまとめられているため、あえて規定が曖昧な仮名加工（連結可能匿名）を使用することは望ましくありません。ユースケースとしては、要配慮個人情報を除いた個人情報の統計分析に限定されるでしょう。     診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 社内   利用目的の必要性 (公表有無) 必要 必要   利用目的の必要性 (変更可否) 際限なく変更可能 際限なく変更可能   目的外利用 不可 不可   第三者提供 (可否) 不可 不可   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > 匿名加工匿名加工 \n\n診療録は本人のオプトアウトが可能ですが、基本的に本人の同意なしで利用可能です。ただし、診療録は可変長文字列であり、特異な記述として最も慎重に扱う必要があります。データマスキングの実装は十分に行っていく必要があります。     診療録を含んだ要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内, 社外 社内, 社外   利用目的の必要性 (公表有無) 不要 不要   第三者提供 (可否) 可 可   第三者提供 (本人同意) 不要 (オプトアウトあり) 不要   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > WRAPUPWRAPUP \n\n重要なポイントを簡潔にまとめてみました。エンジニアの視点からの意見ですので、考慮漏れがあるかもしれませんが、フィードバックや各種レギュレーションの進展を元にして、情報を更新していければと考えています。  \n\n1. https://www.mhlw.go.jp/stf/shingi/0000516275.html ↩ \n2. https://www.mhlw.go.jp/web/t_doc?dataId=00tb3403&dataType=1&page%20No=1 ↩ \n3. https://elaws.e-gov.go.jp/document?lawid=140AC0000000045 ↩ \n4. https://elaws.e-gov.go.jp/document?lawid=429AC0000000028 ↩ \n5. https://elaws.e-gov.go.jp/document?lawid=411AC0000000128 ↩"},"name":"[2022-04-24]ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","tags":["privacy","data-masking","data-engineering","health-informatics"],"childPublishedDate":{"published_on":"2022-04-24T00:00:00.000Z","published_on_unix":1650758400}}}]}},"pageContext":{"number":60}},"staticQueryHashes":[]}