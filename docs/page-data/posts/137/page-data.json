{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/137","result":{"data":{"esaPost":{"number":137,"relative_category":"blog/backend","fields":{"title":"G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","excerpt":"今回は10年以上利用していたG Suite無償版が2022年8月に停止されるとのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。   > PROBLEMPROBLEM \n\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう  > SOLUTIONSOLUTION \n\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。 \n\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。  > 構成構成  > beforebefore \n\n- ドメイン管理 バリュードメイン\n- NSレコード Cloudflare DNS\n- MXレコード G Suite\n- SMTP G Suite  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > 手順手順 \n\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。  > 1. ドメイン管理を整理する1. ドメイン管理を整理する \n\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。 \n\n1. 移管元にてWHOIS情報公開代行の解除\n2. 移管元にてドメインロックの解除\n3. 移管元にて認証鍵 (Auth-Code) を確認\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\n7. 移管元のNSレコードを移管先に変更\n8. 移管先にて認証鍵をつかい移管申請を行う\n9. 移管元に対して移管申請を行った旨をメールにて連携する \n\nCf. \n\n- ドメインの他社への移管 | バリュードメイン ユーザーガイド\n- ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53\n- Easily creating and routing email addresses with Cloudflare Email Routing  > 2. SMTPを設定する2. SMTPを設定する \n\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。 txt\n\n# メールタイプ 通例の取引がメインとなる予定です # ユースケース ## メールを送信する頻度 週に1-2回 ## 受信者リストのメンテナンス方法 四半期に一度の棚卸し ## バウンス対応 当該メールアドレスの削除 ## 申し立て対応 当該メールアドレスへのフラグ管理 ## 解除申請の管理方法 メールでの受付 ## 送信予定のメールサンプル {{宛先名}}様 お世話になっております。 表題の件につきまして1点問い合わせします。 {{問い合わせ内容}} ご不明な点等ございましたらお気軽にお問い合わせ下さい。 どうぞ、よろしくお願い致します。   > 3. G Suiteを退会する3. G Suiteを退会する \n\nG Suiteに依存しているサービスがないか確認し、退会します。  > WRAPUPWRAPUP \n\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。  > 後日談後日談 \n\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。 \n\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。  > beforebefore \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Amazon WorkMail\n- SMTP Amazon WorkMail","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2023/08/16/97367/4c031bba-8ccb-4426-b8df-923a746055a4.png"},"wip":false,"body_md":"今回は10年以上利用していた[G Suite無償版が2022年8月に停止される](https://support.google.com/a/answer/60217)とのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。\r\n\r\n<img alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2023/08/16/97367/4c031bba-8ccb-4426-b8df-923a746055a4.png\">\r\n\r\n# PROBLEM\r\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか\r\n    - Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい\r\n        - G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう\r\n\r\n# SOLUTION\r\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。\r\n\r\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。\r\n\r\n## 構成\r\n### before\r\n- ドメイン管理 バリュードメイン\r\n- NSレコード Cloudflare DNS\r\n- MXレコード G Suite\r\n- SMTP G Suite\r\n\r\n### after\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Cloudflare Email Routing\r\n- SMTP Amazon SES\r\n\r\n## 手順\r\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。\r\n\r\n### 1. ドメイン管理を整理する\r\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。\r\n\r\n1. 移管元にてWHOIS情報公開代行の解除\r\n2. 移管元にてドメインロックの解除\r\n3. 移管元にて認証鍵 (Auth-Code) を確認\r\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\r\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\r\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\r\n7. 移管元のNSレコードを移管先に変更\r\n8. 移管先にて認証鍵をつかい移管申請を行う\r\n9. 移管元に対して移管申請を行った旨をメールにて連携する\r\n\r\nCf.\r\n- [ドメインの他社への移管 | バリュードメイン ユーザーガイド](https://www.value-domain.com/userguide/manual/transferother)\r\n- [ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53](https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html#domain-transfer-to-route-53-request-transfer)\r\n- [Easily creating and routing email addresses with Cloudflare Email Routing](https://blog.cloudflare.com/introducing-email-routing/)\r\n\r\n### 2. SMTPを設定する\r\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。\r\n\r\n```txt\r\n# メールタイプ\r\n通例の取引がメインとなる予定です\r\n\r\n# ユースケース\r\n## メールを送信する頻度\r\n週に1-2回\r\n\r\n## 受信者リストのメンテナンス方法\r\n四半期に一度の棚卸し\r\n\r\n## バウンス対応\r\n当該メールアドレスの削除\r\n\r\n## 申し立て対応\r\n当該メールアドレスへのフラグ管理\r\n\r\n## 解除申請の管理方法\r\nメールでの受付\r\n\r\n## 送信予定のメールサンプル\r\n{{宛先名}}様\r\nお世話になっております。\r\n表題の件につきまして1点問い合わせします。\r\n{{問い合わせ内容}}\r\nご不明な点等ございましたらお気軽にお問い合わせ下さい。\r\nどうぞ、よろしくお願い致します。\r\n```\r\n\r\n## 3. G Suiteを退会する\r\nG Suiteに依存しているサービスがないか確認し、退会します。\r\n\r\n# WRAPUP\r\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。\r\n\r\n## 後日談\r\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。\r\n\r\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。\r\n\r\n### before\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Cloudflare Email Routing\r\n- SMTP Amazon SES\r\n\r\n## after\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Amazon WorkMail\r\n- SMTP Amazon WorkMail\r\n","body_html":"<p data-sourcepos=\"1:1-1:421\">今回は10年以上利用していた<a href=\"https://support.google.com/a/answer/60217\" target=\"_blank\" rel=\"noopener noreferrer\">G Suite無償版が2022年8月に停止される</a>とのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。</p>\n<a href=\"https://img.esa.io/uploads/production/attachments/16651/2023/08/16/97367/4c031bba-8ccb-4426-b8df-923a746055a4.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2023/08/16/97367/4c031bba-8ccb-4426-b8df-923a746055a4.png\"></a>\n<h1 data-sourcepos=\"5:1-5:9\" id=\"1-0-0\" name=\"1-0-0\"><a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"6:1-9:0\">\n<li data-sourcepos=\"6:1-9:0\">10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか\n<ul data-sourcepos=\"7:5-9:0\">\n<li data-sourcepos=\"7:5-9:0\">Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい\n<ul data-sourcepos=\"8:9-9:0\">\n<li data-sourcepos=\"8:9-9:0\">G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう</li>\n</ul></li>\n</ul></li>\n</ul>\n<h1 data-sourcepos=\"10:1-10:10\" id=\"2-0-0\" name=\"2-0-0\"><a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"11:1-11:500\">と言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。</p>\n<p data-sourcepos=\"13:1-13:253\">なお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。</p>\n<h2 data-sourcepos=\"15:1-15:9\" id=\"2-1-0\" name=\"2-1-0\"><a class=\"anchor\" id=\"構成\" name=\"構成\" href=\"#構成\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"構成\"> &gt; 構成</span></a>構成</h2>\n<h3 data-sourcepos=\"16:1-16:10\" id=\"2-1-1\" name=\"2-1-1\"><a class=\"anchor\" id=\"before\" name=\"before\" href=\"#before\" data-position=\"2-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"before\"> &gt; before</span></a>before</h3>\n<ul data-sourcepos=\"17:1-21:0\">\n<li data-sourcepos=\"17:1-17:45\">ドメイン管理 バリュードメイン</li>\n<li data-sourcepos=\"18:1-18:31\">NSレコード Cloudflare DNS</li>\n<li data-sourcepos=\"19:1-19:24\">MXレコード G Suite</li>\n<li data-sourcepos=\"20:1-21:0\">SMTP G Suite</li>\n</ul>\n<h3 data-sourcepos=\"22:1-22:9\" id=\"2-1-2\" name=\"2-1-2\"><a class=\"anchor\" id=\"after\" name=\"after\" href=\"#after\" data-position=\"2-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"after\"> &gt; after</span></a>after</h3>\n<ul data-sourcepos=\"23:1-27:0\">\n<li data-sourcepos=\"23:1-23:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"24:1-24:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"25:1-25:41\">MXレコード Cloudflare Email Routing</li>\n<li data-sourcepos=\"26:1-27:0\">SMTP Amazon SES</li>\n</ul>\n<h2 data-sourcepos=\"28:1-28:9\" id=\"2-2-0\" name=\"2-2-0\"><a class=\"anchor\" id=\"手順\" name=\"手順\" href=\"#手順\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"手順\"> &gt; 手順</span></a>手順</h2>\n<p data-sourcepos=\"29:1-29:141\">方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。</p>\n<h3 data-sourcepos=\"31:1-31:40\" id=\"2-2-1\" name=\"2-2-1\"><a class=\"anchor\" id=\"1. ドメイン管理を整理する\" name=\"1. ドメイン管理を整理する\" href=\"#1. ドメイン管理を整理する\" data-position=\"2-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"1. ドメイン管理を整理する\"> &gt; 1. ドメイン管理を整理する</span></a>1. ドメイン管理を整理する</h3>\n<p data-sourcepos=\"32:1-32:265\">基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。</p>\n<ol data-sourcepos=\"34:1-43:0\">\n<li data-sourcepos=\"34:1-34:50\">移管元にてWHOIS情報公開代行の解除</li>\n<li data-sourcepos=\"35:1-35:48\">移管元にてドメインロックの解除</li>\n<li data-sourcepos=\"36:1-36:49\">移管元にて認証鍵 (Auth-Code) を確認</li>\n<li data-sourcepos=\"37:1-37:99\">移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる</li>\n<li data-sourcepos=\"38:1-38:78\">Cloudflare Email Routingにて転送先メールアドレスを検証する</li>\n<li data-sourcepos=\"39:1-39:83\">移管先にてMXレコードをCloudflare Email Routingのものを設定する</li>\n<li data-sourcepos=\"40:1-40:50\">移管元のNSレコードを移管先に変更</li>\n<li data-sourcepos=\"41:1-41:60\">移管先にて認証鍵をつかい移管申請を行う</li>\n<li data-sourcepos=\"42:1-43:0\">移管元に対して移管申請を行った旨をメールにて連携する</li>\n</ol>\n<p data-sourcepos=\"44:1-44:3\">Cf.</p>\n<ul data-sourcepos=\"45:1-48:0\">\n<li data-sourcepos=\"45:1-45:147\"><a href=\"https://www.value-domain.com/userguide/manual/transferother\" target=\"_blank\" rel=\"noopener noreferrer\">ドメインの他社への移管 | バリュードメイン ユーザーガイド</a></li>\n<li data-sourcepos=\"46:1-46:217\"><a href=\"https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html#domain-transfer-to-route-53-request-transfer\" target=\"_blank\" rel=\"noopener noreferrer\">ドメイン登録の Amazon Route&nbsp;53 への移管 - Amazon Route&nbsp;53</a></li>\n<li data-sourcepos=\"47:1-48:0\"><a href=\"https://blog.cloudflare.com/introducing-email-routing/\" target=\"_blank\" rel=\"noopener noreferrer\">Easily creating and routing email addresses with Cloudflare Email Routing</a></li>\n</ul>\n<h3 data-sourcepos=\"49:1-49:26\" id=\"2-2-2\" name=\"2-2-2\"><a class=\"anchor\" id=\"2. SMTPを設定する\" name=\"2. SMTPを設定する\" href=\"#2. SMTPを設定する\" data-position=\"2-2-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"2. SMTPを設定する\"> &gt; 2. SMTPを設定する</span></a>2. SMTPを設定する</h3>\n<p data-sourcepos=\"50:1-50:226\">最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。</p>\n<div class=\"code-block\" data-sourcepos=\"52:1-79:3\"><div class=\"code-filename\"><i class=\"fa fa-file-code-o\"></i>txt</div><div class=\"highlight\"><pre class=\"highlight plaintext\"><code># メールタイプ\n通例の取引がメインとなる予定です\n\n# ユースケース\n## メールを送信する頻度\n週に1-2回\n\n## 受信者リストのメンテナンス方法\n四半期に一度の棚卸し\n\n## バウンス対応\n当該メールアドレスの削除\n\n## 申し立て対応\n当該メールアドレスへのフラグ管理\n\n## 解除申請の管理方法\nメールでの受付\n\n## 送信予定のメールサンプル\n{{宛先名}}様\nお世話になっております。\n表題の件につきまして1点問い合わせします。\n{{問い合わせ内容}}\nご不明な点等ございましたらお気軽にお問い合わせ下さい。\nどうぞ、よろしくお願い致します。\n</code></pre></div></div>\n<h2 data-sourcepos=\"81:1-81:28\" id=\"2-3-0\" name=\"2-3-0\"><a class=\"anchor\" id=\"3. G Suiteを退会する\" name=\"3. G Suiteを退会する\" href=\"#3. G Suiteを退会する\" data-position=\"2-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"3. G Suiteを退会する\"> &gt; 3. G Suiteを退会する</span></a>3. G Suiteを退会する</h2>\n<p data-sourcepos=\"82:1-82:82\">G Suiteに依存しているサービスがないか確認し、退会します。</p>\n<h1 data-sourcepos=\"84:1-84:8\" id=\"3-0-0\" name=\"3-0-0\"><a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"85:1-85:298\">以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。</p>\n<h2 data-sourcepos=\"87:1-87:12\" id=\"3-1-0\" name=\"3-1-0\"><a class=\"anchor\" id=\"後日談\" name=\"後日談\" href=\"#後日談\" data-position=\"3-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"後日談\"> &gt; 後日談</span></a>後日談</h2>\n<p data-sourcepos=\"88:1-88:401\">Cloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。</p>\n<p data-sourcepos=\"90:1-90:835\">また、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。</p>\n<h3 data-sourcepos=\"92:1-92:10\" id=\"3-1-1\" name=\"3-1-1\"><a class=\"anchor\" id=\"before-1\" name=\"before-1\" href=\"#before-1\" data-position=\"3-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"before\"> &gt; before</span></a>before</h3>\n<ul data-sourcepos=\"93:1-97:0\">\n<li data-sourcepos=\"93:1-93:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"94:1-94:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"95:1-95:41\">MXレコード Cloudflare Email Routing</li>\n<li data-sourcepos=\"96:1-97:0\">SMTP Amazon SES</li>\n</ul>\n<h2 data-sourcepos=\"98:1-98:8\" id=\"3-2-0\" name=\"3-2-0\"><a class=\"anchor\" id=\"after-1\" name=\"after-1\" href=\"#after-1\" data-position=\"3-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"after\"> &gt; after</span></a>after</h2>\n<ul data-sourcepos=\"99:1-102:22\">\n<li data-sourcepos=\"99:1-99:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"100:1-100:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"101:1-101:32\">MXレコード Amazon WorkMail</li>\n<li data-sourcepos=\"102:1-102:22\">SMTP Amazon WorkMail</li>\n</ul>\n","tags":["gsuite","google-workspace","cloudflare","amazon-ses","amazon-workmail"],"updated_at":"2023-08-16T00:31:01+09:00","childPublishedDate":{"published_on":"2022-04-12T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_7b757a0db07cde6a337af7df901ab0c5.jpg"}},"relatedPosts":{"edges":[{"node":{"number":70,"relative_category":"blog/market","fields":{"title":"就職氷河期とは何だったのか","excerpt":"私はいわゆる就職氷河期世代です。周囲から時折漏れ聞こえる不平のような言葉がありますが、それを単なる不平として片付けるのはもったいない気がします。できれば、その中に新しい視点を見つけ、次のチャンスへ繋げたいと思っています。   > PROBLEMPROBLEM \n\n- リセッション（景気後退）に直面した若者たちは、就職に関する不満や不平を抱えている\n- 周囲から聞こえてくる否定的な声が、彼らの意欲や展望を損ねている可能性がある\n- 経済の不安定性や求人の減少などの要因により、採用マーケットが厳しい状況にある\n- 若者たちが持つ可能性や才能が、現状の困難な状況によって十分に引き出されていない  > SOLUTIONSOLUTION \n\nそこで、リセッションと大卒の就職率の関係について、また、就職氷河期が単なる経済後退だけではなかったのか、その歴史をじっくりと解き明かしてみたいと思います。  > そもそもリセッションとは何か、どのタイミングで起きるのかそもそもリセッションとは何か、どのタイミングで起きるのか \n\nリセッションとは、経済の景気が一時的に悪化し、生産や雇用が減少する現象を指します。これは通常、国内総生産（GDP）が連続する2つの四半期でマイナス成長する状態になることで定義されます。リセッションはさまざまな要因によって引き起こされ、金融危機や需要減少などが主な原因とされています。  > 新卒採用マーケットについて新卒採用マーケットについて \n\n新卒採用マーケットとは、新卒学生が卒業後に就職を選ぶ際に選択できる求人の数や質を指します。景気の好悪や産業の動向などが影響を及ぼし、景気が良い時には多くの求人が出てくる一方、景気が悪化すると求人数が減少し、競争も激化します。  > リセッションと大卒の就職率の関係とその歴史リセッションと大卒の就職率の関係とその歴史 \n\n統計局の「学校基本調査 年次統計総括表 5 就職率（1950年～）」 から得られたデータに基づくチャートを見ると、リセッションが大卒の就職率にどのような影響を与えたのかがはっきりと分かります。     年 イベント 翌々年大卒の就職率 内閣     1987 ブラックマンデー 79.6% 中曽根/竹下   1997 アジア通貨危機 60.1% 橋本内閣   2000-2004 就職氷河期 55.8% 小渕/森内閣   2008 リーマンショック 60.8% 福田内閣   2020 コロナクラッシュ ??? 安倍/管内閣    \n\n1987年のブラックマンデーに起因するリセッションでは、大卒の就職率が79.6%まで落ち込みました。その後もアジア通貨危機やリーマンショック、そして最近のコロナクラッシュによって、大卒の就職率は変動しています。特に2000年から2004年にかけての就職氷河期では、大卒の就職率が55.8%にまで低下しました。  > アジア通貨危機はなぜ尾を引いていたのかアジア通貨危機はなぜ尾を引いていたのか \n\nアジア通貨危機は、1997年にアジア諸国で発生した経済危機であり、その影響は就職氷河期世代にも長期間にわたって影響を及ぼしました。この危機が尾を引いた理由は以下の点にあります。 \n\n1. 金融システムの崩壊: アジア通貨危機は、一部のアジア諸国で急激な通貨の暴落や金融システムの崩壊を引き起こしました。このため、企業や金融機関が多額の損失を被り、経済全体が深刻な打撃を受けました。経済基盤の崩壊は、就職機会の減少や企業の採用停止などをもたらしました。 \n2. 経済の停滞: アジア諸国の経済は通貨危機後、停滞期に入りました。このため、企業の業績が悪化し、新卒採用の余裕がなくなりました。経済の停滞は、若者たちの就職機会を減少させる一因となりました。 \n3. 信用の低下: 通貨危機により多くの企業が経営危機に陥り、信用が低下しました。これによって、企業が採用活動を控える傾向が生まれ、新卒の求人数が減少しました。就職氷河期世代は、この信用の低下によって求人市場が厳しさを増した現実を直面しました。 \n4. 失業率の上昇: アジア通貨危機により多くの企業が倒産し、失業率が上昇しました。失業者が増加する状況は、求職者同士の競争を激化させ、新卒の就職活動を難しくしました。この影響は就職氷河期世代にも及びました。  \n\nこれらの要因により、アジア通貨危機は長期的な影響をもたらし、若者たちの就職機会やキャリア形成に深刻な影響を与えました。しかし、この困難な状況に対して克服の道を見つけ、自己成長と前向きな姿勢を持つことが、就職氷河期世代の未来への道を切り拓く鍵となったのです。  > WRAPUPWRAPUP \n\n今回は、リセッションの歴史とその背後にある要因について深く考察してみました。リセッションと新卒採用マーケットの動向が、大卒の就職率にどのような影響を与えるかを理解することは、今後のキャリアにおいて重要です。常に社会経済の変動に柔軟に対応し、新たな視点を持って未来を切り開いていくことが大切です。"},"name":"[2021-01-23]就職氷河期とは何だったのか","tags":["labor-economics","recession","employment-ice-age"],"childPublishedDate":{"published_on":"2021-01-23T00:00:00.000Z","published_on_unix":1611360000}}},{"node":{"number":90,"relative_category":"blog/backend","fields":{"title":"yubinbango-dataをどうやって生成するか","excerpt":"郵便番号から住所を補完するライブラリ「yubinbango」を継続的に利用するにあたり、当該ライブラリが参照している郵便データ「yubinbango-data」を自前でメンテナンスできるか確認します。   > PROBLEMPROBLEM \n\n- 「yubinbango/yubinbango」を利用するにあたり「yubinbango/yubinbango-data」の更新が継続的に行われるかサービス継続性の懸念がある そこで自前でメンテナンスをする場合の対処方法を事前に知っておきたい \n- そこで自前でメンテナンスをする場合の対処方法を事前に知っておきたい  > SOLUTIONSOLUTION \n\nというわけで、yubinbango-dataの中身であるken_all.csvとjigyosyo.csvを安定して変換する方法を確認します。  > ken_all.csvを正規化するken_all.csvを正規化する \n\nyubinbango-dataのken_all.csvの部分はアイビスが提供しているzipcloudを参照しているようなので、そちらに合わせて利用します。 sh\n\nsudo apt install nkf { curl -sSL \"http://zipcloud.ibsnet.co.jp/zipcodedata/download?di=1625040649647\" -o ./x_ken_all.zip; unzip -p x_ken_all.zip | nkf -w; rm x_ken_all.zip } >ken_all.csv  \n\nzipcloudを使うことに抵抗がある場合はgokenallもありますが、正規化によって一つの郵便番号に複数の町名番地が存在するため郵便番号をキーとするyubinbango-dataに変換する際には工夫が必要です。 sh\n\ngo get github.com/oirik/gokenall/cmd/kenall { kenall download -x | kenall normalize } >ken_all.csv   > jigyosyo.csvを取得するjigyosyo.csvを取得する \n\njigyosyo.csvは特に正規化は必要ないです。 sh\n\n{ curl -sSL https://www.post.japanpost.jp/zipcode/dl/jigyosyo/zip/jigyosyo.zip -o ./jigyosyo.zip; unzip -p jigyosyo.zip | nkf -w; rm jigyosyo.zip } >jigyosyo.csv   > yubinbango-dataを生成するyubinbango-dataを生成する \n\nken_all.csvとjigyosyo.csvをUNIONしてjqで郵便番号をキーとしたオブジェクトに変換します。一部buildingカラムがnullを持っておりyubinbango-dataと異なる部分はありますが、大凡同等の状態にまで持っていくことが出来ました。 sh\n\nbrew install noborus/tap/trdsql for i in {001..999}; do trdsql -ojson \" SELECT * FROM ( SELECT c3 zip, c8 city, c9 town, NULL building FROM ken_all.csv UNION SELECT c8 zip, c5 city, c6 town, c7 building FROM jigyosyo.csv ) WHERE SUBSTRING(zip,0,4) = '$i' ORDER BY zip ASC \" \\ | jq --compact-output ' . | to_entries | map({ (.value.zip): [1, .value.city, .value.town, .value.building] }) | add ' \\ | sed -E 's/(.+?)/$yubin(\\1);/g' \\ >$i.js; done   > WRAPUPWRAPUP \n\n昔から何かと話題に上がるken_all.csvですが、正規化のサービスに加えCSV用SQLクライアントとjqの登場により思った以上に簡単に変換することができました。"},"name":"[2021-07-25]yubinbango-dataをどうやって生成するか","tags":["yubinbango","ken_all.csv","jq","trdsql"],"childPublishedDate":{"published_on":"2021-07-25T00:00:00.000Z","published_on_unix":1627171200}}},{"node":{"number":67,"relative_category":"blog/frontend","fields":{"title":"esaをHeadless CMSとして使う","excerpt":"最近仕事の同僚からHeadless CMS という言葉を聞いていて「自分には関係ないな」と距離を取っていたのですが、なぜか回り回って自分からHeadless CMSを作ることになりました。世の中何が起きるか分からないですね。   > PROBLEMPROBLEM \n\n- ブログを普段書かない人なのだが、よそ向けに情報発信する必要が出てきた とは言っても、今までMarkdownをJekyllで管理していたので画像を貼り付けるのが手間でモチベーションが大きく下がっていた さらにPlantUMLを出力するのも手間、試行錯誤した末にいずれも付け焼き刃で、esaの操作感に勝てるものはなかった \n- とは言っても、今までMarkdownをJekyllで管理していたので画像を貼り付けるのが手間でモチベーションが大きく下がっていた さらにPlantUMLを出力するのも手間、試行錯誤した末にいずれも付け焼き刃で、esaの操作感に勝てるものはなかった \n- さらにPlantUMLを出力するのも手間、試行錯誤した末にいずれも付け焼き刃で、esaの操作感に勝てるものはなかった  > SOLUTIONSOLUTION \n\nというわけで、esaをHeadless CMSとして使うことにしました。 \n\nやってることは昔のMovableTypeそのもので懐かしかったです。コンテンツを別システムで管理しビルドサーバーに当該コンテンツを流し込みリビルド、最後にホストサーバーにアップロードというワークフロー。今はJAMStackの文脈で語られているようです。 \n\nこのHeadless CMSが昔と違うのはコンテンツ作成に集中できること。CI周りが発達したので一度ワークフローを組み立てれば後は自動でコンテンツを生成できます。  > やり方やり方 \n\n- esa.io でゆるふわ情報共有 - Middleman Blog への Export サンプル付き #esa_io - Qiita\n- 技術ブログを支える技術（Gatsby + esaio） - mottox2 blog\n- Next.jsとesaを使った個人サイト構築 | corocn.dev \n\nそれほど時間をかけられなかったので、上記3記事の中で手軽さを考慮しmottox2さんのソースコードを拝借しました。ありがとうございます。 \n\n- 作ったレポジトリ：nabinno/nabinno.github.io: On Blahfe - Nab's Github Pages  > シークエンス図シークエンス図 \n\n私が手を入れたのはコンポーネントを削りGatsby Blog Starterに寄せたのと、デプロイ方法を使い慣れたCircleCIに変えたくらいです。 \n\nGitHub PagesにはVercelのような便利なWebhookがないので、esaで実装されたGitHub Webhook連携を使いそれをトリガーにCircleCIジョブを走らせています。 \n\n  > CircleCIジョブCircleCIジョブ \n\nまた、CircleCIジョブは何の変哲もないもので、NodeJSを叩いてGitプッシュしているくらいです。先ほどのGitHub Webhookと似た感じの泥臭いワークフローは [skip ci] コメントの追加があります。当該コメントを入れないとジョブが再帰的に走り続けるので出口で明示してあります。 yml\n\nversion: 2.1 jobs: build_deploy: docker: - image: circleci/node:12.4 steps: - checkout - run: name: Install NPM command: npm install - run: name: Build command: npm run clean && npm run build - add_ssh_keys: fingerprints: - \"{foo}\" - deploy: name: Deploy command: | git config --global user.email \"nab+circleci@blahfe.com\" git config --global user.name \"nabinno+circleci\" git add . git commit -m \"[skip ci]Run npm run clean && npm run build.\" git push origin master workflows: build_deploy: jobs: - build_deploy: filters: branches: only: master   > WRAPUPWRAPUP \n\nとまあ大した作業内容ではないのですが、久しぶりに昔懐かしのMovableTypeのリビルドを思い出しつつ、副産物として全く縁遠かったNetlifyとVercelの位置づけを薄らと感じ取れました。"},"name":"[2021-01-18]esaをHeadless CMSとして使う","tags":["gatsby","esa","headless-cms","cms"],"childPublishedDate":{"published_on":"2021-01-18T00:00:00.000Z","published_on_unix":1610928000}}}]}},"pageContext":{"number":137}},"staticQueryHashes":[]}